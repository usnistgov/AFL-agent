{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "2fad641c",
   "metadata": {},
   "source": [
    "[![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/usnistgov/AFL-agent/blob/main/docs/source/tutorials/autosas_tutorial.ipynb)\n",
    "\n",
    "# Basic Fitting with AutoSAS\n",
    "\n",
    "This tutorial demonstrates how to use AutoSAS to fit small-angle scattering (SAS) data with different models. We'll explore how to:\n",
    "- Load and prepare SAS data\n",
    "- Set up an AutoSAS fit for a single model\n",
    "- Compare and evaluate the fits"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ced056ca",
   "metadata": {},
   "source": [
    "## Google Colab Setup\n",
    "\n",
    "Only uncomment and run the next cell if you are running this notebook in Google Colab or if don't already have the AFL-agent package installed."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5543936a",
   "metadata": {},
   "outputs": [],
   "source": [
    "# !pip install git+https://github.com/usnistgov/AFL-agent.git"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "607446da",
   "metadata": {},
   "source": [
    "## Getting Started\n",
    "\n",
    "First, let's import the necessary packages and load our example dataset:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "0a3a2890",
   "metadata": {},
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "\n",
    "from AFL.double_agent import *\n",
    "from AFL.double_agent.AutoSAS import AutoSAS\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c7496ebc",
   "metadata": {},
   "source": [
    "Next, let's load the example dataset. We'll subselect only part of the dataset to work with"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "6a0749bd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div><svg style=\"position: absolute; width: 0; height: 0; overflow: hidden\">\n",
       "<defs>\n",
       "<symbol id=\"icon-database\" viewBox=\"0 0 32 32\">\n",
       "<path d=\"M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z\"></path>\n",
       "<path d=\"M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "<path d=\"M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "</symbol>\n",
       "<symbol id=\"icon-file-text2\" viewBox=\"0 0 32 32\">\n",
       "<path d=\"M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z\"></path>\n",
       "<path d=\"M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "</symbol>\n",
       "</defs>\n",
       "</svg>\n",
       "<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.\n",
       " *\n",
       " */\n",
       "\n",
       ":root {\n",
       "  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));\n",
       "  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));\n",
       "  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));\n",
       "  --xr-border-color: var(--jp-border-color2, #e0e0e0);\n",
       "  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);\n",
       "  --xr-background-color: var(--jp-layout-color0, white);\n",
       "  --xr-background-color-row-even: var(--jp-layout-color1, white);\n",
       "  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);\n",
       "}\n",
       "\n",
       "html[theme=\"dark\"],\n",
       "html[data-theme=\"dark\"],\n",
       "body[data-theme=\"dark\"],\n",
       "body.vscode-dark {\n",
       "  --xr-font-color0: rgba(255, 255, 255, 1);\n",
       "  --xr-font-color2: rgba(255, 255, 255, 0.54);\n",
       "  --xr-font-color3: rgba(255, 255, 255, 0.38);\n",
       "  --xr-border-color: #1f1f1f;\n",
       "  --xr-disabled-color: #515151;\n",
       "  --xr-background-color: #111111;\n",
       "  --xr-background-color-row-even: #111111;\n",
       "  --xr-background-color-row-odd: #313131;\n",
       "}\n",
       "\n",
       ".xr-wrap {\n",
       "  display: block !important;\n",
       "  min-width: 300px;\n",
       "  max-width: 700px;\n",
       "}\n",
       "\n",
       ".xr-text-repr-fallback {\n",
       "  /* fallback to plain text repr when CSS is not injected (untrusted notebook) */\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-header {\n",
       "  padding-top: 6px;\n",
       "  padding-bottom: 6px;\n",
       "  margin-bottom: 4px;\n",
       "  border-bottom: solid 1px var(--xr-border-color);\n",
       "}\n",
       "\n",
       ".xr-header > div,\n",
       ".xr-header > ul {\n",
       "  display: inline;\n",
       "  margin-top: 0;\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-obj-type,\n",
       ".xr-array-name {\n",
       "  margin-left: 2px;\n",
       "  margin-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-obj-type {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-sections {\n",
       "  padding-left: 0 !important;\n",
       "  display: grid;\n",
       "  grid-template-columns: 150px auto auto 1fr 0 20px 0 20px;\n",
       "}\n",
       "\n",
       ".xr-section-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-section-item input {\n",
       "  display: inline-block;\n",
       "  opacity: 0;\n",
       "  height: 0;\n",
       "}\n",
       "\n",
       ".xr-section-item input + label {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label {\n",
       "  cursor: pointer;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-item input:focus + label {\n",
       "  border: 2px solid var(--xr-font-color0);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label:hover {\n",
       "  color: var(--xr-font-color0);\n",
       "}\n",
       "\n",
       ".xr-section-summary {\n",
       "  grid-column: 1;\n",
       "  color: var(--xr-font-color2);\n",
       "  font-weight: 500;\n",
       "}\n",
       "\n",
       ".xr-section-summary > span {\n",
       "  display: inline-block;\n",
       "  padding-left: 0.5em;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in + label:before {\n",
       "  display: inline-block;\n",
       "  content: \"►\";\n",
       "  font-size: 11px;\n",
       "  width: 15px;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label:before {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label:before {\n",
       "  content: \"▼\";\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label > span {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-summary,\n",
       ".xr-section-inline-details {\n",
       "  padding-top: 4px;\n",
       "  padding-bottom: 4px;\n",
       "}\n",
       "\n",
       ".xr-section-inline-details {\n",
       "  grid-column: 2 / -1;\n",
       "}\n",
       "\n",
       ".xr-section-details {\n",
       "  display: none;\n",
       "  grid-column: 1 / -1;\n",
       "  margin-bottom: 5px;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked ~ .xr-section-details {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-array-wrap {\n",
       "  grid-column: 1 / -1;\n",
       "  display: grid;\n",
       "  grid-template-columns: 20px auto;\n",
       "}\n",
       "\n",
       ".xr-array-wrap > label {\n",
       "  grid-column: 1;\n",
       "  vertical-align: top;\n",
       "}\n",
       "\n",
       ".xr-preview {\n",
       "  color: var(--xr-font-color3);\n",
       "}\n",
       "\n",
       ".xr-array-preview,\n",
       ".xr-array-data {\n",
       "  padding: 0 5px !important;\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-array-data,\n",
       ".xr-array-in:checked ~ .xr-array-preview {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-array-in:checked ~ .xr-array-data,\n",
       ".xr-array-preview {\n",
       "  display: inline-block;\n",
       "}\n",
       "\n",
       ".xr-dim-list {\n",
       "  display: inline-block !important;\n",
       "  list-style: none;\n",
       "  padding: 0 !important;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list li {\n",
       "  display: inline-block;\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list:before {\n",
       "  content: \"(\";\n",
       "}\n",
       "\n",
       ".xr-dim-list:after {\n",
       "  content: \")\";\n",
       "}\n",
       "\n",
       ".xr-dim-list li:not(:last-child):after {\n",
       "  content: \",\";\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-has-index {\n",
       "  font-weight: bold;\n",
       "}\n",
       "\n",
       ".xr-var-list,\n",
       ".xr-var-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-var-item > div,\n",
       ".xr-var-item label,\n",
       ".xr-var-item > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-even);\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-var-item > .xr-var-name:hover span {\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-var-list > li:nth-child(odd) > div,\n",
       ".xr-var-list > li:nth-child(odd) > label,\n",
       ".xr-var-list > li:nth-child(odd) > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-odd);\n",
       "}\n",
       "\n",
       ".xr-var-name {\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-var-dims {\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-var-dtype {\n",
       "  grid-column: 3;\n",
       "  text-align: right;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-var-preview {\n",
       "  grid-column: 4;\n",
       "}\n",
       "\n",
       ".xr-index-preview {\n",
       "  grid-column: 2 / 5;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-var-name,\n",
       ".xr-var-dims,\n",
       ".xr-var-dtype,\n",
       ".xr-preview,\n",
       ".xr-attrs dt {\n",
       "  white-space: nowrap;\n",
       "  overflow: hidden;\n",
       "  text-overflow: ellipsis;\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-var-name:hover,\n",
       ".xr-var-dims:hover,\n",
       ".xr-var-dtype:hover,\n",
       ".xr-attrs dt:hover {\n",
       "  overflow: visible;\n",
       "  width: auto;\n",
       "  z-index: 1;\n",
       "}\n",
       "\n",
       ".xr-var-attrs,\n",
       ".xr-var-data,\n",
       ".xr-index-data {\n",
       "  display: none;\n",
       "  background-color: var(--xr-background-color) !important;\n",
       "  padding-bottom: 5px !important;\n",
       "}\n",
       "\n",
       ".xr-var-attrs-in:checked ~ .xr-var-attrs,\n",
       ".xr-var-data-in:checked ~ .xr-var-data,\n",
       ".xr-index-data-in:checked ~ .xr-index-data {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       ".xr-var-data > table {\n",
       "  float: right;\n",
       "}\n",
       "\n",
       ".xr-var-name span,\n",
       ".xr-var-data,\n",
       ".xr-index-name div,\n",
       ".xr-index-data,\n",
       ".xr-attrs {\n",
       "  padding-left: 25px !important;\n",
       "}\n",
       "\n",
       ".xr-attrs,\n",
       ".xr-var-attrs,\n",
       ".xr-var-data,\n",
       ".xr-index-data {\n",
       "  grid-column: 1 / -1;\n",
       "}\n",
       "\n",
       "dl.xr-attrs {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  display: grid;\n",
       "  grid-template-columns: 125px auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt,\n",
       ".xr-attrs dd {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  float: left;\n",
       "  padding-right: 10px;\n",
       "  width: auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt {\n",
       "  font-weight: normal;\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-attrs dt:hover span {\n",
       "  display: inline-block;\n",
       "  background: var(--xr-background-color);\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-attrs dd {\n",
       "  grid-column: 2;\n",
       "  white-space: pre-wrap;\n",
       "  word-break: break-all;\n",
       "}\n",
       "\n",
       ".xr-icon-database,\n",
       ".xr-icon-file-text2,\n",
       ".xr-no-icon {\n",
       "  display: inline-block;\n",
       "  vertical-align: middle;\n",
       "  width: 1em;\n",
       "  height: 1.5em !important;\n",
       "  stroke-width: 0;\n",
       "  stroke: currentColor;\n",
       "  fill: currentColor;\n",
       "}\n",
       "</style><pre class='xr-text-repr-fallback'>&lt;xarray.Dataset&gt; Size: 17kB\n",
       "Dimensions:  (sample: 10, q: 100)\n",
       "Coordinates:\n",
       "  * q        (q) float64 800B 0.001 0.001072 0.00115 ... 0.8697 0.9326 1.0\n",
       "Dimensions without coordinates: sample\n",
       "Data variables:\n",
       "    I        (sample, q) float64 8kB 5.465e+03 4.598e+03 3.859e+03 ... 1.08 1.03\n",
       "    dI       (sample, q) float64 8kB 545.9 429.3 342.6 ... 0.1025 0.1025 0.1025\n",
       "    model    (sample) object 80B &#x27;surface_fractal&#x27; ... &#x27;surface_fractal&#x27;</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.Dataset</div></div><ul class='xr-sections'><li class='xr-section-item'><input id='section-4d174abd-4579-428d-8567-163caac45e2f' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-4d174abd-4579-428d-8567-163caac45e2f' class='xr-section-summary'  title='Expand/collapse section'>Dimensions:</label><div class='xr-section-inline-details'><ul class='xr-dim-list'><li><span>sample</span>: 10</li><li><span class='xr-has-index'>q</span>: 100</li></ul></div><div class='xr-section-details'></div></li><li class='xr-section-item'><input id='section-53b0af27-cd9d-48ae-93d1-a6b66b4d2176' class='xr-section-summary-in' type='checkbox'  checked><label for='section-53b0af27-cd9d-48ae-93d1-a6b66b4d2176' class='xr-section-summary' >Coordinates: <span>(1)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>q</span></div><div class='xr-var-dims'>(q)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>0.001 0.001072 ... 0.9326 1.0</div><input id='attrs-bd500c0e-ebff-4644-8f87-b94e9eb798b1' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-bd500c0e-ebff-4644-8f87-b94e9eb798b1' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-818a7046-8050-4d11-aea7-1b9f3c199f0e' class='xr-var-data-in' type='checkbox'><label for='data-818a7046-8050-4d11-aea7-1b9f3c199f0e' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([0.001   , 0.001072, 0.00115 , 0.001233, 0.001322, 0.001417, 0.00152 ,\n",
       "       0.00163 , 0.001748, 0.001874, 0.002009, 0.002154, 0.00231 , 0.002477,\n",
       "       0.002656, 0.002848, 0.003054, 0.003275, 0.003511, 0.003765, 0.004037,\n",
       "       0.004329, 0.004642, 0.004977, 0.005337, 0.005722, 0.006136, 0.006579,\n",
       "       0.007055, 0.007565, 0.008111, 0.008697, 0.009326, 0.01    , 0.010723,\n",
       "       0.011498, 0.012328, 0.013219, 0.014175, 0.015199, 0.016298, 0.017475,\n",
       "       0.018738, 0.020092, 0.021544, 0.023101, 0.024771, 0.026561, 0.02848 ,\n",
       "       0.030539, 0.032745, 0.035112, 0.037649, 0.04037 , 0.043288, 0.046416,\n",
       "       0.04977 , 0.053367, 0.057224, 0.061359, 0.065793, 0.070548, 0.075646,\n",
       "       0.081113, 0.086975, 0.09326 , 0.1     , 0.107227, 0.114976, 0.123285,\n",
       "       0.132194, 0.141747, 0.151991, 0.162975, 0.174753, 0.187382, 0.200923,\n",
       "       0.215443, 0.231013, 0.247708, 0.265609, 0.284804, 0.305386, 0.327455,\n",
       "       0.351119, 0.376494, 0.403702, 0.432876, 0.464159, 0.497702, 0.53367 ,\n",
       "       0.572237, 0.613591, 0.657933, 0.70548 , 0.756463, 0.811131, 0.869749,\n",
       "       0.932603, 1.      ])</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-d6278ecf-c439-4ae4-b20e-a86a3d1815c0' class='xr-section-summary-in' type='checkbox'  checked><label for='section-d6278ecf-c439-4ae4-b20e-a86a3d1815c0' class='xr-section-summary' >Data variables: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span>I</span></div><div class='xr-var-dims'>(sample, q)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>5.465e+03 4.598e+03 ... 1.08 1.03</div><input id='attrs-5957302e-9bb1-4cd6-9a2e-4be5e29bb3ad' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-5957302e-9bb1-4cd6-9a2e-4be5e29bb3ad' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-07168c48-df0e-490c-bbf7-3b2391c828bd' class='xr-var-data-in' type='checkbox'><label for='data-07168c48-df0e-490c-bbf7-3b2391c828bd' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[5.46461639e+03, 4.59795217e+03, 3.85947764e+03, 2.63116991e+03,\n",
       "        2.07431068e+03, 1.90372910e+03, 1.52919611e+03, 1.18680603e+03,\n",
       "        7.97363765e+02, 7.32615952e+02, 5.66816880e+02, 4.94345998e+02,\n",
       "        3.36397055e+02, 2.37278594e+02, 2.42920544e+02, 1.34983362e+02,\n",
       "        1.34237874e+02, 1.03846296e+02, 8.29189655e+01, 6.83701899e+01,\n",
       "        6.63256975e+01, 5.12285645e+01, 3.69922707e+01, 3.39076629e+01,\n",
       "        2.18803647e+01, 1.73545761e+01, 1.72935304e+01, 1.36371299e+01,\n",
       "        9.99274093e+00, 7.57838776e+00, 8.03734181e+00, 4.79334463e+00,\n",
       "        4.52480217e+00, 4.12653133e+00, 4.02874009e+00, 3.03039434e+00,\n",
       "        2.64512398e+00, 2.08340062e+00, 2.06956646e+00, 1.77666195e+00,\n",
       "        1.34466308e+00, 1.58804022e+00, 1.50286123e+00, 1.39259080e+00,\n",
       "        1.22861525e+00, 1.06093375e+00, 8.70672131e-01, 1.11665926e+00,\n",
       "        1.18944518e+00, 1.15730959e+00, 1.12048958e+00, 1.01513955e+00,\n",
       "        1.12226043e+00, 1.09654942e+00, 9.54941615e-01, 1.05883843e+00,\n",
       "        9.34551784e-01, 1.03722137e+00, 8.53878098e-01, 8.59529011e-01,\n",
       "        1.08092481e+00, 1.06762940e+00, 1.03679594e+00, 9.82713801e-01,\n",
       "        7.40669867e-01, 9.65608102e-01, 1.01661701e+00, 9.20115667e-01,\n",
       "        9.02574126e-01, 1.11192951e+00, 9.65555406e-01, 1.01544208e+00,\n",
       "        1.04633562e+00, 8.73818665e-01, 9.89752619e-01, 1.09906348e+00,\n",
       "        1.14751493e+00, 9.74729174e-01, 9.47722591e-01, 9.96916206e-01,\n",
       "...\n",
       "        1.68659503e+01, 1.21223648e+01, 1.11133601e+01, 9.10365006e+00,\n",
       "        6.73558113e+00, 6.97103702e+00, 5.41643178e+00, 4.37274298e+00,\n",
       "        3.67703675e+00, 3.36002895e+00, 2.99974570e+00, 2.50035574e+00,\n",
       "        1.61113936e+00, 2.02067402e+00, 1.56634607e+00, 1.64317783e+00,\n",
       "        1.33669955e+00, 1.24903013e+00, 1.54373516e+00, 1.26632138e+00,\n",
       "        1.20500451e+00, 1.26988377e+00, 1.13266379e+00, 1.38916806e+00,\n",
       "        1.09384785e+00, 1.14612961e+00, 1.19638613e+00, 1.25087240e+00,\n",
       "        9.88833790e-01, 1.01563593e+00, 1.18758077e+00, 1.13285017e+00,\n",
       "        1.15581064e+00, 8.97716447e-01, 1.19776362e+00, 9.56081475e-01,\n",
       "        1.05285363e+00, 1.01616943e+00, 9.39712262e-01, 8.83827077e-01,\n",
       "        8.49052391e-01, 1.03995513e+00, 8.70505949e-01, 9.10332790e-01,\n",
       "        1.00401302e+00, 7.55334842e-01, 1.10578357e+00, 7.78503133e-01,\n",
       "        1.01759208e+00, 1.02694203e+00, 1.08046813e+00, 1.02094522e+00,\n",
       "        1.23201786e+00, 1.04727214e+00, 1.13305453e+00, 9.50861724e-01,\n",
       "        1.03736647e+00, 1.18358616e+00, 1.00058403e+00, 1.04463379e+00,\n",
       "        1.12544799e+00, 9.48836608e-01, 8.03361737e-01, 1.05108694e+00,\n",
       "        1.12621544e+00, 8.86376068e-01, 1.09356943e+00, 1.09425776e+00,\n",
       "        7.91869799e-01, 9.28915087e-01, 9.84303854e-01, 1.00646082e+00,\n",
       "        9.48707402e-01, 9.43185820e-01, 1.19617226e+00, 1.01384350e+00,\n",
       "        9.53633740e-01, 1.02064675e+00, 1.07991038e+00, 1.03015655e+00]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>dI</span></div><div class='xr-var-dims'>(sample, q)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>545.9 429.3 342.6 ... 0.1025 0.1025</div><input id='attrs-26e9b9b9-edcf-4379-ab6c-d0cc12247e42' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-26e9b9b9-edcf-4379-ab6c-d0cc12247e42' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-f65f3816-a404-4421-9017-f27e16cc5900' class='xr-var-data-in' type='checkbox'><label for='data-f65f3816-a404-4421-9017-f27e16cc5900' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[5.45853473e+02, 4.29328308e+02, 3.42588723e+02, 2.73192209e+02,\n",
       "        2.17856990e+02, 1.73733931e+02, 1.38551196e+02, 1.10497276e+02,\n",
       "        8.81277103e+01, 7.02907222e+01, 5.60679092e+01, 4.47269581e+01,\n",
       "        3.56839388e+01, 2.84732387e+01, 2.27235887e+01, 1.81389471e+01,\n",
       "        1.44832570e+01, 1.15682920e+01, 9.24396451e+00, 7.39059804e+00,\n",
       "        5.91276532e+00, 4.73437476e+00, 3.79475264e+00, 3.04551910e+00,\n",
       "        2.44809713e+00, 1.97172629e+00, 1.59187891e+00, 1.28899714e+00,\n",
       "        1.04748604e+00, 8.54910523e-01, 7.01355136e-01, 5.78913526e-01,\n",
       "        4.81281341e-01, 4.03431633e-01, 3.41356027e-01, 2.91858335e-01,\n",
       "        2.52389990e-01, 2.20918819e-01, 1.95824416e-01, 1.75814703e-01,\n",
       "        1.59859408e-01, 1.47137015e-01, 1.36992465e-01, 1.28903429e-01,\n",
       "        1.22453414e-01, 1.17310317e-01, 1.13209327e-01, 1.09939290e-01,\n",
       "        1.07331836e-01, 1.05252710e-01, 1.03594863e-01, 1.02272932e-01,\n",
       "        1.01218855e-01, 1.00378357e-01, 9.97081631e-02, 9.91737655e-02,\n",
       "        9.87476489e-02, 9.84078731e-02, 9.81369435e-02, 9.79209104e-02,\n",
       "        9.77486504e-02, 9.76112942e-02, 9.75017694e-02, 9.74144368e-02,\n",
       "        9.73447998e-02, 9.72892728e-02, 9.72449968e-02, 9.72096921e-02,\n",
       "        9.71815409e-02, 9.71590938e-02, 9.71411950e-02, 9.71269229e-02,\n",
       "        9.71155427e-02, 9.71064683e-02, 9.70992326e-02, 9.70934630e-02,\n",
       "        9.70888625e-02, 9.70851941e-02, 9.70822691e-02, 9.70799367e-02,\n",
       "...\n",
       "        1.60288535e+00, 1.32000197e+00, 1.09045307e+00, 9.04183049e-01,\n",
       "        7.53032148e-01, 6.30379054e-01, 5.30850825e-01, 4.50087527e-01,\n",
       "        3.84551243e-01, 3.31371090e-01, 2.88217459e-01, 2.53199961e-01,\n",
       "        2.24784619e-01, 2.01726672e-01, 1.83016041e-01, 1.67833091e-01,\n",
       "        1.55512715e-01, 1.45515208e-01, 1.37402619e-01, 1.30819567e-01,\n",
       "        1.25477676e-01, 1.21142939e-01, 1.17625467e-01, 1.14771176e-01,\n",
       "        1.12455029e-01, 1.10575566e-01, 1.09050454e-01, 1.07812885e-01,\n",
       "        1.06808646e-01, 1.05993745e-01, 1.05332484e-01, 1.04795897e-01,\n",
       "        1.04360477e-01, 1.04007151e-01, 1.03720440e-01, 1.03487786e-01,\n",
       "        1.03298995e-01, 1.03145799e-01, 1.03021487e-01, 1.02920612e-01,\n",
       "        1.02838756e-01, 1.02772333e-01, 1.02718434e-01, 1.02674696e-01,\n",
       "        1.02639205e-01, 1.02610405e-01, 1.02587035e-01, 1.02568071e-01,\n",
       "        1.02552683e-01, 1.02540196e-01, 1.02530063e-01, 1.02521841e-01,\n",
       "        1.02515169e-01, 1.02509755e-01, 1.02505361e-01, 1.02501796e-01,\n",
       "        1.02498903e-01, 1.02496556e-01, 1.02494651e-01, 1.02493105e-01,\n",
       "        1.02491851e-01, 1.02490833e-01, 1.02490007e-01, 1.02489337e-01,\n",
       "        1.02488793e-01, 1.02488352e-01, 1.02487994e-01, 1.02487703e-01,\n",
       "        1.02487467e-01, 1.02487276e-01, 1.02487121e-01, 1.02486995e-01,\n",
       "        1.02486892e-01, 1.02486809e-01, 1.02486742e-01, 1.02486687e-01,\n",
       "        1.02486643e-01, 1.02486607e-01, 1.02486578e-01, 1.02486554e-01]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>model</span></div><div class='xr-var-dims'>(sample)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>&#x27;surface_fractal&#x27; ... &#x27;surface_f...</div><input id='attrs-5e6552eb-a54e-477a-b010-983cc9380c11' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-5e6552eb-a54e-477a-b010-983cc9380c11' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-9d765da9-88e3-4972-b8de-4f947a57026e' class='xr-var-data-in' type='checkbox'><label for='data-9d765da9-88e3-4972-b8de-4f947a57026e' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;surface_fractal&#x27;, &#x27;surface_fractal&#x27;, &#x27;surface_fractal&#x27;,\n",
       "       &#x27;surface_fractal&#x27;, &#x27;surface_fractal&#x27;, &#x27;surface_fractal&#x27;,\n",
       "       &#x27;surface_fractal&#x27;, &#x27;surface_fractal&#x27;, &#x27;surface_fractal&#x27;,\n",
       "       &#x27;surface_fractal&#x27;], dtype=object)</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-178db3a8-f705-402b-a553-ab84770eb194' class='xr-section-summary-in' type='checkbox'  ><label for='section-178db3a8-f705-402b-a553-ab84770eb194' class='xr-section-summary' >Indexes: <span>(1)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-index-name'><div>q</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-97d29c93-9eb0-4456-9142-89a2b0880e5f' class='xr-index-data-in' type='checkbox'/><label for='index-97d29c93-9eb0-4456-9142-89a2b0880e5f' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([                0.001, 0.0010722672220103231, 0.0011497569953977356,\n",
       "       0.0012328467394420659, 0.0013219411484660286, 0.0014174741629268048,\n",
       "       0.0015199110829529332, 0.0016297508346206436,  0.001747528400007683,\n",
       "        0.001873817422860383,  0.002009233002565048, 0.0021544346900318843,\n",
       "       0.0023101297000831605, 0.0024770763559917113, 0.0026560877829466868,\n",
       "        0.002848035868435802, 0.0030538555088334154, 0.0032745491628777285,\n",
       "        0.003511191734215131, 0.0037649358067924675,  0.004037017258596553,\n",
       "        0.004328761281083057,  0.004641588833612782,  0.004977023564332114,\n",
       "        0.005336699231206312,   0.00572236765935022,  0.006135907273413176,\n",
       "        0.006579332246575682,  0.007054802310718645,  0.007564633275546291,\n",
       "        0.008111308307896872,  0.008697490026177835,    0.0093260334688322,\n",
       "                        0.01,  0.010722672220103232,  0.011497569953977356,\n",
       "        0.012328467394420659,  0.013219411484660293,  0.014174741629268055,\n",
       "         0.01519911082952934,  0.016297508346206444,   0.01747528400007684,\n",
       "         0.01873817422860384,   0.02009233002565047,  0.021544346900318846,\n",
       "        0.023101297000831605,  0.024770763559917114,  0.026560877829466867,\n",
       "         0.02848035868435802,  0.030538555088334154,   0.03274549162877728,\n",
       "         0.03511191734215131,  0.037649358067924674,   0.04037017258596556,\n",
       "         0.04328761281083059,  0.046415888336127795,  0.049770235643321115,\n",
       "          0.0533669923120631,   0.05722367659350217,   0.06135907273413173,\n",
       "         0.06579332246575682,   0.07054802310718646,   0.07564633275546291,\n",
       "         0.08111308307896872,   0.08697490026177834,     0.093260334688322,\n",
       "                         0.1,   0.10722672220103231,   0.11497569953977356,\n",
       "         0.12328467394420659,   0.13219411484660287,   0.14174741629268048,\n",
       "          0.1519911082952933,   0.16297508346206452,    0.1747528400007685,\n",
       "          0.1873817422860385,    0.2009233002565048,   0.21544346900318845,\n",
       "         0.23101297000831603,   0.24770763559917114,   0.26560877829466867,\n",
       "          0.2848035868435802,   0.30538555088334157,   0.32745491628777285,\n",
       "          0.3511191734215131,   0.37649358067924676,   0.40370172585965536,\n",
       "          0.4328761281083057,    0.4641588833612782,   0.49770235643321137,\n",
       "          0.5336699231206312,     0.572236765935022,    0.6135907273413176,\n",
       "          0.6579332246575682,    0.7054802310718645,    0.7564633275546291,\n",
       "          0.8111308307896873,    0.8697490026177834,    0.9326033468832199,\n",
       "                         1.0],\n",
       "      dtype=&#x27;float64&#x27;, name=&#x27;q&#x27;))</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-965b6865-55dd-4bf5-bff0-3619e9eacfc9' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-965b6865-55dd-4bf5-bff0-3619e9eacfc9' class='xr-section-summary'  title='Expand/collapse section'>Attributes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'></dl></div></li></ul></div></div>"
      ],
      "text/plain": [
       "<xarray.Dataset> Size: 17kB\n",
       "Dimensions:  (sample: 10, q: 100)\n",
       "Coordinates:\n",
       "  * q        (q) float64 800B 0.001 0.001072 0.00115 ... 0.8697 0.9326 1.0\n",
       "Dimensions without coordinates: sample\n",
       "Data variables:\n",
       "    I        (sample, q) float64 8kB 5.465e+03 4.598e+03 3.859e+03 ... 1.08 1.03\n",
       "    dI       (sample, q) float64 8kB 545.9 429.3 342.6 ... 0.1025 0.1025 0.1025\n",
       "    model    (sample) object 80B 'surface_fractal' ... 'surface_fractal'"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from AFL.double_agent.data import example_dataset2\n",
    "\n",
    "# Load example dataset and select the mass_fractal model\n",
    "ds = example_dataset2()\n",
    "ds = ds.where(ds.model == 'surface_fractal',drop=True)\n",
    "ds"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6e449bc1",
   "metadata": {},
   "source": [
    "Let's plot the data so we can see what we're trying to fit."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "2190e8e9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "ds.I.plot.line(x='q',xscale='log',yscale='log',marker='.',ls='None',add_legend=False);"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "10d84ef0",
   "metadata": {},
   "source": [
    "## Defining the Fit\n",
    "The first step to AutoSAS is to define which models we'd like to fit. Let's start with a single model\n",
    "\n",
    "The model inputs are defined as a list of dictionaries, where each dictionary specifies:\n",
    "- `name`: A user-defined name for the model\n",
    "- `sasmodel`: The name of the model in the sasmodels library to use\n",
    "- `q_min`: the minimum q_value to consider in the fit\n",
    "- `q_max`: the maximum q_value to consider in the fit\n",
    "- `fit_params`: A dictionary of parameters for the model, where:\n",
    "  - the `value` field determines the initial starting value for the parameter optimization\n",
    "  - the `bounds` field determines the range that the optimizer can use to fit the data. Restricting this range is very important to achieving a proper fit\n",
    "    - Parameters with \"bounds\" will be fit within those bounds\n",
    "    - Parameters without bounds will be held constant at the specified value\n",
    "\n",
    "In the example below, \"power\" and \"scale\" will be fit since they have bounds,\n",
    "while \"background\" will be held constant at 1.0\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "dc5b21d3",
   "metadata": {},
   "outputs": [],
   "source": [
    "model_inputs = [\n",
    "    {\n",
    "        \"name\": \"surface_fractal\", # your name for the model, can be anything\n",
    "        \"sasmodel\": \"power_law\", # the name of the sasmodel in the sasmodels library\n",
    "        'q_min':0.001,\n",
    "        'q_max':1.0,\n",
    "        \"fit_params\": {\n",
    "            \"power\": {\"value\": 4, \"bounds\": (3, 4)},\n",
    "            \"scale\": {\"value\": 1.0, \"bounds\": (1e-6,1e-3)},\n",
    "            \"background\": {\"value\": 1.0,},\n",
    "        },\n",
    "    },\n",
    "]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cc651207",
   "metadata": {},
   "source": [
    "Now we'll create a `Pipeline` with a single `AutoSAS` pipeline operation.\n",
    "\n",
    "The AutoSAS pipeline operation takes several key arguments:\n",
    "\n",
    "- `sas_variable`: The name of the variable containing the SAS intensity data\n",
    "- `sas_err_variable`: The name of the variable containing the uncertainty in the intensity data\n",
    "- `q_dim`: The name of the dimension containing the q values\n",
    "- `output_prefix`: A prefix to add to all output variables from the fit\n",
    "- `model_inputs`: A list of dictionaries defining the models to fit, as described above\n",
    "\n",
    "Additional optional arguments include:\n",
    "- `sample_dim`: The name of the sample dimension (default: 'sample')\n",
    "- `fit_range`: A tuple of (qmin, qmax) to restrict the q range used for fitting\n",
    "- `max_evals`: Maximum number of function evaluations for the fit (default: 1000)\n",
    "- `method`: The optimization method to use (default: 'leastsq')\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "254188b5",
   "metadata": {},
   "source": [
    "## Building and Executing the Pipeline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "9b922aa6",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "PipelineOp                               input_variable ---> output_variable\n",
      "----------                               -----------------------------------\n",
      "0  ) <AutoSAS>                           ['q', 'I', 'dI'] ---> ['fit_all_chisq']\n",
      "\n",
      "Input Variables\n",
      "---------------\n",
      "0) q\n",
      "1) I\n",
      "2) dI\n",
      "\n",
      "Output Variables\n",
      "----------------\n",
      "0) fit_all_chisq\n"
     ]
    }
   ],
   "source": [
    "with Pipeline() as p:\n",
    "    AutoSAS(\n",
    "        sas_variable='I',\n",
    "        sas_err_variable='dI',\n",
    "        q_variable = 'q',\n",
    "        output_prefix='fit',\n",
    "        model_inputs=model_inputs,\n",
    "    )\n",
    "p.print()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a075d4fa",
   "metadata": {},
   "source": [
    "Now we're ready to fit! "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "c5f26b01",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "ba4489e9ae734d3cbee4e75bb67063a3",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "  0%|          | 0/1 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div><svg style=\"position: absolute; width: 0; height: 0; overflow: hidden\">\n",
       "<defs>\n",
       "<symbol id=\"icon-database\" viewBox=\"0 0 32 32\">\n",
       "<path d=\"M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z\"></path>\n",
       "<path d=\"M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "<path d=\"M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "</symbol>\n",
       "<symbol id=\"icon-file-text2\" viewBox=\"0 0 32 32\">\n",
       "<path d=\"M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z\"></path>\n",
       "<path d=\"M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "</symbol>\n",
       "</defs>\n",
       "</svg>\n",
       "<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.\n",
       " *\n",
       " */\n",
       "\n",
       ":root {\n",
       "  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));\n",
       "  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));\n",
       "  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));\n",
       "  --xr-border-color: var(--jp-border-color2, #e0e0e0);\n",
       "  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);\n",
       "  --xr-background-color: var(--jp-layout-color0, white);\n",
       "  --xr-background-color-row-even: var(--jp-layout-color1, white);\n",
       "  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);\n",
       "}\n",
       "\n",
       "html[theme=\"dark\"],\n",
       "html[data-theme=\"dark\"],\n",
       "body[data-theme=\"dark\"],\n",
       "body.vscode-dark {\n",
       "  --xr-font-color0: rgba(255, 255, 255, 1);\n",
       "  --xr-font-color2: rgba(255, 255, 255, 0.54);\n",
       "  --xr-font-color3: rgba(255, 255, 255, 0.38);\n",
       "  --xr-border-color: #1f1f1f;\n",
       "  --xr-disabled-color: #515151;\n",
       "  --xr-background-color: #111111;\n",
       "  --xr-background-color-row-even: #111111;\n",
       "  --xr-background-color-row-odd: #313131;\n",
       "}\n",
       "\n",
       ".xr-wrap {\n",
       "  display: block !important;\n",
       "  min-width: 300px;\n",
       "  max-width: 700px;\n",
       "}\n",
       "\n",
       ".xr-text-repr-fallback {\n",
       "  /* fallback to plain text repr when CSS is not injected (untrusted notebook) */\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-header {\n",
       "  padding-top: 6px;\n",
       "  padding-bottom: 6px;\n",
       "  margin-bottom: 4px;\n",
       "  border-bottom: solid 1px var(--xr-border-color);\n",
       "}\n",
       "\n",
       ".xr-header > div,\n",
       ".xr-header > ul {\n",
       "  display: inline;\n",
       "  margin-top: 0;\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-obj-type,\n",
       ".xr-array-name {\n",
       "  margin-left: 2px;\n",
       "  margin-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-obj-type {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-sections {\n",
       "  padding-left: 0 !important;\n",
       "  display: grid;\n",
       "  grid-template-columns: 150px auto auto 1fr 0 20px 0 20px;\n",
       "}\n",
       "\n",
       ".xr-section-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-section-item input {\n",
       "  display: inline-block;\n",
       "  opacity: 0;\n",
       "  height: 0;\n",
       "}\n",
       "\n",
       ".xr-section-item input + label {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label {\n",
       "  cursor: pointer;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-item input:focus + label {\n",
       "  border: 2px solid var(--xr-font-color0);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label:hover {\n",
       "  color: var(--xr-font-color0);\n",
       "}\n",
       "\n",
       ".xr-section-summary {\n",
       "  grid-column: 1;\n",
       "  color: var(--xr-font-color2);\n",
       "  font-weight: 500;\n",
       "}\n",
       "\n",
       ".xr-section-summary > span {\n",
       "  display: inline-block;\n",
       "  padding-left: 0.5em;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in + label:before {\n",
       "  display: inline-block;\n",
       "  content: \"►\";\n",
       "  font-size: 11px;\n",
       "  width: 15px;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label:before {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label:before {\n",
       "  content: \"▼\";\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label > span {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-summary,\n",
       ".xr-section-inline-details {\n",
       "  padding-top: 4px;\n",
       "  padding-bottom: 4px;\n",
       "}\n",
       "\n",
       ".xr-section-inline-details {\n",
       "  grid-column: 2 / -1;\n",
       "}\n",
       "\n",
       ".xr-section-details {\n",
       "  display: none;\n",
       "  grid-column: 1 / -1;\n",
       "  margin-bottom: 5px;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked ~ .xr-section-details {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-array-wrap {\n",
       "  grid-column: 1 / -1;\n",
       "  display: grid;\n",
       "  grid-template-columns: 20px auto;\n",
       "}\n",
       "\n",
       ".xr-array-wrap > label {\n",
       "  grid-column: 1;\n",
       "  vertical-align: top;\n",
       "}\n",
       "\n",
       ".xr-preview {\n",
       "  color: var(--xr-font-color3);\n",
       "}\n",
       "\n",
       ".xr-array-preview,\n",
       ".xr-array-data {\n",
       "  padding: 0 5px !important;\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-array-data,\n",
       ".xr-array-in:checked ~ .xr-array-preview {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-array-in:checked ~ .xr-array-data,\n",
       ".xr-array-preview {\n",
       "  display: inline-block;\n",
       "}\n",
       "\n",
       ".xr-dim-list {\n",
       "  display: inline-block !important;\n",
       "  list-style: none;\n",
       "  padding: 0 !important;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list li {\n",
       "  display: inline-block;\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list:before {\n",
       "  content: \"(\";\n",
       "}\n",
       "\n",
       ".xr-dim-list:after {\n",
       "  content: \")\";\n",
       "}\n",
       "\n",
       ".xr-dim-list li:not(:last-child):after {\n",
       "  content: \",\";\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-has-index {\n",
       "  font-weight: bold;\n",
       "}\n",
       "\n",
       ".xr-var-list,\n",
       ".xr-var-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-var-item > div,\n",
       ".xr-var-item label,\n",
       ".xr-var-item > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-even);\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-var-item > .xr-var-name:hover span {\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-var-list > li:nth-child(odd) > div,\n",
       ".xr-var-list > li:nth-child(odd) > label,\n",
       ".xr-var-list > li:nth-child(odd) > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-odd);\n",
       "}\n",
       "\n",
       ".xr-var-name {\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-var-dims {\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-var-dtype {\n",
       "  grid-column: 3;\n",
       "  text-align: right;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-var-preview {\n",
       "  grid-column: 4;\n",
       "}\n",
       "\n",
       ".xr-index-preview {\n",
       "  grid-column: 2 / 5;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-var-name,\n",
       ".xr-var-dims,\n",
       ".xr-var-dtype,\n",
       ".xr-preview,\n",
       ".xr-attrs dt {\n",
       "  white-space: nowrap;\n",
       "  overflow: hidden;\n",
       "  text-overflow: ellipsis;\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-var-name:hover,\n",
       ".xr-var-dims:hover,\n",
       ".xr-var-dtype:hover,\n",
       ".xr-attrs dt:hover {\n",
       "  overflow: visible;\n",
       "  width: auto;\n",
       "  z-index: 1;\n",
       "}\n",
       "\n",
       ".xr-var-attrs,\n",
       ".xr-var-data,\n",
       ".xr-index-data {\n",
       "  display: none;\n",
       "  background-color: var(--xr-background-color) !important;\n",
       "  padding-bottom: 5px !important;\n",
       "}\n",
       "\n",
       ".xr-var-attrs-in:checked ~ .xr-var-attrs,\n",
       ".xr-var-data-in:checked ~ .xr-var-data,\n",
       ".xr-index-data-in:checked ~ .xr-index-data {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       ".xr-var-data > table {\n",
       "  float: right;\n",
       "}\n",
       "\n",
       ".xr-var-name span,\n",
       ".xr-var-data,\n",
       ".xr-index-name div,\n",
       ".xr-index-data,\n",
       ".xr-attrs {\n",
       "  padding-left: 25px !important;\n",
       "}\n",
       "\n",
       ".xr-attrs,\n",
       ".xr-var-attrs,\n",
       ".xr-var-data,\n",
       ".xr-index-data {\n",
       "  grid-column: 1 / -1;\n",
       "}\n",
       "\n",
       "dl.xr-attrs {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  display: grid;\n",
       "  grid-template-columns: 125px auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt,\n",
       ".xr-attrs dd {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  float: left;\n",
       "  padding-right: 10px;\n",
       "  width: auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt {\n",
       "  font-weight: normal;\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-attrs dt:hover span {\n",
       "  display: inline-block;\n",
       "  background: var(--xr-background-color);\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-attrs dd {\n",
       "  grid-column: 2;\n",
       "  white-space: pre-wrap;\n",
       "  word-break: break-all;\n",
       "}\n",
       "\n",
       ".xr-icon-database,\n",
       ".xr-icon-file-text2,\n",
       ".xr-no-icon {\n",
       "  display: inline-block;\n",
       "  vertical-align: middle;\n",
       "  width: 1em;\n",
       "  height: 1.5em !important;\n",
       "  stroke-width: 0;\n",
       "  stroke: currentColor;\n",
       "  fill: currentColor;\n",
       "}\n",
       "</style><pre class='xr-text-repr-fallback'>&lt;xarray.Dataset&gt; Size: 35kB\n",
       "Dimensions:                    (sample: 10, q: 100, models: 1,\n",
       "                                surface_fractal_params: 3,\n",
       "                                fit_q_surface_fractal: 100)\n",
       "Coordinates:\n",
       "  * q                          (q) float64 800B 0.001 0.001072 ... 0.9326 1.0\n",
       "  * models                     (models) &lt;U15 60B &#x27;surface_fractal&#x27;\n",
       "  * surface_fractal_params     (surface_fractal_params) &lt;U26 312B &#x27;surface_fr...\n",
       "  * fit_q_surface_fractal      (fit_q_surface_fractal) float64 800B 0.001 ......\n",
       "Dimensions without coordinates: sample\n",
       "Data variables:\n",
       "    I                          (sample, q) float64 8kB 5.465e+03 ... 1.03\n",
       "    dI                         (sample, q) float64 8kB 545.9 429.3 ... 0.1025\n",
       "    model                      (sample) object 80B &#x27;surface_fractal&#x27; ... &#x27;sur...\n",
       "    sas_fit_sample             (sample) int64 80B 0 1 2 3 4 5 6 7 8 9\n",
       "    fit_all_chisq              (sample, models) float64 80B 1.023 ... 1.083\n",
       "    probabilities              (sample, models) float64 80B 1.0 1.0 ... 1.0 1.0\n",
       "    surface_fractal_fit_val    (surface_fractal_params, sample) float64 240B ...\n",
       "    surface_fractal_fit_err    (surface_fractal_params, sample) float64 240B ...\n",
       "    fit_I_surface_fractal      (sample, fit_q_surface_fractal) float64 8kB 5....\n",
       "    residuals_surface_fractal  (sample, fit_q_surface_fractal) float64 8kB -0...</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.Dataset</div></div><ul class='xr-sections'><li class='xr-section-item'><input id='section-8ca0fffd-1c5e-4570-881a-8748a42e6fb9' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-8ca0fffd-1c5e-4570-881a-8748a42e6fb9' class='xr-section-summary'  title='Expand/collapse section'>Dimensions:</label><div class='xr-section-inline-details'><ul class='xr-dim-list'><li><span>sample</span>: 10</li><li><span class='xr-has-index'>q</span>: 100</li><li><span class='xr-has-index'>models</span>: 1</li><li><span class='xr-has-index'>surface_fractal_params</span>: 3</li><li><span class='xr-has-index'>fit_q_surface_fractal</span>: 100</li></ul></div><div class='xr-section-details'></div></li><li class='xr-section-item'><input id='section-f0b7f1aa-99cd-46b6-ba6b-8f7f83d33600' class='xr-section-summary-in' type='checkbox'  checked><label for='section-f0b7f1aa-99cd-46b6-ba6b-8f7f83d33600' class='xr-section-summary' >Coordinates: <span>(4)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>q</span></div><div class='xr-var-dims'>(q)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>0.001 0.001072 ... 0.9326 1.0</div><input id='attrs-6de2e0f2-cd22-4cc4-b928-d85cdf514f0a' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-6de2e0f2-cd22-4cc4-b928-d85cdf514f0a' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-5450a4d7-a62f-487e-98b1-b8fc1d1361d8' class='xr-var-data-in' type='checkbox'><label for='data-5450a4d7-a62f-487e-98b1-b8fc1d1361d8' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([0.001   , 0.001072, 0.00115 , 0.001233, 0.001322, 0.001417, 0.00152 ,\n",
       "       0.00163 , 0.001748, 0.001874, 0.002009, 0.002154, 0.00231 , 0.002477,\n",
       "       0.002656, 0.002848, 0.003054, 0.003275, 0.003511, 0.003765, 0.004037,\n",
       "       0.004329, 0.004642, 0.004977, 0.005337, 0.005722, 0.006136, 0.006579,\n",
       "       0.007055, 0.007565, 0.008111, 0.008697, 0.009326, 0.01    , 0.010723,\n",
       "       0.011498, 0.012328, 0.013219, 0.014175, 0.015199, 0.016298, 0.017475,\n",
       "       0.018738, 0.020092, 0.021544, 0.023101, 0.024771, 0.026561, 0.02848 ,\n",
       "       0.030539, 0.032745, 0.035112, 0.037649, 0.04037 , 0.043288, 0.046416,\n",
       "       0.04977 , 0.053367, 0.057224, 0.061359, 0.065793, 0.070548, 0.075646,\n",
       "       0.081113, 0.086975, 0.09326 , 0.1     , 0.107227, 0.114976, 0.123285,\n",
       "       0.132194, 0.141747, 0.151991, 0.162975, 0.174753, 0.187382, 0.200923,\n",
       "       0.215443, 0.231013, 0.247708, 0.265609, 0.284804, 0.305386, 0.327455,\n",
       "       0.351119, 0.376494, 0.403702, 0.432876, 0.464159, 0.497702, 0.53367 ,\n",
       "       0.572237, 0.613591, 0.657933, 0.70548 , 0.756463, 0.811131, 0.869749,\n",
       "       0.932603, 1.      ])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>models</span></div><div class='xr-var-dims'>(models)</div><div class='xr-var-dtype'>&lt;U15</div><div class='xr-var-preview xr-preview'>&#x27;surface_fractal&#x27;</div><input id='attrs-0e0bbcb4-9dd0-4e22-9b6f-8754b900da34' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-0e0bbcb4-9dd0-4e22-9b6f-8754b900da34' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-138cfc5b-a254-4c01-b42b-326c77c3cfe8' class='xr-var-data-in' type='checkbox'><label for='data-138cfc5b-a254-4c01-b42b-326c77c3cfe8' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;surface_fractal&#x27;], dtype=&#x27;&lt;U15&#x27;)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>surface_fractal_params</span></div><div class='xr-var-dims'>(surface_fractal_params)</div><div class='xr-var-dtype'>&lt;U26</div><div class='xr-var-preview xr-preview'>&#x27;surface_fractal_power&#x27; ... &#x27;sur...</div><input id='attrs-7e65be5c-7bc5-4944-abb2-64dee6c3a312' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-7e65be5c-7bc5-4944-abb2-64dee6c3a312' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-49d481f3-5649-4f4c-878d-7a9483f74e08' class='xr-var-data-in' type='checkbox'><label for='data-49d481f3-5649-4f4c-878d-7a9483f74e08' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;surface_fractal_power&#x27;, &#x27;surface_fractal_scale&#x27;,\n",
       "       &#x27;surface_fractal_background&#x27;], dtype=&#x27;&lt;U26&#x27;)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>fit_q_surface_fractal</span></div><div class='xr-var-dims'>(fit_q_surface_fractal)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>0.001 0.001072 ... 0.9326 1.0</div><input id='attrs-586f5d42-627a-4399-85dd-e2768a17006b' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-586f5d42-627a-4399-85dd-e2768a17006b' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-5d1a52e1-7170-48d3-b71f-e070f042a8cb' class='xr-var-data-in' type='checkbox'><label for='data-5d1a52e1-7170-48d3-b71f-e070f042a8cb' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([0.001   , 0.001072, 0.00115 , 0.001233, 0.001322, 0.001417, 0.00152 ,\n",
       "       0.00163 , 0.001748, 0.001874, 0.002009, 0.002154, 0.00231 , 0.002477,\n",
       "       0.002656, 0.002848, 0.003054, 0.003275, 0.003511, 0.003765, 0.004037,\n",
       "       0.004329, 0.004642, 0.004977, 0.005337, 0.005722, 0.006136, 0.006579,\n",
       "       0.007055, 0.007565, 0.008111, 0.008697, 0.009326, 0.01    , 0.010723,\n",
       "       0.011498, 0.012328, 0.013219, 0.014175, 0.015199, 0.016298, 0.017475,\n",
       "       0.018738, 0.020092, 0.021544, 0.023101, 0.024771, 0.026561, 0.02848 ,\n",
       "       0.030539, 0.032745, 0.035112, 0.037649, 0.04037 , 0.043288, 0.046416,\n",
       "       0.04977 , 0.053367, 0.057224, 0.061359, 0.065793, 0.070548, 0.075646,\n",
       "       0.081113, 0.086975, 0.09326 , 0.1     , 0.107227, 0.114976, 0.123285,\n",
       "       0.132194, 0.141747, 0.151991, 0.162975, 0.174753, 0.187382, 0.200923,\n",
       "       0.215443, 0.231013, 0.247708, 0.265609, 0.284804, 0.305386, 0.327455,\n",
       "       0.351119, 0.376494, 0.403702, 0.432876, 0.464159, 0.497702, 0.53367 ,\n",
       "       0.572237, 0.613591, 0.657933, 0.70548 , 0.756463, 0.811131, 0.869749,\n",
       "       0.932603, 1.      ])</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-951a91c3-2580-4eb0-ad8b-294f4de1ead9' class='xr-section-summary-in' type='checkbox'  checked><label for='section-951a91c3-2580-4eb0-ad8b-294f4de1ead9' class='xr-section-summary' >Data variables: <span>(10)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span>I</span></div><div class='xr-var-dims'>(sample, q)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>5.465e+03 4.598e+03 ... 1.08 1.03</div><input id='attrs-425e395b-3c0c-4d2a-ba7e-5d08f0ba43c3' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-425e395b-3c0c-4d2a-ba7e-5d08f0ba43c3' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-5b2cf8a8-c6b1-46d6-a490-cdca0e66e6bc' class='xr-var-data-in' type='checkbox'><label for='data-5b2cf8a8-c6b1-46d6-a490-cdca0e66e6bc' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[5.46461639e+03, 4.59795217e+03, 3.85947764e+03, 2.63116991e+03,\n",
       "        2.07431068e+03, 1.90372910e+03, 1.52919611e+03, 1.18680603e+03,\n",
       "        7.97363765e+02, 7.32615952e+02, 5.66816880e+02, 4.94345998e+02,\n",
       "        3.36397055e+02, 2.37278594e+02, 2.42920544e+02, 1.34983362e+02,\n",
       "        1.34237874e+02, 1.03846296e+02, 8.29189655e+01, 6.83701899e+01,\n",
       "        6.63256975e+01, 5.12285645e+01, 3.69922707e+01, 3.39076629e+01,\n",
       "        2.18803647e+01, 1.73545761e+01, 1.72935304e+01, 1.36371299e+01,\n",
       "        9.99274093e+00, 7.57838776e+00, 8.03734181e+00, 4.79334463e+00,\n",
       "        4.52480217e+00, 4.12653133e+00, 4.02874009e+00, 3.03039434e+00,\n",
       "        2.64512398e+00, 2.08340062e+00, 2.06956646e+00, 1.77666195e+00,\n",
       "        1.34466308e+00, 1.58804022e+00, 1.50286123e+00, 1.39259080e+00,\n",
       "        1.22861525e+00, 1.06093375e+00, 8.70672131e-01, 1.11665926e+00,\n",
       "        1.18944518e+00, 1.15730959e+00, 1.12048958e+00, 1.01513955e+00,\n",
       "        1.12226043e+00, 1.09654942e+00, 9.54941615e-01, 1.05883843e+00,\n",
       "        9.34551784e-01, 1.03722137e+00, 8.53878098e-01, 8.59529011e-01,\n",
       "        1.08092481e+00, 1.06762940e+00, 1.03679594e+00, 9.82713801e-01,\n",
       "        7.40669867e-01, 9.65608102e-01, 1.01661701e+00, 9.20115667e-01,\n",
       "        9.02574126e-01, 1.11192951e+00, 9.65555406e-01, 1.01544208e+00,\n",
       "        1.04633562e+00, 8.73818665e-01, 9.89752619e-01, 1.09906348e+00,\n",
       "        1.14751493e+00, 9.74729174e-01, 9.47722591e-01, 9.96916206e-01,\n",
       "...\n",
       "        1.68659503e+01, 1.21223648e+01, 1.11133601e+01, 9.10365006e+00,\n",
       "        6.73558113e+00, 6.97103702e+00, 5.41643178e+00, 4.37274298e+00,\n",
       "        3.67703675e+00, 3.36002895e+00, 2.99974570e+00, 2.50035574e+00,\n",
       "        1.61113936e+00, 2.02067402e+00, 1.56634607e+00, 1.64317783e+00,\n",
       "        1.33669955e+00, 1.24903013e+00, 1.54373516e+00, 1.26632138e+00,\n",
       "        1.20500451e+00, 1.26988377e+00, 1.13266379e+00, 1.38916806e+00,\n",
       "        1.09384785e+00, 1.14612961e+00, 1.19638613e+00, 1.25087240e+00,\n",
       "        9.88833790e-01, 1.01563593e+00, 1.18758077e+00, 1.13285017e+00,\n",
       "        1.15581064e+00, 8.97716447e-01, 1.19776362e+00, 9.56081475e-01,\n",
       "        1.05285363e+00, 1.01616943e+00, 9.39712262e-01, 8.83827077e-01,\n",
       "        8.49052391e-01, 1.03995513e+00, 8.70505949e-01, 9.10332790e-01,\n",
       "        1.00401302e+00, 7.55334842e-01, 1.10578357e+00, 7.78503133e-01,\n",
       "        1.01759208e+00, 1.02694203e+00, 1.08046813e+00, 1.02094522e+00,\n",
       "        1.23201786e+00, 1.04727214e+00, 1.13305453e+00, 9.50861724e-01,\n",
       "        1.03736647e+00, 1.18358616e+00, 1.00058403e+00, 1.04463379e+00,\n",
       "        1.12544799e+00, 9.48836608e-01, 8.03361737e-01, 1.05108694e+00,\n",
       "        1.12621544e+00, 8.86376068e-01, 1.09356943e+00, 1.09425776e+00,\n",
       "        7.91869799e-01, 9.28915087e-01, 9.84303854e-01, 1.00646082e+00,\n",
       "        9.48707402e-01, 9.43185820e-01, 1.19617226e+00, 1.01384350e+00,\n",
       "        9.53633740e-01, 1.02064675e+00, 1.07991038e+00, 1.03015655e+00]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>dI</span></div><div class='xr-var-dims'>(sample, q)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>545.9 429.3 342.6 ... 0.1025 0.1025</div><input id='attrs-2923d464-4e35-4056-8e15-b38fdfe6a9c8' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-2923d464-4e35-4056-8e15-b38fdfe6a9c8' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-63db9829-2543-4acc-aa17-82b22994d7be' class='xr-var-data-in' type='checkbox'><label for='data-63db9829-2543-4acc-aa17-82b22994d7be' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[5.45853473e+02, 4.29328308e+02, 3.42588723e+02, 2.73192209e+02,\n",
       "        2.17856990e+02, 1.73733931e+02, 1.38551196e+02, 1.10497276e+02,\n",
       "        8.81277103e+01, 7.02907222e+01, 5.60679092e+01, 4.47269581e+01,\n",
       "        3.56839388e+01, 2.84732387e+01, 2.27235887e+01, 1.81389471e+01,\n",
       "        1.44832570e+01, 1.15682920e+01, 9.24396451e+00, 7.39059804e+00,\n",
       "        5.91276532e+00, 4.73437476e+00, 3.79475264e+00, 3.04551910e+00,\n",
       "        2.44809713e+00, 1.97172629e+00, 1.59187891e+00, 1.28899714e+00,\n",
       "        1.04748604e+00, 8.54910523e-01, 7.01355136e-01, 5.78913526e-01,\n",
       "        4.81281341e-01, 4.03431633e-01, 3.41356027e-01, 2.91858335e-01,\n",
       "        2.52389990e-01, 2.20918819e-01, 1.95824416e-01, 1.75814703e-01,\n",
       "        1.59859408e-01, 1.47137015e-01, 1.36992465e-01, 1.28903429e-01,\n",
       "        1.22453414e-01, 1.17310317e-01, 1.13209327e-01, 1.09939290e-01,\n",
       "        1.07331836e-01, 1.05252710e-01, 1.03594863e-01, 1.02272932e-01,\n",
       "        1.01218855e-01, 1.00378357e-01, 9.97081631e-02, 9.91737655e-02,\n",
       "        9.87476489e-02, 9.84078731e-02, 9.81369435e-02, 9.79209104e-02,\n",
       "        9.77486504e-02, 9.76112942e-02, 9.75017694e-02, 9.74144368e-02,\n",
       "        9.73447998e-02, 9.72892728e-02, 9.72449968e-02, 9.72096921e-02,\n",
       "        9.71815409e-02, 9.71590938e-02, 9.71411950e-02, 9.71269229e-02,\n",
       "        9.71155427e-02, 9.71064683e-02, 9.70992326e-02, 9.70934630e-02,\n",
       "        9.70888625e-02, 9.70851941e-02, 9.70822691e-02, 9.70799367e-02,\n",
       "...\n",
       "        1.60288535e+00, 1.32000197e+00, 1.09045307e+00, 9.04183049e-01,\n",
       "        7.53032148e-01, 6.30379054e-01, 5.30850825e-01, 4.50087527e-01,\n",
       "        3.84551243e-01, 3.31371090e-01, 2.88217459e-01, 2.53199961e-01,\n",
       "        2.24784619e-01, 2.01726672e-01, 1.83016041e-01, 1.67833091e-01,\n",
       "        1.55512715e-01, 1.45515208e-01, 1.37402619e-01, 1.30819567e-01,\n",
       "        1.25477676e-01, 1.21142939e-01, 1.17625467e-01, 1.14771176e-01,\n",
       "        1.12455029e-01, 1.10575566e-01, 1.09050454e-01, 1.07812885e-01,\n",
       "        1.06808646e-01, 1.05993745e-01, 1.05332484e-01, 1.04795897e-01,\n",
       "        1.04360477e-01, 1.04007151e-01, 1.03720440e-01, 1.03487786e-01,\n",
       "        1.03298995e-01, 1.03145799e-01, 1.03021487e-01, 1.02920612e-01,\n",
       "        1.02838756e-01, 1.02772333e-01, 1.02718434e-01, 1.02674696e-01,\n",
       "        1.02639205e-01, 1.02610405e-01, 1.02587035e-01, 1.02568071e-01,\n",
       "        1.02552683e-01, 1.02540196e-01, 1.02530063e-01, 1.02521841e-01,\n",
       "        1.02515169e-01, 1.02509755e-01, 1.02505361e-01, 1.02501796e-01,\n",
       "        1.02498903e-01, 1.02496556e-01, 1.02494651e-01, 1.02493105e-01,\n",
       "        1.02491851e-01, 1.02490833e-01, 1.02490007e-01, 1.02489337e-01,\n",
       "        1.02488793e-01, 1.02488352e-01, 1.02487994e-01, 1.02487703e-01,\n",
       "        1.02487467e-01, 1.02487276e-01, 1.02487121e-01, 1.02486995e-01,\n",
       "        1.02486892e-01, 1.02486809e-01, 1.02486742e-01, 1.02486687e-01,\n",
       "        1.02486643e-01, 1.02486607e-01, 1.02486578e-01, 1.02486554e-01]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>model</span></div><div class='xr-var-dims'>(sample)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>&#x27;surface_fractal&#x27; ... &#x27;surface_f...</div><input id='attrs-ed966931-ec8c-41fd-8d8b-62ba2571f0a6' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-ed966931-ec8c-41fd-8d8b-62ba2571f0a6' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-bece4cb1-e2da-4bc5-9bcb-7c0498949eec' class='xr-var-data-in' type='checkbox'><label for='data-bece4cb1-e2da-4bc5-9bcb-7c0498949eec' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;surface_fractal&#x27;, &#x27;surface_fractal&#x27;, &#x27;surface_fractal&#x27;,\n",
       "       &#x27;surface_fractal&#x27;, &#x27;surface_fractal&#x27;, &#x27;surface_fractal&#x27;,\n",
       "       &#x27;surface_fractal&#x27;, &#x27;surface_fractal&#x27;, &#x27;surface_fractal&#x27;,\n",
       "       &#x27;surface_fractal&#x27;], dtype=object)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>sas_fit_sample</span></div><div class='xr-var-dims'>(sample)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>0 1 2 3 4 5 6 7 8 9</div><input id='attrs-76dfb351-1fe0-4f30-b8bd-ab27c6a1fd07' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-76dfb351-1fe0-4f30-b8bd-ab27c6a1fd07' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-7fe2ae6e-c4da-47cd-9994-322aa4978f36' class='xr-var-data-in' type='checkbox'><label for='data-7fe2ae6e-c4da-47cd-9994-322aa4978f36' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>name :</span></dt><dd>AutoSAS</dd><dt><span>input_variable :</span></dt><dd>[&#x27;q&#x27;, &#x27;I&#x27;, &#x27;dI&#x27;]</dd><dt><span>output_variable :</span></dt><dd>[&#x27;fit_all_chisq&#x27;]</dd><dt><span>input_prefix :</span></dt><dd>None</dd><dt><span>output_prefix :</span></dt><dd>fit</dd><dt><span>server_id :</span></dt><dd>None</dd><dt><span>fit_method :</span></dt><dd>None</dd><dt><span>model_inputs :</span></dt><dd>[{&#x27;name&#x27;: &#x27;surface_fractal&#x27;, &#x27;sasmodel&#x27;: &#x27;power_law&#x27;, &#x27;q_min&#x27;: 0.001, &#x27;q_max&#x27;: 1.0, &#x27;fit_params&#x27;: {&#x27;power&#x27;: {&#x27;value&#x27;: 4, &#x27;bounds&#x27;: (3, 4)}, &#x27;scale&#x27;: {&#x27;value&#x27;: 1.0, &#x27;bounds&#x27;: (1e-06, 0.001)}, &#x27;background&#x27;: {&#x27;value&#x27;: 1.0}}}]</dd><dt><span>results :</span></dt><dd>{}</dd><dt><span>q_variable :</span></dt><dd>q</dd><dt><span>sas_variable :</span></dt><dd>I</dd><dt><span>sas_err_variable :</span></dt><dd>dI</dd><dt><span>resolution :</span></dt><dd>None</dd><dt><span>sample_dim :</span></dt><dd>sample</dd><dt><span>model_dim :</span></dt><dd>models</dd><dt><span>q_min :</span></dt><dd>None</dd><dt><span>q_max :</span></dt><dd>None</dd></dl></div><div class='xr-var-data'><pre>array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>fit_all_chisq</span></div><div class='xr-var-dims'>(sample, models)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>1.023 1.054 1.081 ... 0.8714 1.083</div><input id='attrs-4282fcf8-7a33-468d-a704-ee82aa6d99f3' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-4282fcf8-7a33-468d-a704-ee82aa6d99f3' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-d138bbee-c235-4324-af3b-50f0a2514042' class='xr-var-data-in' type='checkbox'><label for='data-d138bbee-c235-4324-af3b-50f0a2514042' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>fit_calc_id :</span></dt><dd>ASAS-bf662339-c545-40e6-81bf-a64080926da1</dd><dt><span>name :</span></dt><dd>AutoSAS</dd><dt><span>input_variable :</span></dt><dd>[&#x27;q&#x27;, &#x27;I&#x27;, &#x27;dI&#x27;]</dd><dt><span>output_variable :</span></dt><dd>[&#x27;fit_all_chisq&#x27;]</dd><dt><span>input_prefix :</span></dt><dd>None</dd><dt><span>output_prefix :</span></dt><dd>fit</dd><dt><span>server_id :</span></dt><dd>None</dd><dt><span>fit_method :</span></dt><dd>None</dd><dt><span>model_inputs :</span></dt><dd>[{&#x27;name&#x27;: &#x27;surface_fractal&#x27;, &#x27;sasmodel&#x27;: &#x27;power_law&#x27;, &#x27;q_min&#x27;: 0.001, &#x27;q_max&#x27;: 1.0, &#x27;fit_params&#x27;: {&#x27;power&#x27;: {&#x27;value&#x27;: 4, &#x27;bounds&#x27;: (3, 4)}, &#x27;scale&#x27;: {&#x27;value&#x27;: 1.0, &#x27;bounds&#x27;: (1e-06, 0.001)}, &#x27;background&#x27;: {&#x27;value&#x27;: 1.0}}}]</dd><dt><span>results :</span></dt><dd>{}</dd><dt><span>q_variable :</span></dt><dd>q</dd><dt><span>sas_variable :</span></dt><dd>I</dd><dt><span>sas_err_variable :</span></dt><dd>dI</dd><dt><span>resolution :</span></dt><dd>None</dd><dt><span>sample_dim :</span></dt><dd>sample</dd><dt><span>model_dim :</span></dt><dd>models</dd><dt><span>q_min :</span></dt><dd>None</dd><dt><span>q_max :</span></dt><dd>None</dd></dl></div><div class='xr-var-data'><pre>array([[1.02275423],\n",
       "       [1.05413472],\n",
       "       [1.08126923],\n",
       "       [0.83661143],\n",
       "       [0.89258149],\n",
       "       [0.93121783],\n",
       "       [0.92739433],\n",
       "       [1.07638344],\n",
       "       [0.87140495],\n",
       "       [1.08324978]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>probabilities</span></div><div class='xr-var-dims'>(sample, models)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>1.0 1.0 1.0 1.0 ... 1.0 1.0 1.0 1.0</div><input id='attrs-1460428b-2a0a-47eb-a122-62f063107ac2' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-1460428b-2a0a-47eb-a122-62f063107ac2' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-706e4f13-389e-44a8-bddd-33635383009d' class='xr-var-data-in' type='checkbox'><label for='data-706e4f13-389e-44a8-bddd-33635383009d' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>name :</span></dt><dd>AutoSAS</dd><dt><span>input_variable :</span></dt><dd>[&#x27;q&#x27;, &#x27;I&#x27;, &#x27;dI&#x27;]</dd><dt><span>output_variable :</span></dt><dd>[&#x27;fit_all_chisq&#x27;]</dd><dt><span>input_prefix :</span></dt><dd>None</dd><dt><span>output_prefix :</span></dt><dd>fit</dd><dt><span>server_id :</span></dt><dd>None</dd><dt><span>fit_method :</span></dt><dd>None</dd><dt><span>model_inputs :</span></dt><dd>[{&#x27;name&#x27;: &#x27;surface_fractal&#x27;, &#x27;sasmodel&#x27;: &#x27;power_law&#x27;, &#x27;q_min&#x27;: 0.001, &#x27;q_max&#x27;: 1.0, &#x27;fit_params&#x27;: {&#x27;power&#x27;: {&#x27;value&#x27;: 4, &#x27;bounds&#x27;: (3, 4)}, &#x27;scale&#x27;: {&#x27;value&#x27;: 1.0, &#x27;bounds&#x27;: (1e-06, 0.001)}, &#x27;background&#x27;: {&#x27;value&#x27;: 1.0}}}]</dd><dt><span>results :</span></dt><dd>{}</dd><dt><span>q_variable :</span></dt><dd>q</dd><dt><span>sas_variable :</span></dt><dd>I</dd><dt><span>sas_err_variable :</span></dt><dd>dI</dd><dt><span>resolution :</span></dt><dd>None</dd><dt><span>sample_dim :</span></dt><dd>sample</dd><dt><span>model_dim :</span></dt><dd>models</dd><dt><span>q_min :</span></dt><dd>None</dd><dt><span>q_max :</span></dt><dd>None</dd></dl></div><div class='xr-var-data'><pre>array([[1.],\n",
       "       [1.],\n",
       "       [1.],\n",
       "       [1.],\n",
       "       [1.],\n",
       "       [1.],\n",
       "       [1.],\n",
       "       [1.],\n",
       "       [1.],\n",
       "       [1.]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>surface_fractal_fit_val</span></div><div class='xr-var-dims'>(surface_fractal_params, sample)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>3.243 3.163 3.086 ... 1.0 1.0 1.0</div><input id='attrs-4086c52d-abef-47ff-bcfd-8eb67398925b' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-4086c52d-abef-47ff-bcfd-8eb67398925b' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-bad5ef23-a10d-49e6-98f6-8f0917625e3b' class='xr-var-data-in' type='checkbox'><label for='data-bad5ef23-a10d-49e6-98f6-8f0917625e3b' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>fit_calc_id :</span></dt><dd>ASAS-bf662339-c545-40e6-81bf-a64080926da1</dd><dt><span>name :</span></dt><dd>AutoSAS</dd><dt><span>input_variable :</span></dt><dd>[&#x27;q&#x27;, &#x27;I&#x27;, &#x27;dI&#x27;]</dd><dt><span>output_variable :</span></dt><dd>[&#x27;fit_all_chisq&#x27;]</dd><dt><span>input_prefix :</span></dt><dd>None</dd><dt><span>output_prefix :</span></dt><dd>fit</dd><dt><span>server_id :</span></dt><dd>None</dd><dt><span>fit_method :</span></dt><dd>None</dd><dt><span>model_inputs :</span></dt><dd>[{&#x27;name&#x27;: &#x27;surface_fractal&#x27;, &#x27;sasmodel&#x27;: &#x27;power_law&#x27;, &#x27;q_min&#x27;: 0.001, &#x27;q_max&#x27;: 1.0, &#x27;fit_params&#x27;: {&#x27;power&#x27;: {&#x27;value&#x27;: 4, &#x27;bounds&#x27;: (3, 4)}, &#x27;scale&#x27;: {&#x27;value&#x27;: 1.0, &#x27;bounds&#x27;: (1e-06, 0.001)}, &#x27;background&#x27;: {&#x27;value&#x27;: 1.0}}}]</dd><dt><span>results :</span></dt><dd>{}</dd><dt><span>q_variable :</span></dt><dd>q</dd><dt><span>sas_variable :</span></dt><dd>I</dd><dt><span>sas_err_variable :</span></dt><dd>dI</dd><dt><span>resolution :</span></dt><dd>None</dd><dt><span>sample_dim :</span></dt><dd>sample</dd><dt><span>model_dim :</span></dt><dd>models</dd><dt><span>q_min :</span></dt><dd>None</dd><dt><span>q_max :</span></dt><dd>None</dd></dl></div><div class='xr-var-data'><pre>array([[3.24265739e+00, 3.16252070e+00, 3.08615609e+00, 3.15552503e+00,\n",
       "        3.05113167e+00, 3.25242366e+00, 3.03037286e+00, 3.00000000e+00,\n",
       "        3.00000000e+00, 3.00000000e+00],\n",
       "       [1.00000000e-06, 1.00000000e-06, 1.00000000e-06, 1.24393004e-06,\n",
       "        1.00000000e-06, 1.11492212e-06, 1.00000000e-06, 1.00000000e-06,\n",
       "        1.00000000e-06, 1.00000000e-06],\n",
       "       [1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,\n",
       "        1.00000000e+00, 1.00000000e+00, 1.00000000e+00, 1.00000000e+00,\n",
       "        1.00000000e+00, 1.00000000e+00]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>surface_fractal_fit_err</span></div><div class='xr-var-dims'>(surface_fractal_params, sample)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>0.0227 0.02407 0.02557 ... 0.0 0.0</div><input id='attrs-6896ac0f-924c-4804-98e5-b6d91ac817f9' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-6896ac0f-924c-4804-98e5-b6d91ac817f9' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-4f4243d9-3304-493d-9e35-5cbb995405d4' class='xr-var-data-in' type='checkbox'><label for='data-4f4243d9-3304-493d-9e35-5cbb995405d4' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>fit_calc_id :</span></dt><dd>ASAS-bf662339-c545-40e6-81bf-a64080926da1</dd><dt><span>name :</span></dt><dd>AutoSAS</dd><dt><span>input_variable :</span></dt><dd>[&#x27;q&#x27;, &#x27;I&#x27;, &#x27;dI&#x27;]</dd><dt><span>output_variable :</span></dt><dd>[&#x27;fit_all_chisq&#x27;]</dd><dt><span>input_prefix :</span></dt><dd>None</dd><dt><span>output_prefix :</span></dt><dd>fit</dd><dt><span>server_id :</span></dt><dd>None</dd><dt><span>fit_method :</span></dt><dd>None</dd><dt><span>model_inputs :</span></dt><dd>[{&#x27;name&#x27;: &#x27;surface_fractal&#x27;, &#x27;sasmodel&#x27;: &#x27;power_law&#x27;, &#x27;q_min&#x27;: 0.001, &#x27;q_max&#x27;: 1.0, &#x27;fit_params&#x27;: {&#x27;power&#x27;: {&#x27;value&#x27;: 4, &#x27;bounds&#x27;: (3, 4)}, &#x27;scale&#x27;: {&#x27;value&#x27;: 1.0, &#x27;bounds&#x27;: (1e-06, 0.001)}, &#x27;background&#x27;: {&#x27;value&#x27;: 1.0}}}]</dd><dt><span>results :</span></dt><dd>{}</dd><dt><span>q_variable :</span></dt><dd>q</dd><dt><span>sas_variable :</span></dt><dd>I</dd><dt><span>sas_err_variable :</span></dt><dd>dI</dd><dt><span>resolution :</span></dt><dd>None</dd><dt><span>sample_dim :</span></dt><dd>sample</dd><dt><span>model_dim :</span></dt><dd>models</dd><dt><span>q_min :</span></dt><dd>None</dd><dt><span>q_max :</span></dt><dd>None</dd></dl></div><div class='xr-var-data'><pre>array([[2.27048704e-02, 2.40659471e-02, 2.55743991e-02, 2.29994739e-02,\n",
       "        2.63328387e-02, 2.28313482e-02, 2.70634988e-02, 2.78456852e-02,\n",
       "        2.78247365e-02, 2.77249316e-02],\n",
       "       [1.30712675e-07, 1.39863344e-07, 1.49719861e-07, 1.64556199e-07,\n",
       "        1.55220020e-07, 1.45467891e-07, 1.59749280e-07, 1.64812550e-07,\n",
       "        1.64903795e-07, 1.64396226e-07],\n",
       "       [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
       "        0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n",
       "        0.00000000e+00, 0.00000000e+00]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>fit_I_surface_fractal</span></div><div class='xr-var-dims'>(sample, fit_q_surface_fractal)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>5.346e+03 4.264e+03 ... 1.0 1.0</div><input id='attrs-a3053009-2c79-4641-94b2-08be772b7660' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-a3053009-2c79-4641-94b2-08be772b7660' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-6b6dff7f-af5d-4b80-b76e-95183a1d6136' class='xr-var-data-in' type='checkbox'><label for='data-6b6dff7f-af5d-4b80-b76e-95183a1d6136' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>name :</span></dt><dd>AutoSAS</dd><dt><span>input_variable :</span></dt><dd>[&#x27;q&#x27;, &#x27;I&#x27;, &#x27;dI&#x27;]</dd><dt><span>output_variable :</span></dt><dd>[&#x27;fit_all_chisq&#x27;]</dd><dt><span>input_prefix :</span></dt><dd>None</dd><dt><span>output_prefix :</span></dt><dd>fit</dd><dt><span>server_id :</span></dt><dd>None</dd><dt><span>fit_method :</span></dt><dd>None</dd><dt><span>model_inputs :</span></dt><dd>[{&#x27;name&#x27;: &#x27;surface_fractal&#x27;, &#x27;sasmodel&#x27;: &#x27;power_law&#x27;, &#x27;q_min&#x27;: 0.001, &#x27;q_max&#x27;: 1.0, &#x27;fit_params&#x27;: {&#x27;power&#x27;: {&#x27;value&#x27;: 4, &#x27;bounds&#x27;: (3, 4)}, &#x27;scale&#x27;: {&#x27;value&#x27;: 1.0, &#x27;bounds&#x27;: (1e-06, 0.001)}, &#x27;background&#x27;: {&#x27;value&#x27;: 1.0}}}]</dd><dt><span>results :</span></dt><dd>{}</dd><dt><span>q_variable :</span></dt><dd>q</dd><dt><span>sas_variable :</span></dt><dd>I</dd><dt><span>sas_err_variable :</span></dt><dd>dI</dd><dt><span>resolution :</span></dt><dd>None</dd><dt><span>sample_dim :</span></dt><dd>sample</dd><dt><span>model_dim :</span></dt><dd>models</dd><dt><span>q_min :</span></dt><dd>None</dd><dt><span>q_max :</span></dt><dd>None</dd></dl></div><div class='xr-var-data'><pre>array([[5.34630102e+03, 4.26394591e+03, 3.40075387e+03, 2.71234719e+03,\n",
       "        2.16333405e+03, 1.72548905e+03, 1.37630207e+03, 1.09782099e+03,\n",
       "        8.75728761e+02, 6.98607372e+02, 5.57350799e+02, 4.44696876e+02,\n",
       "        3.54853932e+02, 2.83203035e+02, 2.26060529e+02, 1.80488650e+02,\n",
       "        1.44144493e+02, 1.15159564e+02, 9.20437118e+01, 7.36085243e+01,\n",
       "        5.89062265e+01, 4.71809561e+01, 3.78299030e+01, 3.03723185e+01,\n",
       "        2.44247996e+01, 1.96815772e+01, 1.58987967e+01, 1.28819809e+01,\n",
       "        1.04760317e+01, 8.55725643e+00, 7.02700863e+00, 5.80661645e+00,\n",
       "        4.83333808e+00, 4.05713613e+00, 3.43810516e+00, 2.94442004e+00,\n",
       "        2.55069984e+00, 2.23670295e+00, 1.98628642e+00, 1.78657603e+00,\n",
       "        1.62730444e+00, 1.50028331e+00, 1.39898234e+00, 1.31819352e+00,\n",
       "        1.25376340e+00, 1.20237956e+00, 1.16140028e+00, 1.12871879e+00,\n",
       "        1.10265488e+00, 1.08186858e+00, 1.06529124e+00, 1.05207060e+00,\n",
       "        1.04152697e+00, 1.03311829e+00, 1.02641226e+00, 1.02106411e+00,\n",
       "        1.01679890e+00, 1.01339734e+00, 1.01068455e+00, 1.00852106e+00,\n",
       "        1.00679566e+00, 1.00541962e+00, 1.00432222e+00, 1.00344702e+00,\n",
       "        1.00274905e+00, 1.00219240e+00, 1.00174847e+00, 1.00139442e+00,\n",
       "        1.00111207e+00, 1.00088689e+00, 1.00070731e+00, 1.00056409e+00,\n",
       "        1.00044987e+00, 1.00035877e+00, 1.00028613e+00, 1.00022819e+00,\n",
       "        1.00018198e+00, 1.00014513e+00, 1.00011575e+00, 1.00009231e+00,\n",
       "...\n",
       "        1.61991108e+01, 1.33284674e+01, 1.10000000e+01, 9.11130831e+00,\n",
       "        7.57933225e+00, 6.33669923e+00, 5.32876128e+00, 4.51119173e+00,\n",
       "        3.84803587e+00, 3.31012970e+00, 2.87381742e+00, 2.51991108e+00,\n",
       "        2.23284674e+00, 2.00000000e+00, 1.81113083e+00, 1.65793322e+00,\n",
       "        1.53366992e+00, 1.43287613e+00, 1.35111917e+00, 1.28480359e+00,\n",
       "        1.23101297e+00, 1.18738174e+00, 1.15199111e+00, 1.12328467e+00,\n",
       "        1.10000000e+00, 1.08111308e+00, 1.06579332e+00, 1.05336699e+00,\n",
       "        1.04328761e+00, 1.03511192e+00, 1.02848036e+00, 1.02310130e+00,\n",
       "        1.01873817e+00, 1.01519911e+00, 1.01232847e+00, 1.01000000e+00,\n",
       "        1.00811131e+00, 1.00657933e+00, 1.00533670e+00, 1.00432876e+00,\n",
       "        1.00351119e+00, 1.00284804e+00, 1.00231013e+00, 1.00187382e+00,\n",
       "        1.00151991e+00, 1.00123285e+00, 1.00100000e+00, 1.00081113e+00,\n",
       "        1.00065793e+00, 1.00053367e+00, 1.00043288e+00, 1.00035112e+00,\n",
       "        1.00028480e+00, 1.00023101e+00, 1.00018738e+00, 1.00015199e+00,\n",
       "        1.00012328e+00, 1.00010000e+00, 1.00008111e+00, 1.00006579e+00,\n",
       "        1.00005337e+00, 1.00004329e+00, 1.00003511e+00, 1.00002848e+00,\n",
       "        1.00002310e+00, 1.00001874e+00, 1.00001520e+00, 1.00001233e+00,\n",
       "        1.00001000e+00, 1.00000811e+00, 1.00000658e+00, 1.00000534e+00,\n",
       "        1.00000433e+00, 1.00000351e+00, 1.00000285e+00, 1.00000231e+00,\n",
       "        1.00000187e+00, 1.00000152e+00, 1.00000123e+00, 1.00000100e+00]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>residuals_surface_fractal</span></div><div class='xr-var-dims'>(sample, fit_q_surface_fractal)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>-0.2168 -0.778 ... -0.7797 -0.2942</div><input id='attrs-7528d85a-a128-41d8-a8a3-8e56c7b08da7' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-7528d85a-a128-41d8-a8a3-8e56c7b08da7' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-068eac1e-2634-41f4-8edf-62699b3908c1' class='xr-var-data-in' type='checkbox'><label for='data-068eac1e-2634-41f4-8edf-62699b3908c1' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>name :</span></dt><dd>AutoSAS</dd><dt><span>input_variable :</span></dt><dd>[&#x27;q&#x27;, &#x27;I&#x27;, &#x27;dI&#x27;]</dd><dt><span>output_variable :</span></dt><dd>[&#x27;fit_all_chisq&#x27;]</dd><dt><span>input_prefix :</span></dt><dd>None</dd><dt><span>output_prefix :</span></dt><dd>fit</dd><dt><span>server_id :</span></dt><dd>None</dd><dt><span>fit_method :</span></dt><dd>None</dd><dt><span>model_inputs :</span></dt><dd>[{&#x27;name&#x27;: &#x27;surface_fractal&#x27;, &#x27;sasmodel&#x27;: &#x27;power_law&#x27;, &#x27;q_min&#x27;: 0.001, &#x27;q_max&#x27;: 1.0, &#x27;fit_params&#x27;: {&#x27;power&#x27;: {&#x27;value&#x27;: 4, &#x27;bounds&#x27;: (3, 4)}, &#x27;scale&#x27;: {&#x27;value&#x27;: 1.0, &#x27;bounds&#x27;: (1e-06, 0.001)}, &#x27;background&#x27;: {&#x27;value&#x27;: 1.0}}}]</dd><dt><span>results :</span></dt><dd>{}</dd><dt><span>q_variable :</span></dt><dd>q</dd><dt><span>sas_variable :</span></dt><dd>I</dd><dt><span>sas_err_variable :</span></dt><dd>dI</dd><dt><span>resolution :</span></dt><dd>None</dd><dt><span>sample_dim :</span></dt><dd>sample</dd><dt><span>model_dim :</span></dt><dd>models</dd><dt><span>q_min :</span></dt><dd>None</dd><dt><span>q_max :</span></dt><dd>None</dd></dl></div><div class='xr-var-data'><pre>array([[-2.16752990e-01, -7.77973996e-01, -1.33899259e+00,\n",
       "         2.97143447e-01,  4.08632158e-01, -1.02593687e+00,\n",
       "        -1.10352015e+00, -8.05314360e-01,  8.89220839e-01,\n",
       "        -4.83827433e-01, -1.68832413e-01, -1.11004916e+00,\n",
       "         5.17232048e-01,  1.61289840e+00, -7.41960907e-01,\n",
       "         2.50870613e+00,  6.84004966e-01,  9.77954912e-01,\n",
       "         9.87103123e-01,  7.08783555e-01, -1.25482250e+00,\n",
       "        -8.54940434e-01,  2.20734346e-01, -1.16083474e+00,\n",
       "         1.03935211e+00,  1.18018467e+00, -8.76155623e-01,\n",
       "        -5.85842285e-01,  4.61381563e-01,  1.14499546e+00,\n",
       "        -1.44054435e+00,  1.75029910e+00,  6.41071832e-01,\n",
       "        -1.72012274e-01, -1.73026073e+00, -2.94575467e-01,\n",
       "        -3.74119994e-01,  6.93930638e-01, -4.25279170e-01,\n",
       "         5.63893416e-02,  1.76806211e+00, -5.96429817e-01,\n",
       "        -7.58281791e-01, -5.77155176e-01,  2.05369075e-01,\n",
       "         1.20574052e+00,  2.56805831e+00,  1.09692650e-01,\n",
       "        -8.08616586e-01, -7.16760782e-01, -5.32828960e-01,\n",
       "         3.61102861e-01, -7.97612848e-01, -6.31920374e-01,\n",
       "         7.16798308e-01, -3.80890196e-01,  8.32902019e-01,\n",
       "        -2.42094753e-01,  1.59783303e+00,  1.52155502e+00,\n",
       "...\n",
       "         1.64312351e-01, -2.31663902e+00,  5.47076823e-02,\n",
       "        -5.87982736e-01, -1.19754487e+00, -1.83192763e+00,\n",
       "         5.09825983e-01,  1.83746553e-01, -1.51045913e+00,\n",
       "        -1.04726311e+00, -1.31345192e+00,  1.12956333e+00,\n",
       "        -1.78783612e+00,  5.21013424e-01, -4.33134095e-01,\n",
       "        -9.29761128e-02,  6.36997576e-01,  1.17082169e+00,\n",
       "         1.50195127e+00, -3.61061144e-01,  1.28315996e+00,\n",
       "         8.91563656e-01, -2.42900244e-02,  2.39642368e+00,\n",
       "        -1.02141144e+00,  2.16741911e+00, -1.65126360e-01,\n",
       "        -2.57541586e-01, -7.80602840e-01, -2.00875219e-01,\n",
       "        -2.26047582e+00, -4.58894121e-01, -1.29619708e+00,\n",
       "         4.80872224e-01, -3.63352066e-01, -1.79016906e+00,\n",
       "        -4.90676381e-03, -4.34838968e-01, -1.22345948e+00,\n",
       "         4.99622042e-01,  1.91895172e+00, -4.98183170e-01,\n",
       "        -1.23127939e+00,  1.10883498e+00, -9.12831116e-01,\n",
       "        -9.19577950e-01,  2.03088443e+00,  6.93676589e-01,\n",
       "         1.53216571e-01, -6.29883384e-02,  5.00521825e-01,\n",
       "         5.54390285e-01, -1.91409547e+00, -1.35053495e-01,\n",
       "         4.52430996e-01, -2.01443216e-01, -7.79703544e-01,\n",
       "        -2.94239072e-01]])</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-f11d8ed1-c6ca-402f-919e-3d586a43eeac' class='xr-section-summary-in' type='checkbox'  ><label for='section-f11d8ed1-c6ca-402f-919e-3d586a43eeac' class='xr-section-summary' >Indexes: <span>(4)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-index-name'><div>q</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-9f57a888-48de-42c1-9407-9c198d45407c' class='xr-index-data-in' type='checkbox'/><label for='index-9f57a888-48de-42c1-9407-9c198d45407c' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([                0.001, 0.0010722672220103231, 0.0011497569953977356,\n",
       "       0.0012328467394420659, 0.0013219411484660286, 0.0014174741629268048,\n",
       "       0.0015199110829529332, 0.0016297508346206436,  0.001747528400007683,\n",
       "        0.001873817422860383,  0.002009233002565048, 0.0021544346900318843,\n",
       "       0.0023101297000831605, 0.0024770763559917113, 0.0026560877829466868,\n",
       "        0.002848035868435802, 0.0030538555088334154, 0.0032745491628777285,\n",
       "        0.003511191734215131, 0.0037649358067924675,  0.004037017258596553,\n",
       "        0.004328761281083057,  0.004641588833612782,  0.004977023564332114,\n",
       "        0.005336699231206312,   0.00572236765935022,  0.006135907273413176,\n",
       "        0.006579332246575682,  0.007054802310718645,  0.007564633275546291,\n",
       "        0.008111308307896872,  0.008697490026177835,    0.0093260334688322,\n",
       "                        0.01,  0.010722672220103232,  0.011497569953977356,\n",
       "        0.012328467394420659,  0.013219411484660293,  0.014174741629268055,\n",
       "         0.01519911082952934,  0.016297508346206444,   0.01747528400007684,\n",
       "         0.01873817422860384,   0.02009233002565047,  0.021544346900318846,\n",
       "        0.023101297000831605,  0.024770763559917114,  0.026560877829466867,\n",
       "         0.02848035868435802,  0.030538555088334154,   0.03274549162877728,\n",
       "         0.03511191734215131,  0.037649358067924674,   0.04037017258596556,\n",
       "         0.04328761281083059,  0.046415888336127795,  0.049770235643321115,\n",
       "          0.0533669923120631,   0.05722367659350217,   0.06135907273413173,\n",
       "         0.06579332246575682,   0.07054802310718646,   0.07564633275546291,\n",
       "         0.08111308307896872,   0.08697490026177834,     0.093260334688322,\n",
       "                         0.1,   0.10722672220103231,   0.11497569953977356,\n",
       "         0.12328467394420659,   0.13219411484660287,   0.14174741629268048,\n",
       "          0.1519911082952933,   0.16297508346206452,    0.1747528400007685,\n",
       "          0.1873817422860385,    0.2009233002565048,   0.21544346900318845,\n",
       "         0.23101297000831603,   0.24770763559917114,   0.26560877829466867,\n",
       "          0.2848035868435802,   0.30538555088334157,   0.32745491628777285,\n",
       "          0.3511191734215131,   0.37649358067924676,   0.40370172585965536,\n",
       "          0.4328761281083057,    0.4641588833612782,   0.49770235643321137,\n",
       "          0.5336699231206312,     0.572236765935022,    0.6135907273413176,\n",
       "          0.6579332246575682,    0.7054802310718645,    0.7564633275546291,\n",
       "          0.8111308307896873,    0.8697490026177834,    0.9326033468832199,\n",
       "                         1.0],\n",
       "      dtype=&#x27;float64&#x27;, name=&#x27;q&#x27;))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>models</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-89824c48-f9e3-42b2-aecf-952f79ce21f4' class='xr-index-data-in' type='checkbox'/><label for='index-89824c48-f9e3-42b2-aecf-952f79ce21f4' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([&#x27;surface_fractal&#x27;], dtype=&#x27;object&#x27;, name=&#x27;models&#x27;))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>surface_fractal_params</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-6223f5cc-1ae3-456c-9acb-40cf624b583d' class='xr-index-data-in' type='checkbox'/><label for='index-6223f5cc-1ae3-456c-9acb-40cf624b583d' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([&#x27;surface_fractal_power&#x27;, &#x27;surface_fractal_scale&#x27;,\n",
       "       &#x27;surface_fractal_background&#x27;],\n",
       "      dtype=&#x27;object&#x27;, name=&#x27;surface_fractal_params&#x27;))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>fit_q_surface_fractal</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-c114b8b6-3860-4158-9d3b-566509619a24' class='xr-index-data-in' type='checkbox'/><label for='index-c114b8b6-3860-4158-9d3b-566509619a24' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([                0.001, 0.0010722672220103231, 0.0011497569953977356,\n",
       "       0.0012328467394420659, 0.0013219411484660286, 0.0014174741629268048,\n",
       "       0.0015199110829529332, 0.0016297508346206436,  0.001747528400007683,\n",
       "        0.001873817422860383,  0.002009233002565048, 0.0021544346900318843,\n",
       "       0.0023101297000831605, 0.0024770763559917113, 0.0026560877829466868,\n",
       "        0.002848035868435802, 0.0030538555088334154, 0.0032745491628777285,\n",
       "        0.003511191734215131, 0.0037649358067924675,  0.004037017258596553,\n",
       "        0.004328761281083057,  0.004641588833612782,  0.004977023564332114,\n",
       "        0.005336699231206312,   0.00572236765935022,  0.006135907273413176,\n",
       "        0.006579332246575682,  0.007054802310718645,  0.007564633275546291,\n",
       "        0.008111308307896872,  0.008697490026177835,    0.0093260334688322,\n",
       "                        0.01,  0.010722672220103232,  0.011497569953977356,\n",
       "        0.012328467394420659,  0.013219411484660293,  0.014174741629268055,\n",
       "         0.01519911082952934,  0.016297508346206444,   0.01747528400007684,\n",
       "         0.01873817422860384,   0.02009233002565047,  0.021544346900318846,\n",
       "        0.023101297000831605,  0.024770763559917114,  0.026560877829466867,\n",
       "         0.02848035868435802,  0.030538555088334154,   0.03274549162877728,\n",
       "         0.03511191734215131,  0.037649358067924674,   0.04037017258596556,\n",
       "         0.04328761281083059,  0.046415888336127795,  0.049770235643321115,\n",
       "          0.0533669923120631,   0.05722367659350217,   0.06135907273413173,\n",
       "         0.06579332246575682,   0.07054802310718646,   0.07564633275546291,\n",
       "         0.08111308307896872,   0.08697490026177834,     0.093260334688322,\n",
       "                         0.1,   0.10722672220103231,   0.11497569953977356,\n",
       "         0.12328467394420659,   0.13219411484660287,   0.14174741629268048,\n",
       "          0.1519911082952933,   0.16297508346206452,    0.1747528400007685,\n",
       "          0.1873817422860385,    0.2009233002565048,   0.21544346900318845,\n",
       "         0.23101297000831603,   0.24770763559917114,   0.26560877829466867,\n",
       "          0.2848035868435802,   0.30538555088334157,   0.32745491628777285,\n",
       "          0.3511191734215131,   0.37649358067924676,   0.40370172585965536,\n",
       "          0.4328761281083057,    0.4641588833612782,   0.49770235643321137,\n",
       "          0.5336699231206312,     0.572236765935022,    0.6135907273413176,\n",
       "          0.6579332246575682,    0.7054802310718645,    0.7564633275546291,\n",
       "          0.8111308307896873,    0.8697490026177834,    0.9326033468832199,\n",
       "                         1.0],\n",
       "      dtype=&#x27;float64&#x27;, name=&#x27;fit_q_surface_fractal&#x27;))</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-dea29b79-9c40-4b93-992b-028944d81c1c' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-dea29b79-9c40-4b93-992b-028944d81c1c' class='xr-section-summary'  title='Expand/collapse section'>Attributes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'></dl></div></li></ul></div></div>"
      ],
      "text/plain": [
       "<xarray.Dataset> Size: 35kB\n",
       "Dimensions:                    (sample: 10, q: 100, models: 1,\n",
       "                                surface_fractal_params: 3,\n",
       "                                fit_q_surface_fractal: 100)\n",
       "Coordinates:\n",
       "  * q                          (q) float64 800B 0.001 0.001072 ... 0.9326 1.0\n",
       "  * models                     (models) <U15 60B 'surface_fractal'\n",
       "  * surface_fractal_params     (surface_fractal_params) <U26 312B 'surface_fr...\n",
       "  * fit_q_surface_fractal      (fit_q_surface_fractal) float64 800B 0.001 ......\n",
       "Dimensions without coordinates: sample\n",
       "Data variables:\n",
       "    I                          (sample, q) float64 8kB 5.465e+03 ... 1.03\n",
       "    dI                         (sample, q) float64 8kB 545.9 429.3 ... 0.1025\n",
       "    model                      (sample) object 80B 'surface_fractal' ... 'sur...\n",
       "    sas_fit_sample             (sample) int64 80B 0 1 2 3 4 5 6 7 8 9\n",
       "    fit_all_chisq              (sample, models) float64 80B 1.023 ... 1.083\n",
       "    probabilities              (sample, models) float64 80B 1.0 1.0 ... 1.0 1.0\n",
       "    surface_fractal_fit_val    (surface_fractal_params, sample) float64 240B ...\n",
       "    surface_fractal_fit_err    (surface_fractal_params, sample) float64 240B ...\n",
       "    fit_I_surface_fractal      (sample, fit_q_surface_fractal) float64 8kB 5....\n",
       "    residuals_surface_fractal  (sample, fit_q_surface_fractal) float64 8kB -0..."
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ds_result = p.calculate(ds)\n",
    "ds_result"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ccc903fa",
   "metadata": {},
   "source": [
    "This is a large and complicated dataset, but it contains all of the information from the fit, including:\n",
    "\n",
    "- The fitted parameter values for each model (e.g. `surface_fractal_fit_val`) \n",
    "- The uncertainties in the fitted parameters (e.g. `surface_fractal_fit_err`)\n",
    "- The model intensities at each q value (e.g. `fit_I_surface_fractal`)\n",
    "- The residuals between the model and data (e.g. `residuals_surface_fractal`) \n",
    "- The chi-squared values for each fit (`fit_all_chisq`)\n",
    "- The q values used for the fit (e.g. `fit_q_surface_fractal`)\n",
    "\n",
    "We can use this information to evaluate the quality of the fits and compare different models. Let's plot some of the fits:"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "51db5d04",
   "metadata": {},
   "source": [
    "## Evaluating the Fit Results"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "2785c78d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "data_index = 0\n",
    "ds_result.isel(sample=data_index).I.plot.line(x='q',xscale='log',yscale='log',marker='.',ls='None',add_legend=False);\n",
    "ds_result.isel(sample=data_index).fit_I_surface_fractal.plot.line(x='fit_q_surface_fractal',xscale='log',yscale='log',add_legend=False);"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4a1ff133",
   "metadata": {},
   "source": [
    "The residuals (differences between the model and data) provide a key way to assess the quality of the fits. A good fit should show residuals that:\n",
    "\n",
    "1. Are randomly scattered around zero\n",
    "2. Have no clear systematic trends or patterns\n",
    "3. Are roughly within ±2-3 standard deviations of zero\n",
    "\n",
    "Let's plot the residuals for the first sample to assess the quality of our surface fractal fits:\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "ebd345da",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.lines.Line2D at 0x312294050>"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "ds_result.isel(sample=data_index).residuals_surface_fractal.plot( x='fit_q_surface_fractal', xscale='log', marker='.', ls='None', add_legend=False)\n",
    "plt.gca().axhline(y=0, color='k', linestyle='--', alpha=0.5)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "eaad3f15",
   "metadata": {},
   "source": [
    "Vary the `data_index` variable from two cells up and see how well we fit each individual data.\n",
    "\n",
    "\n",
    "We can also plot the fit parameters"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "d92d25fd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 0, 'Sample index')"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Plot the power parameter (index 1 in surface_fractal_params)\n",
    "ds_result.sel(surface_fractal_params='surface_fractal_power').surface_fractal_fit_val.plot(marker='o')\n",
    "plt.ylabel('Power parameter')\n",
    "plt.xlabel('Sample index')\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a08b975d",
   "metadata": {},
   "source": [
    "## Conclusion\n",
    " \n",
    "In this tutorial, we demonstrated how to use the AutoSAS module to fit small-angle scattering (SAS) data. We:\n",
    "\n",
    "1. Loaded  synthetic dataset with 10 samples and fit it using a surface fractal model\n",
    "2. Visualized the fits by plotting the data and model curves on log-log axes\n",
    "3. Analyzed the quality of the fits by examining the residuals between the model and data\n",
    "4. Explored how the model parameters vary across different samples\n",
    "\n",
    "The AutoSAS module provides a flexible framework for fitting SAS data with different models, evaluating fit quality, and extracting physical parameters. \n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "venv",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.10"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
