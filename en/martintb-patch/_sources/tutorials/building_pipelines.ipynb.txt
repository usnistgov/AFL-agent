{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "[![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/usnistgov/AFL-agent/blob/main/docs/source/tutorials/building_pipelines.ipynb)\n",
    "\n",
    "# Building Pipelines"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Here we'll go into more detail on the Quick Start Example from [Getting Started](getting_started.rst). In this example, we'll build a pipeline that \n",
    "\n",
    "- standardized the input compositions to improve the convergence of the Gaussian Process optimization\n",
    "- uses a Savitzky-Golay filter to compute the first derivative of the measurement\n",
    "- computes the similarity between the derivatives of the measurement data\n",
    "- clusters (i.e., labels) the data using spectral clustering\n",
    "- fits a Gaussian Process classifier to the data.\n",
    "- chooses the next optimal measurement based on the entropy of the Gaussian Process posterior \n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Setup\n",
    "\n",
    "Only uncomment and run the next cell if you are running this notebook in Google Colab or if don't already have the AFL-agent package installed."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# !pip install git+https://github.com/usnistgov/AFL-agent.git"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Below are the imported modules used in this tutorial"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import xarray as xr\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "from AFL.double_agent import *\n",
    "from AFL.double_agent.plotting import *"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Load Input Data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Okay, to begin, we'll load in a pre-prepared `xarray.Dataset`. These are powerful and flexible data structures for working with multi-dimensional data, and `AFL.double_agent` uses them for all input, intermediate and output data.\n",
    "\n",
    "The dataset below contains simulated measurement data along with the compositions that this simulated data was generated at. It also has the ground truth phase labelse along with a grid of compositions that the agent will search through for the next optimal measurement. \n",
    "\n",
    "To see how this dataset is created, see [Building xarray.Datasets](../how-to/building_xarray_datasets>) page.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div><svg style=\"position: absolute; width: 0; height: 0; overflow: hidden\">\n",
       "<defs>\n",
       "<symbol id=\"icon-database\" viewBox=\"0 0 32 32\">\n",
       "<path d=\"M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z\"></path>\n",
       "<path d=\"M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "<path d=\"M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "</symbol>\n",
       "<symbol id=\"icon-file-text2\" viewBox=\"0 0 32 32\">\n",
       "<path d=\"M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z\"></path>\n",
       "<path d=\"M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "</symbol>\n",
       "</defs>\n",
       "</svg>\n",
       "<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.\n",
       " *\n",
       " */\n",
       "\n",
       ":root {\n",
       "  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));\n",
       "  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));\n",
       "  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));\n",
       "  --xr-border-color: var(--jp-border-color2, #e0e0e0);\n",
       "  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);\n",
       "  --xr-background-color: var(--jp-layout-color0, white);\n",
       "  --xr-background-color-row-even: var(--jp-layout-color1, white);\n",
       "  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);\n",
       "}\n",
       "\n",
       "html[theme=\"dark\"],\n",
       "html[data-theme=\"dark\"],\n",
       "body[data-theme=\"dark\"],\n",
       "body.vscode-dark {\n",
       "  --xr-font-color0: rgba(255, 255, 255, 1);\n",
       "  --xr-font-color2: rgba(255, 255, 255, 0.54);\n",
       "  --xr-font-color3: rgba(255, 255, 255, 0.38);\n",
       "  --xr-border-color: #1f1f1f;\n",
       "  --xr-disabled-color: #515151;\n",
       "  --xr-background-color: #111111;\n",
       "  --xr-background-color-row-even: #111111;\n",
       "  --xr-background-color-row-odd: #313131;\n",
       "}\n",
       "\n",
       ".xr-wrap {\n",
       "  display: block !important;\n",
       "  min-width: 300px;\n",
       "  max-width: 700px;\n",
       "}\n",
       "\n",
       ".xr-text-repr-fallback {\n",
       "  /* fallback to plain text repr when CSS is not injected (untrusted notebook) */\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-header {\n",
       "  padding-top: 6px;\n",
       "  padding-bottom: 6px;\n",
       "  margin-bottom: 4px;\n",
       "  border-bottom: solid 1px var(--xr-border-color);\n",
       "}\n",
       "\n",
       ".xr-header > div,\n",
       ".xr-header > ul {\n",
       "  display: inline;\n",
       "  margin-top: 0;\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-obj-type,\n",
       ".xr-array-name {\n",
       "  margin-left: 2px;\n",
       "  margin-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-obj-type {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-sections {\n",
       "  padding-left: 0 !important;\n",
       "  display: grid;\n",
       "  grid-template-columns: 150px auto auto 1fr 0 20px 0 20px;\n",
       "}\n",
       "\n",
       ".xr-section-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-section-item input {\n",
       "  display: inline-block;\n",
       "  opacity: 0;\n",
       "  height: 0;\n",
       "}\n",
       "\n",
       ".xr-section-item input + label {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label {\n",
       "  cursor: pointer;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-item input:focus + label {\n",
       "  border: 2px solid var(--xr-font-color0);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label:hover {\n",
       "  color: var(--xr-font-color0);\n",
       "}\n",
       "\n",
       ".xr-section-summary {\n",
       "  grid-column: 1;\n",
       "  color: var(--xr-font-color2);\n",
       "  font-weight: 500;\n",
       "}\n",
       "\n",
       ".xr-section-summary > span {\n",
       "  display: inline-block;\n",
       "  padding-left: 0.5em;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in + label:before {\n",
       "  display: inline-block;\n",
       "  content: \"►\";\n",
       "  font-size: 11px;\n",
       "  width: 15px;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label:before {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label:before {\n",
       "  content: \"▼\";\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label > span {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-summary,\n",
       ".xr-section-inline-details {\n",
       "  padding-top: 4px;\n",
       "  padding-bottom: 4px;\n",
       "}\n",
       "\n",
       ".xr-section-inline-details {\n",
       "  grid-column: 2 / -1;\n",
       "}\n",
       "\n",
       ".xr-section-details {\n",
       "  display: none;\n",
       "  grid-column: 1 / -1;\n",
       "  margin-bottom: 5px;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked ~ .xr-section-details {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-array-wrap {\n",
       "  grid-column: 1 / -1;\n",
       "  display: grid;\n",
       "  grid-template-columns: 20px auto;\n",
       "}\n",
       "\n",
       ".xr-array-wrap > label {\n",
       "  grid-column: 1;\n",
       "  vertical-align: top;\n",
       "}\n",
       "\n",
       ".xr-preview {\n",
       "  color: var(--xr-font-color3);\n",
       "}\n",
       "\n",
       ".xr-array-preview,\n",
       ".xr-array-data {\n",
       "  padding: 0 5px !important;\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-array-data,\n",
       ".xr-array-in:checked ~ .xr-array-preview {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-array-in:checked ~ .xr-array-data,\n",
       ".xr-array-preview {\n",
       "  display: inline-block;\n",
       "}\n",
       "\n",
       ".xr-dim-list {\n",
       "  display: inline-block !important;\n",
       "  list-style: none;\n",
       "  padding: 0 !important;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list li {\n",
       "  display: inline-block;\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list:before {\n",
       "  content: \"(\";\n",
       "}\n",
       "\n",
       ".xr-dim-list:after {\n",
       "  content: \")\";\n",
       "}\n",
       "\n",
       ".xr-dim-list li:not(:last-child):after {\n",
       "  content: \",\";\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-has-index {\n",
       "  font-weight: bold;\n",
       "}\n",
       "\n",
       ".xr-var-list,\n",
       ".xr-var-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-var-item > div,\n",
       ".xr-var-item label,\n",
       ".xr-var-item > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-even);\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-var-item > .xr-var-name:hover span {\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-var-list > li:nth-child(odd) > div,\n",
       ".xr-var-list > li:nth-child(odd) > label,\n",
       ".xr-var-list > li:nth-child(odd) > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-odd);\n",
       "}\n",
       "\n",
       ".xr-var-name {\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-var-dims {\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-var-dtype {\n",
       "  grid-column: 3;\n",
       "  text-align: right;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-var-preview {\n",
       "  grid-column: 4;\n",
       "}\n",
       "\n",
       ".xr-index-preview {\n",
       "  grid-column: 2 / 5;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-var-name,\n",
       ".xr-var-dims,\n",
       ".xr-var-dtype,\n",
       ".xr-preview,\n",
       ".xr-attrs dt {\n",
       "  white-space: nowrap;\n",
       "  overflow: hidden;\n",
       "  text-overflow: ellipsis;\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-var-name:hover,\n",
       ".xr-var-dims:hover,\n",
       ".xr-var-dtype:hover,\n",
       ".xr-attrs dt:hover {\n",
       "  overflow: visible;\n",
       "  width: auto;\n",
       "  z-index: 1;\n",
       "}\n",
       "\n",
       ".xr-var-attrs,\n",
       ".xr-var-data,\n",
       ".xr-index-data {\n",
       "  display: none;\n",
       "  background-color: var(--xr-background-color) !important;\n",
       "  padding-bottom: 5px !important;\n",
       "}\n",
       "\n",
       ".xr-var-attrs-in:checked ~ .xr-var-attrs,\n",
       ".xr-var-data-in:checked ~ .xr-var-data,\n",
       ".xr-index-data-in:checked ~ .xr-index-data {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       ".xr-var-data > table {\n",
       "  float: right;\n",
       "}\n",
       "\n",
       ".xr-var-name span,\n",
       ".xr-var-data,\n",
       ".xr-index-name div,\n",
       ".xr-index-data,\n",
       ".xr-attrs {\n",
       "  padding-left: 25px !important;\n",
       "}\n",
       "\n",
       ".xr-attrs,\n",
       ".xr-var-attrs,\n",
       ".xr-var-data,\n",
       ".xr-index-data {\n",
       "  grid-column: 1 / -1;\n",
       "}\n",
       "\n",
       "dl.xr-attrs {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  display: grid;\n",
       "  grid-template-columns: 125px auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt,\n",
       ".xr-attrs dd {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  float: left;\n",
       "  padding-right: 10px;\n",
       "  width: auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt {\n",
       "  font-weight: normal;\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-attrs dt:hover span {\n",
       "  display: inline-block;\n",
       "  background: var(--xr-background-color);\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-attrs dd {\n",
       "  grid-column: 2;\n",
       "  white-space: pre-wrap;\n",
       "  word-break: break-all;\n",
       "}\n",
       "\n",
       ".xr-icon-database,\n",
       ".xr-icon-file-text2,\n",
       ".xr-no-icon {\n",
       "  display: inline-block;\n",
       "  vertical-align: middle;\n",
       "  width: 1em;\n",
       "  height: 1.5em !important;\n",
       "  stroke-width: 0;\n",
       "  stroke: currentColor;\n",
       "  fill: currentColor;\n",
       "}\n",
       "</style><pre class='xr-text-repr-fallback'>&lt;xarray.Dataset&gt; Size: 164kB\n",
       "Dimensions:              (sample: 100, component: 2, x: 150, grid: 2500)\n",
       "Coordinates:\n",
       "  * component            (component) &lt;U1 8B &#x27;A&#x27; &#x27;B&#x27;\n",
       "  * x                    (x) float64 1kB 0.001 0.001047 0.001097 ... 0.9547 1.0\n",
       "Dimensions without coordinates: sample, grid\n",
       "Data variables:\n",
       "    composition          (sample, component) float64 2kB 5.7 1.36 ... 5.104\n",
       "    ground_truth_labels  (sample) int64 800B 1 1 0 1 0 1 1 1 ... 1 1 1 1 1 0 1 1\n",
       "    measurement          (sample, x) float64 120kB 1.915e+06 1.479e+06 ... 1.885\n",
       "    composition_grid     (grid, component) float64 40kB 0.0 0.0 ... 10.0 25.0</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.Dataset</div></div><ul class='xr-sections'><li class='xr-section-item'><input id='section-78d5285c-58e8-4e9b-abae-46a0452d84bb' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-78d5285c-58e8-4e9b-abae-46a0452d84bb' class='xr-section-summary'  title='Expand/collapse section'>Dimensions:</label><div class='xr-section-inline-details'><ul class='xr-dim-list'><li><span>sample</span>: 100</li><li><span class='xr-has-index'>component</span>: 2</li><li><span class='xr-has-index'>x</span>: 150</li><li><span>grid</span>: 2500</li></ul></div><div class='xr-section-details'></div></li><li class='xr-section-item'><input id='section-c2502a89-5c90-47d0-8542-12f9714477bc' class='xr-section-summary-in' type='checkbox'  checked><label for='section-c2502a89-5c90-47d0-8542-12f9714477bc' class='xr-section-summary' >Coordinates: <span>(2)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>component</span></div><div class='xr-var-dims'>(component)</div><div class='xr-var-dtype'>&lt;U1</div><div class='xr-var-preview xr-preview'>&#x27;A&#x27; &#x27;B&#x27;</div><input id='attrs-61c061f2-9573-4e9c-a122-5fb0ca8f0775' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-61c061f2-9573-4e9c-a122-5fb0ca8f0775' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-a8075d38-31e3-4579-9eb6-baec2bcffc83' class='xr-var-data-in' type='checkbox'><label for='data-a8075d38-31e3-4579-9eb6-baec2bcffc83' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;A&#x27;, &#x27;B&#x27;], dtype=&#x27;&lt;U1&#x27;)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>x</span></div><div class='xr-var-dims'>(x)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>0.001 0.001047 ... 0.9547 1.0</div><input id='attrs-db3aecfa-bef1-4eec-a1ed-eee6dabaf0a6' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-db3aecfa-bef1-4eec-a1ed-eee6dabaf0a6' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-ed06d748-bbb2-42cb-9a7f-08afdac714f2' class='xr-var-data-in' type='checkbox'><label for='data-ed06d748-bbb2-42cb-9a7f-08afdac714f2' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([0.001   , 0.001047, 0.001097, 0.001149, 0.001204, 0.001261, 0.001321,\n",
       "       0.001383, 0.001449, 0.001518, 0.00159 , 0.001665, 0.001744, 0.001827,\n",
       "       0.001914, 0.002005, 0.0021  , 0.002199, 0.002304, 0.002413, 0.002527,\n",
       "       0.002647, 0.002773, 0.002905, 0.003042, 0.003187, 0.003338, 0.003496,\n",
       "       0.003662, 0.003836, 0.004018, 0.004209, 0.004409, 0.004618, 0.004837,\n",
       "       0.005066, 0.005307, 0.005559, 0.005822, 0.006099, 0.006388, 0.006691,\n",
       "       0.007009, 0.007341, 0.00769 , 0.008055, 0.008437, 0.008837, 0.009256,\n",
       "       0.009696, 0.010156, 0.010638, 0.011142, 0.011671, 0.012225, 0.012805,\n",
       "       0.013413, 0.014049, 0.014716, 0.015414, 0.016146, 0.016912, 0.017714,\n",
       "       0.018555, 0.019435, 0.020358, 0.021324, 0.022335, 0.023395, 0.024505,\n",
       "       0.025668, 0.026886, 0.028162, 0.029498, 0.030898, 0.032364, 0.0339  ,\n",
       "       0.035509, 0.037194, 0.038959, 0.040807, 0.042744, 0.044772, 0.046897,\n",
       "       0.049122, 0.051453, 0.053894, 0.056452, 0.059131, 0.061936, 0.064875,\n",
       "       0.067954, 0.071179, 0.074556, 0.078094, 0.0818  , 0.085681, 0.089747,\n",
       "       0.094006, 0.098467, 0.103139, 0.108033, 0.11316 , 0.118529, 0.124154,\n",
       "       0.130045, 0.136216, 0.14268 , 0.14945 , 0.156542, 0.16397 , 0.171751,\n",
       "       0.179901, 0.188438, 0.197379, 0.206746, 0.216556, 0.226832, 0.237596,\n",
       "       0.24887 , 0.26068 , 0.27305 , 0.286006, 0.299578, 0.313794, 0.328684,\n",
       "       0.344281, 0.360618, 0.37773 , 0.395654, 0.414429, 0.434094, 0.454693,\n",
       "       0.476269, 0.498869, 0.522542, 0.547337, 0.57331 , 0.600514, 0.62901 ,\n",
       "       0.658858, 0.690122, 0.72287 , 0.757172, 0.793102, 0.830736, 0.870156,\n",
       "       0.911447, 0.954697, 1.      ])</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-85c3f0cd-6baa-4bd8-bdca-ab07cd2406c0' class='xr-section-summary-in' type='checkbox'  checked><label for='section-85c3f0cd-6baa-4bd8-bdca-ab07cd2406c0' class='xr-section-summary' >Data variables: <span>(4)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span>composition</span></div><div class='xr-var-dims'>(sample, component)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>5.7 1.36 8.938 ... 0.478 5.104</div><input id='attrs-25d38e8c-629d-4f17-b8a3-aac7ecf37780' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-25d38e8c-629d-4f17-b8a3-aac7ecf37780' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-d72b9814-aa47-4483-825f-d85b982f021f' class='xr-var-data-in' type='checkbox'><label for='data-d72b9814-aa47-4483-825f-d85b982f021f' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[ 5.69995762,  1.36017531],\n",
       "       [ 8.93782024, 16.17384162],\n",
       "       [ 3.77901101, 19.69531938],\n",
       "       [ 9.82535598,  7.16351158],\n",
       "       [ 1.60370118, 23.73217969],\n",
       "       [ 7.90994751, 14.71385158],\n",
       "       [ 2.17465804,  4.75450299],\n",
       "       [ 9.30875652,  2.86311327],\n",
       "       [ 2.78926787,  0.04909185],\n",
       "       [ 5.0368155 , 17.80655234],\n",
       "       [ 1.18529693, 16.40857492],\n",
       "       [ 1.65214034, 19.7760677 ],\n",
       "       [ 2.73176727,  0.18850408],\n",
       "       [ 9.22314222,  7.21778243],\n",
       "       [ 8.33560023,  5.22074632],\n",
       "       [ 8.10711809, 22.36120136],\n",
       "       [ 4.10263293,  6.17733076],\n",
       "       [ 7.94096049, 10.98300725],\n",
       "       [ 6.58238609, 15.27804755],\n",
       "       [ 3.78026574, 20.5150357 ],\n",
       "...\n",
       "       [ 5.0825235 ,  5.36441059],\n",
       "       [ 8.50770583,  2.52786027],\n",
       "       [ 4.46324027,  6.75171924],\n",
       "       [ 8.52523439,  6.71058719],\n",
       "       [ 9.23218578, 20.72269505],\n",
       "       [ 6.7555881 , 10.24855529],\n",
       "       [ 7.67539066,  1.6795503 ],\n",
       "       [ 5.8397554 , 10.64947346],\n",
       "       [ 0.22478436, 18.35236821],\n",
       "       [ 8.83077635, 10.65541542],\n",
       "       [ 8.98441453,  0.03322162],\n",
       "       [ 0.11755953, 11.77699299],\n",
       "       [ 7.90192605, 18.94690136],\n",
       "       [ 7.42679234, 23.72441631],\n",
       "       [ 8.7338296 , 12.27428886],\n",
       "       [ 2.2094947 ,  9.43848935],\n",
       "       [ 8.92898549, 10.34927984],\n",
       "       [ 0.79890552, 16.37383273],\n",
       "       [ 2.50284147,  0.0800645 ],\n",
       "       [ 0.47797863,  5.10399908]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>ground_truth_labels</span></div><div class='xr-var-dims'>(sample)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>1 1 0 1 0 1 1 1 ... 1 1 1 1 1 0 1 1</div><input id='attrs-dd2bfe27-4c2c-49a3-9edc-d36cc4356cd3' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-dd2bfe27-4c2c-49a3-9edc-d36cc4356cd3' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-38575814-7ff9-48ad-9643-8c7b6f60a009' class='xr-var-data-in' type='checkbox'><label for='data-38575814-7ff9-48ad-9643-8c7b6f60a009' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1,\n",
       "       1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0,\n",
       "       1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1,\n",
       "       1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
       "       0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>measurement</span></div><div class='xr-var-dims'>(sample, x)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>1.915e+06 1.479e+06 ... 1.766 1.885</div><input id='attrs-fd4691c5-1142-451d-a0ec-49d559343ae1' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-fd4691c5-1142-451d-a0ec-49d559343ae1' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-644c5cd1-3eec-42dd-a98a-092cb24332c9' class='xr-var-data-in' type='checkbox'><label for='data-644c5cd1-3eec-42dd-a98a-092cb24332c9' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[1.91473866e+06, 1.47945621e+06, 1.36028471e+06, ...,\n",
       "        1.94187833e+00, 1.95975369e+00, 2.07151476e+00],\n",
       "       [1.97716281e+06, 1.35648739e+06, 1.63877436e+06, ...,\n",
       "        1.90008720e+00, 1.76008223e+00, 2.09466497e+00],\n",
       "       [9.73830160e-01, 7.68956928e-01, 1.03891097e+00, ...,\n",
       "        9.25128766e-01, 6.82586751e-01, 1.00886636e+00],\n",
       "       ...,\n",
       "       [1.42016873e+00, 8.73396019e-01, 1.23904051e+00, ...,\n",
       "        1.14723090e+00, 1.27145347e+00, 9.40494323e-01],\n",
       "       [1.96972776e+06, 1.80114117e+06, 1.63801728e+06, ...,\n",
       "        2.53037078e+00, 1.96144836e+00, 2.37164783e+00],\n",
       "       [2.34596686e+06, 1.77244286e+06, 1.36862577e+06, ...,\n",
       "        2.05730051e+00, 1.76616880e+00, 1.88473841e+00]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>composition_grid</span></div><div class='xr-var-dims'>(grid, component)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>0.0 0.0 0.2041 ... 25.0 10.0 25.0</div><input id='attrs-9f72da65-e5e6-4302-9a81-1a590ba89d6f' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-9f72da65-e5e6-4302-9a81-1a590ba89d6f' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-fbb987de-3caf-4a10-bad9-1b6640060b18' class='xr-var-data-in' type='checkbox'><label for='data-fbb987de-3caf-4a10-bad9-1b6640060b18' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[ 0.        ,  0.        ],\n",
       "       [ 0.20408163,  0.        ],\n",
       "       [ 0.40816327,  0.        ],\n",
       "       ...,\n",
       "       [ 9.59183673, 25.        ],\n",
       "       [ 9.79591837, 25.        ],\n",
       "       [10.        , 25.        ]])</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-03f83db1-6c82-4ad7-a709-e00e4398f121' class='xr-section-summary-in' type='checkbox'  ><label for='section-03f83db1-6c82-4ad7-a709-e00e4398f121' class='xr-section-summary' >Indexes: <span>(2)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-index-name'><div>component</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-0292a53f-e815-435a-8124-398bb161168c' class='xr-index-data-in' type='checkbox'/><label for='index-0292a53f-e815-435a-8124-398bb161168c' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([&#x27;A&#x27;, &#x27;B&#x27;], dtype=&#x27;object&#x27;, name=&#x27;component&#x27;))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>x</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-4c7482c5-3a10-46af-a7bd-729495f0856a' class='xr-index-data-in' type='checkbox'/><label for='index-4c7482c5-3a10-46af-a7bd-729495f0856a' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([                0.001, 0.0010474522360006332, 0.0010971561867027272,\n",
       "       0.0011492187010036998, 0.0012037516980200685, 0.0012608724076806808,\n",
       "        0.001320703622736631, 0.0013833739627296209,  0.001449018150486198,\n",
       "       0.0015177773017322714,\n",
       "       ...\n",
       "          0.6588581861506815,    0.6901224802908528,    0.7228703350949566,\n",
       "            0.75717214883374,    0.7931016603333051,    0.8307361074919352,\n",
       "          0.8701563933188907,    0.9114472598521185,    0.9546974703287516,\n",
       "                         1.0],\n",
       "      dtype=&#x27;float64&#x27;, name=&#x27;x&#x27;, length=150))</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-ca595cb0-9930-4ef8-9fde-0affab79859c' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-ca595cb0-9930-4ef8-9fde-0affab79859c' class='xr-section-summary'  title='Expand/collapse section'>Attributes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'></dl></div></li></ul></div></div>"
      ],
      "text/plain": [
       "<xarray.Dataset> Size: 164kB\n",
       "Dimensions:              (sample: 100, component: 2, x: 150, grid: 2500)\n",
       "Coordinates:\n",
       "  * component            (component) <U1 8B 'A' 'B'\n",
       "  * x                    (x) float64 1kB 0.001 0.001047 0.001097 ... 0.9547 1.0\n",
       "Dimensions without coordinates: sample, grid\n",
       "Data variables:\n",
       "    composition          (sample, component) float64 2kB 5.7 1.36 ... 5.104\n",
       "    ground_truth_labels  (sample) int64 800B 1 1 0 1 0 1 1 1 ... 1 1 1 1 1 0 1 1\n",
       "    measurement          (sample, x) float64 120kB 1.915e+06 1.479e+06 ... 1.885\n",
       "    composition_grid     (grid, component) float64 40kB 0.0 0.0 ... 10.0 25.0"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ds = xr.load_dataset('../data/example_dataset.nc')\n",
    "ds"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Note how, in the second column of the table,the dimension names of each variable is listed. This is a foundational feature of all xarray data structure and underlys how they error check and align operations."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Step 1: Composition Preprocessing"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Many machine learning and optimization algorithms show better performance when their input data is normalized or standardized (i.e., the data is rescaled so that the mean and standard deviation is small).\n",
    "\n",
    "To start, we'll add Pipeline operations that normalize the  `composition` and  `composition_grid` data variables.\n",
    "\n",
    "\n",
    "\n",
    "We'll do this using the `Pipeline` context manager (i.e., the `with` construct shown below). Using this approach, each `Pipeline` operation that is defined in the context is automatically added to the ``my_first_pipeline`` variable."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Pipeline Pipeline N=1>"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from AFL.double_agent import *\n",
    "\n",
    "with Pipeline() as my_first_pipeline:\n",
    "    Standardize(\n",
    "        input_variable='composition',\n",
    "        output_variable='normalized_composition',\n",
    "        dim='sample',\n",
    "        component_dim='component',\n",
    "        min_val={'A':0.0,'B':0.0},\n",
    "        max_val={'A':10.0,'B':25.0},\n",
    "    )\n",
    "\n",
    "my_first_pipeline"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Going over the arguments to Standardize one by one:\n",
    "\n",
    "- `input_variable='composition'`: The data variable to normalize, in this case the 'composition' variable\n",
    "- `output_variable='normalized_composition': The name of the new variable that will store the normalized data\n",
    "- `dim='sample'`: The dimension along which to compute statistics for normalization\n",
    "- `component_dim='component'`: The dimension containing different components/features\n",
    "- `min_val={'A':0.0,'B':0.0}`: Dictionary specifying minimum values for each component\n",
    "- `max_val={'A':10.0,'B':25.0}`: Dictionary specifying maximum values for each component\n",
    "\n",
    "\n",
    "We can view more information about the pipeline by printing it "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "PipelineOp                               input_variable ---> output_variable\n",
      "----------                               -----------------------------------\n",
      "0  ) <Standardize>                       composition ---> normalized_composition\n",
      "\n",
      "Input Variables\n",
      "---------------\n",
      "0) composition\n",
      "\n",
      "Output Variables\n",
      "----------------\n",
      "0) normalized_composition\n"
     ]
    }
   ],
   "source": [
    "my_first_pipeline.print()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "You can add more operations to the `Pipeline` by recreating the context"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "PipelineOp                               input_variable ---> output_variable\n",
      "----------                               -----------------------------------\n",
      "0  ) <Standardize>                       composition ---> normalized_composition\n",
      "1  ) <Standardize>                       composition_grid ---> normalized_composition_grid\n",
      "\n",
      "Input Variables\n",
      "---------------\n",
      "0) composition\n",
      "1) composition_grid\n",
      "\n",
      "Output Variables\n",
      "----------------\n",
      "0) normalized_composition\n",
      "1) normalized_composition_grid\n"
     ]
    }
   ],
   "source": [
    "with my_first_pipeline:\n",
    "    Standardize(\n",
    "        input_variable='composition_grid',\n",
    "        output_variable='normalized_composition_grid',\n",
    "        dim='grid',\n",
    "        component_dim='component',\n",
    "        min_val={'A':0.0,'B':0.0},\n",
    "        max_val={'A':10.0,'B':25.0},\n",
    "    )\n",
    "\n",
    "my_first_pipeline.print()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can run the pipeline by calling the `.calculate` method and passing in the input dataset `ds`"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "5e6b3e09a44b4b2a8326f6c9df390e19",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "  0%|          | 0/2 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div><svg style=\"position: absolute; width: 0; height: 0; overflow: hidden\">\n",
       "<defs>\n",
       "<symbol id=\"icon-database\" viewBox=\"0 0 32 32\">\n",
       "<path d=\"M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z\"></path>\n",
       "<path d=\"M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "<path d=\"M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "</symbol>\n",
       "<symbol id=\"icon-file-text2\" viewBox=\"0 0 32 32\">\n",
       "<path d=\"M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z\"></path>\n",
       "<path d=\"M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "</symbol>\n",
       "</defs>\n",
       "</svg>\n",
       "<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.\n",
       " *\n",
       " */\n",
       "\n",
       ":root {\n",
       "  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));\n",
       "  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));\n",
       "  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));\n",
       "  --xr-border-color: var(--jp-border-color2, #e0e0e0);\n",
       "  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);\n",
       "  --xr-background-color: var(--jp-layout-color0, white);\n",
       "  --xr-background-color-row-even: var(--jp-layout-color1, white);\n",
       "  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);\n",
       "}\n",
       "\n",
       "html[theme=\"dark\"],\n",
       "html[data-theme=\"dark\"],\n",
       "body[data-theme=\"dark\"],\n",
       "body.vscode-dark {\n",
       "  --xr-font-color0: rgba(255, 255, 255, 1);\n",
       "  --xr-font-color2: rgba(255, 255, 255, 0.54);\n",
       "  --xr-font-color3: rgba(255, 255, 255, 0.38);\n",
       "  --xr-border-color: #1f1f1f;\n",
       "  --xr-disabled-color: #515151;\n",
       "  --xr-background-color: #111111;\n",
       "  --xr-background-color-row-even: #111111;\n",
       "  --xr-background-color-row-odd: #313131;\n",
       "}\n",
       "\n",
       ".xr-wrap {\n",
       "  display: block !important;\n",
       "  min-width: 300px;\n",
       "  max-width: 700px;\n",
       "}\n",
       "\n",
       ".xr-text-repr-fallback {\n",
       "  /* fallback to plain text repr when CSS is not injected (untrusted notebook) */\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-header {\n",
       "  padding-top: 6px;\n",
       "  padding-bottom: 6px;\n",
       "  margin-bottom: 4px;\n",
       "  border-bottom: solid 1px var(--xr-border-color);\n",
       "}\n",
       "\n",
       ".xr-header > div,\n",
       ".xr-header > ul {\n",
       "  display: inline;\n",
       "  margin-top: 0;\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-obj-type,\n",
       ".xr-array-name {\n",
       "  margin-left: 2px;\n",
       "  margin-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-obj-type {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-sections {\n",
       "  padding-left: 0 !important;\n",
       "  display: grid;\n",
       "  grid-template-columns: 150px auto auto 1fr 0 20px 0 20px;\n",
       "}\n",
       "\n",
       ".xr-section-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-section-item input {\n",
       "  display: inline-block;\n",
       "  opacity: 0;\n",
       "  height: 0;\n",
       "}\n",
       "\n",
       ".xr-section-item input + label {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label {\n",
       "  cursor: pointer;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-item input:focus + label {\n",
       "  border: 2px solid var(--xr-font-color0);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label:hover {\n",
       "  color: var(--xr-font-color0);\n",
       "}\n",
       "\n",
       ".xr-section-summary {\n",
       "  grid-column: 1;\n",
       "  color: var(--xr-font-color2);\n",
       "  font-weight: 500;\n",
       "}\n",
       "\n",
       ".xr-section-summary > span {\n",
       "  display: inline-block;\n",
       "  padding-left: 0.5em;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in + label:before {\n",
       "  display: inline-block;\n",
       "  content: \"►\";\n",
       "  font-size: 11px;\n",
       "  width: 15px;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label:before {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label:before {\n",
       "  content: \"▼\";\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label > span {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-summary,\n",
       ".xr-section-inline-details {\n",
       "  padding-top: 4px;\n",
       "  padding-bottom: 4px;\n",
       "}\n",
       "\n",
       ".xr-section-inline-details {\n",
       "  grid-column: 2 / -1;\n",
       "}\n",
       "\n",
       ".xr-section-details {\n",
       "  display: none;\n",
       "  grid-column: 1 / -1;\n",
       "  margin-bottom: 5px;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked ~ .xr-section-details {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-array-wrap {\n",
       "  grid-column: 1 / -1;\n",
       "  display: grid;\n",
       "  grid-template-columns: 20px auto;\n",
       "}\n",
       "\n",
       ".xr-array-wrap > label {\n",
       "  grid-column: 1;\n",
       "  vertical-align: top;\n",
       "}\n",
       "\n",
       ".xr-preview {\n",
       "  color: var(--xr-font-color3);\n",
       "}\n",
       "\n",
       ".xr-array-preview,\n",
       ".xr-array-data {\n",
       "  padding: 0 5px !important;\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-array-data,\n",
       ".xr-array-in:checked ~ .xr-array-preview {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-array-in:checked ~ .xr-array-data,\n",
       ".xr-array-preview {\n",
       "  display: inline-block;\n",
       "}\n",
       "\n",
       ".xr-dim-list {\n",
       "  display: inline-block !important;\n",
       "  list-style: none;\n",
       "  padding: 0 !important;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list li {\n",
       "  display: inline-block;\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list:before {\n",
       "  content: \"(\";\n",
       "}\n",
       "\n",
       ".xr-dim-list:after {\n",
       "  content: \")\";\n",
       "}\n",
       "\n",
       ".xr-dim-list li:not(:last-child):after {\n",
       "  content: \",\";\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-has-index {\n",
       "  font-weight: bold;\n",
       "}\n",
       "\n",
       ".xr-var-list,\n",
       ".xr-var-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-var-item > div,\n",
       ".xr-var-item label,\n",
       ".xr-var-item > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-even);\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-var-item > .xr-var-name:hover span {\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-var-list > li:nth-child(odd) > div,\n",
       ".xr-var-list > li:nth-child(odd) > label,\n",
       ".xr-var-list > li:nth-child(odd) > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-odd);\n",
       "}\n",
       "\n",
       ".xr-var-name {\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-var-dims {\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-var-dtype {\n",
       "  grid-column: 3;\n",
       "  text-align: right;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-var-preview {\n",
       "  grid-column: 4;\n",
       "}\n",
       "\n",
       ".xr-index-preview {\n",
       "  grid-column: 2 / 5;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-var-name,\n",
       ".xr-var-dims,\n",
       ".xr-var-dtype,\n",
       ".xr-preview,\n",
       ".xr-attrs dt {\n",
       "  white-space: nowrap;\n",
       "  overflow: hidden;\n",
       "  text-overflow: ellipsis;\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-var-name:hover,\n",
       ".xr-var-dims:hover,\n",
       ".xr-var-dtype:hover,\n",
       ".xr-attrs dt:hover {\n",
       "  overflow: visible;\n",
       "  width: auto;\n",
       "  z-index: 1;\n",
       "}\n",
       "\n",
       ".xr-var-attrs,\n",
       ".xr-var-data,\n",
       ".xr-index-data {\n",
       "  display: none;\n",
       "  background-color: var(--xr-background-color) !important;\n",
       "  padding-bottom: 5px !important;\n",
       "}\n",
       "\n",
       ".xr-var-attrs-in:checked ~ .xr-var-attrs,\n",
       ".xr-var-data-in:checked ~ .xr-var-data,\n",
       ".xr-index-data-in:checked ~ .xr-index-data {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       ".xr-var-data > table {\n",
       "  float: right;\n",
       "}\n",
       "\n",
       ".xr-var-name span,\n",
       ".xr-var-data,\n",
       ".xr-index-name div,\n",
       ".xr-index-data,\n",
       ".xr-attrs {\n",
       "  padding-left: 25px !important;\n",
       "}\n",
       "\n",
       ".xr-attrs,\n",
       ".xr-var-attrs,\n",
       ".xr-var-data,\n",
       ".xr-index-data {\n",
       "  grid-column: 1 / -1;\n",
       "}\n",
       "\n",
       "dl.xr-attrs {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  display: grid;\n",
       "  grid-template-columns: 125px auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt,\n",
       ".xr-attrs dd {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  float: left;\n",
       "  padding-right: 10px;\n",
       "  width: auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt {\n",
       "  font-weight: normal;\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-attrs dt:hover span {\n",
       "  display: inline-block;\n",
       "  background: var(--xr-background-color);\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-attrs dd {\n",
       "  grid-column: 2;\n",
       "  white-space: pre-wrap;\n",
       "  word-break: break-all;\n",
       "}\n",
       "\n",
       ".xr-icon-database,\n",
       ".xr-icon-file-text2,\n",
       ".xr-no-icon {\n",
       "  display: inline-block;\n",
       "  vertical-align: middle;\n",
       "  width: 1em;\n",
       "  height: 1.5em !important;\n",
       "  stroke-width: 0;\n",
       "  stroke: currentColor;\n",
       "  fill: currentColor;\n",
       "}\n",
       "</style><pre class='xr-text-repr-fallback'>&lt;xarray.Dataset&gt; Size: 205kB\n",
       "Dimensions:                      (sample: 100, component: 2, x: 150, grid: 2500)\n",
       "Coordinates:\n",
       "  * component                    (component) &lt;U1 8B &#x27;A&#x27; &#x27;B&#x27;\n",
       "  * x                            (x) float64 1kB 0.001 0.001047 ... 0.9547 1.0\n",
       "Dimensions without coordinates: sample, grid\n",
       "Data variables:\n",
       "    composition                  (sample, component) float64 2kB 5.7 ... 5.104\n",
       "    ground_truth_labels          (sample) int64 800B 1 1 0 1 0 1 ... 1 1 1 0 1 1\n",
       "    measurement                  (sample, x) float64 120kB 1.915e+06 ... 1.885\n",
       "    composition_grid             (grid, component) float64 40kB 0.0 0.0 ... 25.0\n",
       "    normalized_composition       (sample, component) float64 2kB 0.57 ... 0.2042\n",
       "    normalized_composition_grid  (grid, component) float64 40kB 0.0 0.0 ... 1.0</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.Dataset</div></div><ul class='xr-sections'><li class='xr-section-item'><input id='section-bf08e598-68e5-47b6-931f-18db4e2706e4' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-bf08e598-68e5-47b6-931f-18db4e2706e4' class='xr-section-summary'  title='Expand/collapse section'>Dimensions:</label><div class='xr-section-inline-details'><ul class='xr-dim-list'><li><span>sample</span>: 100</li><li><span class='xr-has-index'>component</span>: 2</li><li><span class='xr-has-index'>x</span>: 150</li><li><span>grid</span>: 2500</li></ul></div><div class='xr-section-details'></div></li><li class='xr-section-item'><input id='section-1414000f-27a7-452f-9688-c70e37f23a84' class='xr-section-summary-in' type='checkbox'  checked><label for='section-1414000f-27a7-452f-9688-c70e37f23a84' class='xr-section-summary' >Coordinates: <span>(2)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>component</span></div><div class='xr-var-dims'>(component)</div><div class='xr-var-dtype'>&lt;U1</div><div class='xr-var-preview xr-preview'>&#x27;A&#x27; &#x27;B&#x27;</div><input id='attrs-4a9b7554-f66d-4f4a-baaa-abc750f67710' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-4a9b7554-f66d-4f4a-baaa-abc750f67710' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-65e55b54-6834-4ae3-b149-7ed2f5502914' class='xr-var-data-in' type='checkbox'><label for='data-65e55b54-6834-4ae3-b149-7ed2f5502914' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;A&#x27;, &#x27;B&#x27;], dtype=&#x27;&lt;U1&#x27;)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>x</span></div><div class='xr-var-dims'>(x)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>0.001 0.001047 ... 0.9547 1.0</div><input id='attrs-35753c96-be18-415f-b72b-70ec0bbec660' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-35753c96-be18-415f-b72b-70ec0bbec660' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-6d3a0e5d-dbac-4139-9f1f-70c1e23f8b9b' class='xr-var-data-in' type='checkbox'><label for='data-6d3a0e5d-dbac-4139-9f1f-70c1e23f8b9b' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([0.001   , 0.001047, 0.001097, 0.001149, 0.001204, 0.001261, 0.001321,\n",
       "       0.001383, 0.001449, 0.001518, 0.00159 , 0.001665, 0.001744, 0.001827,\n",
       "       0.001914, 0.002005, 0.0021  , 0.002199, 0.002304, 0.002413, 0.002527,\n",
       "       0.002647, 0.002773, 0.002905, 0.003042, 0.003187, 0.003338, 0.003496,\n",
       "       0.003662, 0.003836, 0.004018, 0.004209, 0.004409, 0.004618, 0.004837,\n",
       "       0.005066, 0.005307, 0.005559, 0.005822, 0.006099, 0.006388, 0.006691,\n",
       "       0.007009, 0.007341, 0.00769 , 0.008055, 0.008437, 0.008837, 0.009256,\n",
       "       0.009696, 0.010156, 0.010638, 0.011142, 0.011671, 0.012225, 0.012805,\n",
       "       0.013413, 0.014049, 0.014716, 0.015414, 0.016146, 0.016912, 0.017714,\n",
       "       0.018555, 0.019435, 0.020358, 0.021324, 0.022335, 0.023395, 0.024505,\n",
       "       0.025668, 0.026886, 0.028162, 0.029498, 0.030898, 0.032364, 0.0339  ,\n",
       "       0.035509, 0.037194, 0.038959, 0.040807, 0.042744, 0.044772, 0.046897,\n",
       "       0.049122, 0.051453, 0.053894, 0.056452, 0.059131, 0.061936, 0.064875,\n",
       "       0.067954, 0.071179, 0.074556, 0.078094, 0.0818  , 0.085681, 0.089747,\n",
       "       0.094006, 0.098467, 0.103139, 0.108033, 0.11316 , 0.118529, 0.124154,\n",
       "       0.130045, 0.136216, 0.14268 , 0.14945 , 0.156542, 0.16397 , 0.171751,\n",
       "       0.179901, 0.188438, 0.197379, 0.206746, 0.216556, 0.226832, 0.237596,\n",
       "       0.24887 , 0.26068 , 0.27305 , 0.286006, 0.299578, 0.313794, 0.328684,\n",
       "       0.344281, 0.360618, 0.37773 , 0.395654, 0.414429, 0.434094, 0.454693,\n",
       "       0.476269, 0.498869, 0.522542, 0.547337, 0.57331 , 0.600514, 0.62901 ,\n",
       "       0.658858, 0.690122, 0.72287 , 0.757172, 0.793102, 0.830736, 0.870156,\n",
       "       0.911447, 0.954697, 1.      ])</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-6e5c6a34-674b-4518-b64a-c0bc8e9a3e9a' class='xr-section-summary-in' type='checkbox'  checked><label for='section-6e5c6a34-674b-4518-b64a-c0bc8e9a3e9a' class='xr-section-summary' >Data variables: <span>(6)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span>composition</span></div><div class='xr-var-dims'>(sample, component)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>5.7 1.36 8.938 ... 0.478 5.104</div><input id='attrs-5f09829c-4cd2-4e6b-9361-bc7e8b42e7c4' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-5f09829c-4cd2-4e6b-9361-bc7e8b42e7c4' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-d22a83c7-6a0e-4641-a932-a3f7997e92eb' class='xr-var-data-in' type='checkbox'><label for='data-d22a83c7-6a0e-4641-a932-a3f7997e92eb' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[ 5.69995762,  1.36017531],\n",
       "       [ 8.93782024, 16.17384162],\n",
       "       [ 3.77901101, 19.69531938],\n",
       "       [ 9.82535598,  7.16351158],\n",
       "       [ 1.60370118, 23.73217969],\n",
       "       [ 7.90994751, 14.71385158],\n",
       "       [ 2.17465804,  4.75450299],\n",
       "       [ 9.30875652,  2.86311327],\n",
       "       [ 2.78926787,  0.04909185],\n",
       "       [ 5.0368155 , 17.80655234],\n",
       "       [ 1.18529693, 16.40857492],\n",
       "       [ 1.65214034, 19.7760677 ],\n",
       "       [ 2.73176727,  0.18850408],\n",
       "       [ 9.22314222,  7.21778243],\n",
       "       [ 8.33560023,  5.22074632],\n",
       "       [ 8.10711809, 22.36120136],\n",
       "       [ 4.10263293,  6.17733076],\n",
       "       [ 7.94096049, 10.98300725],\n",
       "       [ 6.58238609, 15.27804755],\n",
       "       [ 3.78026574, 20.5150357 ],\n",
       "...\n",
       "       [ 5.0825235 ,  5.36441059],\n",
       "       [ 8.50770583,  2.52786027],\n",
       "       [ 4.46324027,  6.75171924],\n",
       "       [ 8.52523439,  6.71058719],\n",
       "       [ 9.23218578, 20.72269505],\n",
       "       [ 6.7555881 , 10.24855529],\n",
       "       [ 7.67539066,  1.6795503 ],\n",
       "       [ 5.8397554 , 10.64947346],\n",
       "       [ 0.22478436, 18.35236821],\n",
       "       [ 8.83077635, 10.65541542],\n",
       "       [ 8.98441453,  0.03322162],\n",
       "       [ 0.11755953, 11.77699299],\n",
       "       [ 7.90192605, 18.94690136],\n",
       "       [ 7.42679234, 23.72441631],\n",
       "       [ 8.7338296 , 12.27428886],\n",
       "       [ 2.2094947 ,  9.43848935],\n",
       "       [ 8.92898549, 10.34927984],\n",
       "       [ 0.79890552, 16.37383273],\n",
       "       [ 2.50284147,  0.0800645 ],\n",
       "       [ 0.47797863,  5.10399908]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>ground_truth_labels</span></div><div class='xr-var-dims'>(sample)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>1 1 0 1 0 1 1 1 ... 1 1 1 1 1 0 1 1</div><input id='attrs-913b81ac-24f2-4bc7-a77f-bad5664cdb84' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-913b81ac-24f2-4bc7-a77f-bad5664cdb84' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-2e990310-5172-4159-be93-7123a0d59e31' class='xr-var-data-in' type='checkbox'><label for='data-2e990310-5172-4159-be93-7123a0d59e31' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1,\n",
       "       1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0,\n",
       "       1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1,\n",
       "       1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
       "       0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>measurement</span></div><div class='xr-var-dims'>(sample, x)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>1.915e+06 1.479e+06 ... 1.766 1.885</div><input id='attrs-36c86a3a-c103-4660-bec9-f6fb6e87bd42' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-36c86a3a-c103-4660-bec9-f6fb6e87bd42' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-b3161556-16a8-4ed9-a0df-63e45912f4af' class='xr-var-data-in' type='checkbox'><label for='data-b3161556-16a8-4ed9-a0df-63e45912f4af' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[1.91473866e+06, 1.47945621e+06, 1.36028471e+06, ...,\n",
       "        1.94187833e+00, 1.95975369e+00, 2.07151476e+00],\n",
       "       [1.97716281e+06, 1.35648739e+06, 1.63877436e+06, ...,\n",
       "        1.90008720e+00, 1.76008223e+00, 2.09466497e+00],\n",
       "       [9.73830160e-01, 7.68956928e-01, 1.03891097e+00, ...,\n",
       "        9.25128766e-01, 6.82586751e-01, 1.00886636e+00],\n",
       "       ...,\n",
       "       [1.42016873e+00, 8.73396019e-01, 1.23904051e+00, ...,\n",
       "        1.14723090e+00, 1.27145347e+00, 9.40494323e-01],\n",
       "       [1.96972776e+06, 1.80114117e+06, 1.63801728e+06, ...,\n",
       "        2.53037078e+00, 1.96144836e+00, 2.37164783e+00],\n",
       "       [2.34596686e+06, 1.77244286e+06, 1.36862577e+06, ...,\n",
       "        2.05730051e+00, 1.76616880e+00, 1.88473841e+00]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>composition_grid</span></div><div class='xr-var-dims'>(grid, component)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>0.0 0.0 0.2041 ... 25.0 10.0 25.0</div><input id='attrs-6e681d5a-e64d-4cb1-ac4f-8cd99834328e' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-6e681d5a-e64d-4cb1-ac4f-8cd99834328e' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-3b1719a3-5440-45d3-ae1d-47ffc5f5f4cd' class='xr-var-data-in' type='checkbox'><label for='data-3b1719a3-5440-45d3-ae1d-47ffc5f5f4cd' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[ 0.        ,  0.        ],\n",
       "       [ 0.20408163,  0.        ],\n",
       "       [ 0.40816327,  0.        ],\n",
       "       ...,\n",
       "       [ 9.59183673, 25.        ],\n",
       "       [ 9.79591837, 25.        ],\n",
       "       [10.        , 25.        ]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>normalized_composition</span></div><div class='xr-var-dims'>(sample, component)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>0.57 0.05441 ... 0.0478 0.2042</div><input id='attrs-47fa49c5-ba46-4eaf-8891-f53b690d4cbc' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-47fa49c5-ba46-4eaf-8891-f53b690d4cbc' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-36606e22-e4f4-4e95-867e-eb64d2a61ad4' class='xr-var-data-in' type='checkbox'><label for='data-36606e22-e4f4-4e95-867e-eb64d2a61ad4' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd>Data normalized to have range 0 -&gt; 1</dd><dt><span>name :</span></dt><dd>Standardize</dd><dt><span>input_variable :</span></dt><dd>composition</dd><dt><span>output_variable :</span></dt><dd>normalized_composition</dd><dt><span>input_prefix :</span></dt><dd>None</dd><dt><span>output_prefix :</span></dt><dd>None</dd><dt><span>dim :</span></dt><dd>sample</dd><dt><span>component_dim :</span></dt><dd>component</dd><dt><span>min_val :</span></dt><dd>{&#x27;A&#x27;: 0.0, &#x27;B&#x27;: 0.0}</dd><dt><span>max_val :</span></dt><dd>{&#x27;A&#x27;: 10.0, &#x27;B&#x27;: 25.0}</dd><dt><span>scale_variable :</span></dt><dd>None</dd></dl></div><div class='xr-var-data'><pre>array([[0.56999576, 0.05440701],\n",
       "       [0.89378202, 0.64695366],\n",
       "       [0.3779011 , 0.78781278],\n",
       "       [0.9825356 , 0.28654046],\n",
       "       [0.16037012, 0.94928719],\n",
       "       [0.79099475, 0.58855406],\n",
       "       [0.2174658 , 0.19018012],\n",
       "       [0.93087565, 0.11452453],\n",
       "       [0.27892679, 0.00196367],\n",
       "       [0.50368155, 0.71226209],\n",
       "       [0.11852969, 0.656343  ],\n",
       "       [0.16521403, 0.79104271],\n",
       "       [0.27317673, 0.00754016],\n",
       "       [0.92231422, 0.2887113 ],\n",
       "       [0.83356002, 0.20882985],\n",
       "       [0.81071181, 0.89444805],\n",
       "       [0.41026329, 0.24709323],\n",
       "       [0.79409605, 0.43932029],\n",
       "       [0.65823861, 0.6111219 ],\n",
       "       [0.37802657, 0.82060143],\n",
       "...\n",
       "       [0.50825235, 0.21457642],\n",
       "       [0.85077058, 0.10111441],\n",
       "       [0.44632403, 0.27006877],\n",
       "       [0.85252344, 0.26842349],\n",
       "       [0.92321858, 0.8289078 ],\n",
       "       [0.67555881, 0.40994221],\n",
       "       [0.76753907, 0.06718201],\n",
       "       [0.58397554, 0.42597894],\n",
       "       [0.02247844, 0.73409473],\n",
       "       [0.88307764, 0.42621662],\n",
       "       [0.89844145, 0.00132886],\n",
       "       [0.01175595, 0.47107972],\n",
       "       [0.7901926 , 0.75787605],\n",
       "       [0.74267923, 0.94897665],\n",
       "       [0.87338296, 0.49097155],\n",
       "       [0.22094947, 0.37753957],\n",
       "       [0.89289855, 0.41397119],\n",
       "       [0.07989055, 0.65495331],\n",
       "       [0.25028415, 0.00320258],\n",
       "       [0.04779786, 0.20415996]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>normalized_composition_grid</span></div><div class='xr-var-dims'>(grid, component)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>0.0 0.0 0.02041 0.0 ... 1.0 1.0 1.0</div><input id='attrs-29a26229-29c7-4928-b403-5fff530f42d8' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-29a26229-29c7-4928-b403-5fff530f42d8' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-3d5068de-699c-42ed-bdb0-e1dfe0feffb7' class='xr-var-data-in' type='checkbox'><label for='data-3d5068de-699c-42ed-bdb0-e1dfe0feffb7' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd>Data normalized to have range 0 -&gt; 1</dd><dt><span>name :</span></dt><dd>Standardize</dd><dt><span>input_variable :</span></dt><dd>composition_grid</dd><dt><span>output_variable :</span></dt><dd>normalized_composition_grid</dd><dt><span>input_prefix :</span></dt><dd>None</dd><dt><span>output_prefix :</span></dt><dd>None</dd><dt><span>dim :</span></dt><dd>grid</dd><dt><span>component_dim :</span></dt><dd>component</dd><dt><span>min_val :</span></dt><dd>{&#x27;A&#x27;: 0.0, &#x27;B&#x27;: 0.0}</dd><dt><span>max_val :</span></dt><dd>{&#x27;A&#x27;: 10.0, &#x27;B&#x27;: 25.0}</dd><dt><span>scale_variable :</span></dt><dd>None</dd></dl></div><div class='xr-var-data'><pre>array([[0.        , 0.        ],\n",
       "       [0.02040816, 0.        ],\n",
       "       [0.04081633, 0.        ],\n",
       "       ...,\n",
       "       [0.95918367, 1.        ],\n",
       "       [0.97959184, 1.        ],\n",
       "       [1.        , 1.        ]])</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-34f297c6-2ca1-45f8-8e9a-608cfdee90bd' class='xr-section-summary-in' type='checkbox'  ><label for='section-34f297c6-2ca1-45f8-8e9a-608cfdee90bd' class='xr-section-summary' >Indexes: <span>(2)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-index-name'><div>component</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-64537286-f32b-4a82-b16f-b163ca7168b1' class='xr-index-data-in' type='checkbox'/><label for='index-64537286-f32b-4a82-b16f-b163ca7168b1' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([&#x27;A&#x27;, &#x27;B&#x27;], dtype=&#x27;object&#x27;, name=&#x27;component&#x27;))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>x</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-50239969-b0a1-4d4b-b9b8-c1f9d7893a8e' class='xr-index-data-in' type='checkbox'/><label for='index-50239969-b0a1-4d4b-b9b8-c1f9d7893a8e' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([                0.001, 0.0010474522360006332, 0.0010971561867027272,\n",
       "       0.0011492187010036998, 0.0012037516980200685, 0.0012608724076806808,\n",
       "        0.001320703622736631, 0.0013833739627296209,  0.001449018150486198,\n",
       "       0.0015177773017322714,\n",
       "       ...\n",
       "          0.6588581861506815,    0.6901224802908528,    0.7228703350949566,\n",
       "            0.75717214883374,    0.7931016603333051,    0.8307361074919352,\n",
       "          0.8701563933188907,    0.9114472598521185,    0.9546974703287516,\n",
       "                         1.0],\n",
       "      dtype=&#x27;float64&#x27;, name=&#x27;x&#x27;, length=150))</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-868dd175-36f7-478d-8a3a-95d2c78f3e39' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-868dd175-36f7-478d-8a3a-95d2c78f3e39' class='xr-section-summary'  title='Expand/collapse section'>Attributes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'></dl></div></li></ul></div></div>"
      ],
      "text/plain": [
       "<xarray.Dataset> Size: 205kB\n",
       "Dimensions:                      (sample: 100, component: 2, x: 150, grid: 2500)\n",
       "Coordinates:\n",
       "  * component                    (component) <U1 8B 'A' 'B'\n",
       "  * x                            (x) float64 1kB 0.001 0.001047 ... 0.9547 1.0\n",
       "Dimensions without coordinates: sample, grid\n",
       "Data variables:\n",
       "    composition                  (sample, component) float64 2kB 5.7 ... 5.104\n",
       "    ground_truth_labels          (sample) int64 800B 1 1 0 1 0 1 ... 1 1 1 0 1 1\n",
       "    measurement                  (sample, x) float64 120kB 1.915e+06 ... 1.885\n",
       "    composition_grid             (grid, component) float64 40kB 0.0 0.0 ... 25.0\n",
       "    normalized_composition       (sample, component) float64 2kB 0.57 ... 0.2042\n",
       "    normalized_composition_grid  (grid, component) float64 40kB 0.0 0.0 ... 1.0"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ds_result = my_first_pipeline.calculate(ds);\n",
    "ds_result"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Note that the output dataset `ds_result` contains not only all of the data from `ds` but also two new variables that were produced by the pipeline operations that we added: `normalized composition` and `normalized_composition_grid`.\n",
    "\n",
    "We can visualise the results of the normalization by plotting the  `composition` and  `normalized_composition` variables side-by-side. We'll do this by using the `plot_scatter_mpl` helper function from `AFL.double_agent.plotting`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[Text(0.5, 1.0, 'Normalized Composition Data')]"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x325 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig,axes = plt.subplots(1,2,figsize=(8,3.25))\n",
    "\n",
    "plot_scatter_mpl(ds_result,'composition',component_dim='component',labels='ground_truth_labels',ax=axes[0])\n",
    "axes[0].set(title='Raw Composition Data')\n",
    "\n",
    "plot_scatter_mpl(ds_result,'normalized_composition',component_dim='component',labels='ground_truth_labels',ax=axes[1])\n",
    "axes[1].set(title='Normalized Composition Data')\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Note that the relative data positions are unchanged, only the magnitude of the axes is changed. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Step 2: Savitsky-Golay Filter"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now that we have the composition data processed, we can move on to processing the measurement data. In many cases, smoothing and filtering data can help remove noise and emphasize features in data that you want your agent to focus on. \n",
    "\n",
    "Here we'll add a `SavgolFilter` operation in order to calculate the first derivative of the measurement data. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "PipelineOp                               input_variable ---> output_variable\n",
      "----------                               -----------------------------------\n",
      "0  ) <Standardize>                       composition ---> normalized_composition\n",
      "1  ) <Standardize>                       composition_grid ---> normalized_composition_grid\n",
      "2  ) <SavgolFilter>                      measurement ---> derivative\n",
      "\n",
      "Input Variables\n",
      "---------------\n",
      "0) composition\n",
      "1) composition_grid\n",
      "2) measurement\n",
      "\n",
      "Output Variables\n",
      "----------------\n",
      "0) normalized_composition\n",
      "1) normalized_composition_grid\n",
      "2) derivative\n"
     ]
    }
   ],
   "source": [
    "with my_first_pipeline:\n",
    "\n",
    "       SavgolFilter(\n",
    "           input_variable='measurement', \n",
    "           output_variable='derivative', \n",
    "           dim='x', \n",
    "           window_length=50,\n",
    "           apply_log_scale=True,\n",
    "           derivative=1,\n",
    "\n",
    "           )\n",
    "\n",
    "my_first_pipeline.print()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "\n",
    "Let's go through each argument passed to SavgolFilter:\n",
    "\n",
    "* `input_variable='measurement'`: Specifies the data variable to filter, in this case the raw measurement data\n",
    "* `output_variable='derivative'`: Names the new variable that will store the filtered/derivative data\n",
    "* `dim='x'`: Indicates which dimension to apply the filter along (the x-axis values)\n",
    "* `window_length=50`: Sets the size of the moving window used for filtering - larger values give smoother results\n",
    "* `apply_log_scale=True`: Takes the log of the x-axis values before filtering, useful for data spanning multiple orders of magnitude\n",
    "* `derivative=1`: Calculates the first derivative of the data while filtering\n",
    "\n",
    "We can run the pipeline on the dataset and plot the results."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "f82802c51a6e44d3baae14cd7202b0cc",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "  0%|          | 0/3 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div><svg style=\"position: absolute; width: 0; height: 0; overflow: hidden\">\n",
       "<defs>\n",
       "<symbol id=\"icon-database\" viewBox=\"0 0 32 32\">\n",
       "<path d=\"M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z\"></path>\n",
       "<path d=\"M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "<path d=\"M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "</symbol>\n",
       "<symbol id=\"icon-file-text2\" viewBox=\"0 0 32 32\">\n",
       "<path d=\"M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z\"></path>\n",
       "<path d=\"M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "</symbol>\n",
       "</defs>\n",
       "</svg>\n",
       "<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.\n",
       " *\n",
       " */\n",
       "\n",
       ":root {\n",
       "  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));\n",
       "  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));\n",
       "  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));\n",
       "  --xr-border-color: var(--jp-border-color2, #e0e0e0);\n",
       "  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);\n",
       "  --xr-background-color: var(--jp-layout-color0, white);\n",
       "  --xr-background-color-row-even: var(--jp-layout-color1, white);\n",
       "  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);\n",
       "}\n",
       "\n",
       "html[theme=\"dark\"],\n",
       "html[data-theme=\"dark\"],\n",
       "body[data-theme=\"dark\"],\n",
       "body.vscode-dark {\n",
       "  --xr-font-color0: rgba(255, 255, 255, 1);\n",
       "  --xr-font-color2: rgba(255, 255, 255, 0.54);\n",
       "  --xr-font-color3: rgba(255, 255, 255, 0.38);\n",
       "  --xr-border-color: #1f1f1f;\n",
       "  --xr-disabled-color: #515151;\n",
       "  --xr-background-color: #111111;\n",
       "  --xr-background-color-row-even: #111111;\n",
       "  --xr-background-color-row-odd: #313131;\n",
       "}\n",
       "\n",
       ".xr-wrap {\n",
       "  display: block !important;\n",
       "  min-width: 300px;\n",
       "  max-width: 700px;\n",
       "}\n",
       "\n",
       ".xr-text-repr-fallback {\n",
       "  /* fallback to plain text repr when CSS is not injected (untrusted notebook) */\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-header {\n",
       "  padding-top: 6px;\n",
       "  padding-bottom: 6px;\n",
       "  margin-bottom: 4px;\n",
       "  border-bottom: solid 1px var(--xr-border-color);\n",
       "}\n",
       "\n",
       ".xr-header > div,\n",
       ".xr-header > ul {\n",
       "  display: inline;\n",
       "  margin-top: 0;\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-obj-type,\n",
       ".xr-array-name {\n",
       "  margin-left: 2px;\n",
       "  margin-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-obj-type {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-sections {\n",
       "  padding-left: 0 !important;\n",
       "  display: grid;\n",
       "  grid-template-columns: 150px auto auto 1fr 0 20px 0 20px;\n",
       "}\n",
       "\n",
       ".xr-section-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-section-item input {\n",
       "  display: inline-block;\n",
       "  opacity: 0;\n",
       "  height: 0;\n",
       "}\n",
       "\n",
       ".xr-section-item input + label {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label {\n",
       "  cursor: pointer;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-item input:focus + label {\n",
       "  border: 2px solid var(--xr-font-color0);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label:hover {\n",
       "  color: var(--xr-font-color0);\n",
       "}\n",
       "\n",
       ".xr-section-summary {\n",
       "  grid-column: 1;\n",
       "  color: var(--xr-font-color2);\n",
       "  font-weight: 500;\n",
       "}\n",
       "\n",
       ".xr-section-summary > span {\n",
       "  display: inline-block;\n",
       "  padding-left: 0.5em;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in + label:before {\n",
       "  display: inline-block;\n",
       "  content: \"►\";\n",
       "  font-size: 11px;\n",
       "  width: 15px;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label:before {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label:before {\n",
       "  content: \"▼\";\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label > span {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-summary,\n",
       ".xr-section-inline-details {\n",
       "  padding-top: 4px;\n",
       "  padding-bottom: 4px;\n",
       "}\n",
       "\n",
       ".xr-section-inline-details {\n",
       "  grid-column: 2 / -1;\n",
       "}\n",
       "\n",
       ".xr-section-details {\n",
       "  display: none;\n",
       "  grid-column: 1 / -1;\n",
       "  margin-bottom: 5px;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked ~ .xr-section-details {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-array-wrap {\n",
       "  grid-column: 1 / -1;\n",
       "  display: grid;\n",
       "  grid-template-columns: 20px auto;\n",
       "}\n",
       "\n",
       ".xr-array-wrap > label {\n",
       "  grid-column: 1;\n",
       "  vertical-align: top;\n",
       "}\n",
       "\n",
       ".xr-preview {\n",
       "  color: var(--xr-font-color3);\n",
       "}\n",
       "\n",
       ".xr-array-preview,\n",
       ".xr-array-data {\n",
       "  padding: 0 5px !important;\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-array-data,\n",
       ".xr-array-in:checked ~ .xr-array-preview {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-array-in:checked ~ .xr-array-data,\n",
       ".xr-array-preview {\n",
       "  display: inline-block;\n",
       "}\n",
       "\n",
       ".xr-dim-list {\n",
       "  display: inline-block !important;\n",
       "  list-style: none;\n",
       "  padding: 0 !important;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list li {\n",
       "  display: inline-block;\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list:before {\n",
       "  content: \"(\";\n",
       "}\n",
       "\n",
       ".xr-dim-list:after {\n",
       "  content: \")\";\n",
       "}\n",
       "\n",
       ".xr-dim-list li:not(:last-child):after {\n",
       "  content: \",\";\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-has-index {\n",
       "  font-weight: bold;\n",
       "}\n",
       "\n",
       ".xr-var-list,\n",
       ".xr-var-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-var-item > div,\n",
       ".xr-var-item label,\n",
       ".xr-var-item > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-even);\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-var-item > .xr-var-name:hover span {\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-var-list > li:nth-child(odd) > div,\n",
       ".xr-var-list > li:nth-child(odd) > label,\n",
       ".xr-var-list > li:nth-child(odd) > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-odd);\n",
       "}\n",
       "\n",
       ".xr-var-name {\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-var-dims {\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-var-dtype {\n",
       "  grid-column: 3;\n",
       "  text-align: right;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-var-preview {\n",
       "  grid-column: 4;\n",
       "}\n",
       "\n",
       ".xr-index-preview {\n",
       "  grid-column: 2 / 5;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-var-name,\n",
       ".xr-var-dims,\n",
       ".xr-var-dtype,\n",
       ".xr-preview,\n",
       ".xr-attrs dt {\n",
       "  white-space: nowrap;\n",
       "  overflow: hidden;\n",
       "  text-overflow: ellipsis;\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-var-name:hover,\n",
       ".xr-var-dims:hover,\n",
       ".xr-var-dtype:hover,\n",
       ".xr-attrs dt:hover {\n",
       "  overflow: visible;\n",
       "  width: auto;\n",
       "  z-index: 1;\n",
       "}\n",
       "\n",
       ".xr-var-attrs,\n",
       ".xr-var-data,\n",
       ".xr-index-data {\n",
       "  display: none;\n",
       "  background-color: var(--xr-background-color) !important;\n",
       "  padding-bottom: 5px !important;\n",
       "}\n",
       "\n",
       ".xr-var-attrs-in:checked ~ .xr-var-attrs,\n",
       ".xr-var-data-in:checked ~ .xr-var-data,\n",
       ".xr-index-data-in:checked ~ .xr-index-data {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       ".xr-var-data > table {\n",
       "  float: right;\n",
       "}\n",
       "\n",
       ".xr-var-name span,\n",
       ".xr-var-data,\n",
       ".xr-index-name div,\n",
       ".xr-index-data,\n",
       ".xr-attrs {\n",
       "  padding-left: 25px !important;\n",
       "}\n",
       "\n",
       ".xr-attrs,\n",
       ".xr-var-attrs,\n",
       ".xr-var-data,\n",
       ".xr-index-data {\n",
       "  grid-column: 1 / -1;\n",
       "}\n",
       "\n",
       "dl.xr-attrs {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  display: grid;\n",
       "  grid-template-columns: 125px auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt,\n",
       ".xr-attrs dd {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  float: left;\n",
       "  padding-right: 10px;\n",
       "  width: auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt {\n",
       "  font-weight: normal;\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-attrs dt:hover span {\n",
       "  display: inline-block;\n",
       "  background: var(--xr-background-color);\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-attrs dd {\n",
       "  grid-column: 2;\n",
       "  white-space: pre-wrap;\n",
       "  word-break: break-all;\n",
       "}\n",
       "\n",
       ".xr-icon-database,\n",
       ".xr-icon-file-text2,\n",
       ".xr-no-icon {\n",
       "  display: inline-block;\n",
       "  vertical-align: middle;\n",
       "  width: 1em;\n",
       "  height: 1.5em !important;\n",
       "  stroke-width: 0;\n",
       "  stroke: currentColor;\n",
       "  fill: currentColor;\n",
       "}\n",
       "</style><pre class='xr-text-repr-fallback'>&lt;xarray.Dataset&gt; Size: 407kB\n",
       "Dimensions:                      (sample: 100, component: 2, x: 150,\n",
       "                                  grid: 2500, log_x: 250)\n",
       "Coordinates:\n",
       "  * component                    (component) &lt;U1 8B &#x27;A&#x27; &#x27;B&#x27;\n",
       "  * x                            (x) float64 1kB 0.001 0.001047 ... 0.9547 1.0\n",
       "  * log_x                        (log_x) float64 2kB -3.0 -2.988 ... 0.0\n",
       "Dimensions without coordinates: sample, grid\n",
       "Data variables:\n",
       "    composition                  (sample, component) float64 2kB 5.7 ... 5.104\n",
       "    ground_truth_labels          (sample) int64 800B 1 1 0 1 0 1 ... 1 1 1 0 1 1\n",
       "    measurement                  (sample, x) float64 120kB 1.915e+06 ... 1.885\n",
       "    composition_grid             (grid, component) float64 40kB 0.0 0.0 ... 25.0\n",
       "    normalized_composition       (sample, component) float64 2kB 0.57 ... 0.2042\n",
       "    normalized_composition_grid  (grid, component) float64 40kB 0.0 0.0 ... 1.0\n",
       "    derivative                   (sample, log_x) float64 200kB -3.82 ... -0.4063</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.Dataset</div></div><ul class='xr-sections'><li class='xr-section-item'><input id='section-08d9cf13-8a76-45b7-a2dc-a9bd9d1c6d2a' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-08d9cf13-8a76-45b7-a2dc-a9bd9d1c6d2a' class='xr-section-summary'  title='Expand/collapse section'>Dimensions:</label><div class='xr-section-inline-details'><ul class='xr-dim-list'><li><span>sample</span>: 100</li><li><span class='xr-has-index'>component</span>: 2</li><li><span class='xr-has-index'>x</span>: 150</li><li><span>grid</span>: 2500</li><li><span class='xr-has-index'>log_x</span>: 250</li></ul></div><div class='xr-section-details'></div></li><li class='xr-section-item'><input id='section-2ccac94c-9880-4c63-bd9e-1756ce58258c' class='xr-section-summary-in' type='checkbox'  checked><label for='section-2ccac94c-9880-4c63-bd9e-1756ce58258c' class='xr-section-summary' >Coordinates: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>component</span></div><div class='xr-var-dims'>(component)</div><div class='xr-var-dtype'>&lt;U1</div><div class='xr-var-preview xr-preview'>&#x27;A&#x27; &#x27;B&#x27;</div><input id='attrs-ece68849-3a4e-4dd0-bd34-a6ce07505800' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-ece68849-3a4e-4dd0-bd34-a6ce07505800' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-7e4c808e-2c9b-4dc1-99f7-a622edd0a8d8' class='xr-var-data-in' type='checkbox'><label for='data-7e4c808e-2c9b-4dc1-99f7-a622edd0a8d8' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;A&#x27;, &#x27;B&#x27;], dtype=&#x27;&lt;U1&#x27;)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>x</span></div><div class='xr-var-dims'>(x)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>0.001 0.001047 ... 0.9547 1.0</div><input id='attrs-a2058df3-083d-4b8e-91b7-39d1ef995177' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-a2058df3-083d-4b8e-91b7-39d1ef995177' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-4dbb5606-76d2-43a8-8b43-fe4f54c1dee7' class='xr-var-data-in' type='checkbox'><label for='data-4dbb5606-76d2-43a8-8b43-fe4f54c1dee7' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([0.001   , 0.001047, 0.001097, 0.001149, 0.001204, 0.001261, 0.001321,\n",
       "       0.001383, 0.001449, 0.001518, 0.00159 , 0.001665, 0.001744, 0.001827,\n",
       "       0.001914, 0.002005, 0.0021  , 0.002199, 0.002304, 0.002413, 0.002527,\n",
       "       0.002647, 0.002773, 0.002905, 0.003042, 0.003187, 0.003338, 0.003496,\n",
       "       0.003662, 0.003836, 0.004018, 0.004209, 0.004409, 0.004618, 0.004837,\n",
       "       0.005066, 0.005307, 0.005559, 0.005822, 0.006099, 0.006388, 0.006691,\n",
       "       0.007009, 0.007341, 0.00769 , 0.008055, 0.008437, 0.008837, 0.009256,\n",
       "       0.009696, 0.010156, 0.010638, 0.011142, 0.011671, 0.012225, 0.012805,\n",
       "       0.013413, 0.014049, 0.014716, 0.015414, 0.016146, 0.016912, 0.017714,\n",
       "       0.018555, 0.019435, 0.020358, 0.021324, 0.022335, 0.023395, 0.024505,\n",
       "       0.025668, 0.026886, 0.028162, 0.029498, 0.030898, 0.032364, 0.0339  ,\n",
       "       0.035509, 0.037194, 0.038959, 0.040807, 0.042744, 0.044772, 0.046897,\n",
       "       0.049122, 0.051453, 0.053894, 0.056452, 0.059131, 0.061936, 0.064875,\n",
       "       0.067954, 0.071179, 0.074556, 0.078094, 0.0818  , 0.085681, 0.089747,\n",
       "       0.094006, 0.098467, 0.103139, 0.108033, 0.11316 , 0.118529, 0.124154,\n",
       "       0.130045, 0.136216, 0.14268 , 0.14945 , 0.156542, 0.16397 , 0.171751,\n",
       "       0.179901, 0.188438, 0.197379, 0.206746, 0.216556, 0.226832, 0.237596,\n",
       "       0.24887 , 0.26068 , 0.27305 , 0.286006, 0.299578, 0.313794, 0.328684,\n",
       "       0.344281, 0.360618, 0.37773 , 0.395654, 0.414429, 0.434094, 0.454693,\n",
       "       0.476269, 0.498869, 0.522542, 0.547337, 0.57331 , 0.600514, 0.62901 ,\n",
       "       0.658858, 0.690122, 0.72287 , 0.757172, 0.793102, 0.830736, 0.870156,\n",
       "       0.911447, 0.954697, 1.      ])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>log_x</span></div><div class='xr-var-dims'>(log_x)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>-3.0 -2.988 -2.976 ... -0.01205 0.0</div><input id='attrs-c310f043-b09a-4c12-a9b7-c56487a8d223' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-c310f043-b09a-4c12-a9b7-c56487a8d223' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-e77c2112-c0f3-429f-8d90-e15058694e84' class='xr-var-data-in' type='checkbox'><label for='data-e77c2112-c0f3-429f-8d90-e15058694e84' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([-3.      , -2.987952, -2.975904, ..., -0.024096, -0.012048,  0.      ])</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-6737158b-f357-4086-a8ad-f7dee470b182' class='xr-section-summary-in' type='checkbox'  checked><label for='section-6737158b-f357-4086-a8ad-f7dee470b182' class='xr-section-summary' >Data variables: <span>(7)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span>composition</span></div><div class='xr-var-dims'>(sample, component)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>5.7 1.36 8.938 ... 0.478 5.104</div><input id='attrs-b5d5aa91-f925-4203-907b-7c0d885ede2d' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-b5d5aa91-f925-4203-907b-7c0d885ede2d' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-cd486f3e-d565-4673-ac28-9c7a0512eac7' class='xr-var-data-in' type='checkbox'><label for='data-cd486f3e-d565-4673-ac28-9c7a0512eac7' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[ 5.69995762,  1.36017531],\n",
       "       [ 8.93782024, 16.17384162],\n",
       "       [ 3.77901101, 19.69531938],\n",
       "       [ 9.82535598,  7.16351158],\n",
       "       [ 1.60370118, 23.73217969],\n",
       "       [ 7.90994751, 14.71385158],\n",
       "       [ 2.17465804,  4.75450299],\n",
       "       [ 9.30875652,  2.86311327],\n",
       "       [ 2.78926787,  0.04909185],\n",
       "       [ 5.0368155 , 17.80655234],\n",
       "       [ 1.18529693, 16.40857492],\n",
       "       [ 1.65214034, 19.7760677 ],\n",
       "       [ 2.73176727,  0.18850408],\n",
       "       [ 9.22314222,  7.21778243],\n",
       "       [ 8.33560023,  5.22074632],\n",
       "       [ 8.10711809, 22.36120136],\n",
       "       [ 4.10263293,  6.17733076],\n",
       "       [ 7.94096049, 10.98300725],\n",
       "       [ 6.58238609, 15.27804755],\n",
       "       [ 3.78026574, 20.5150357 ],\n",
       "...\n",
       "       [ 5.0825235 ,  5.36441059],\n",
       "       [ 8.50770583,  2.52786027],\n",
       "       [ 4.46324027,  6.75171924],\n",
       "       [ 8.52523439,  6.71058719],\n",
       "       [ 9.23218578, 20.72269505],\n",
       "       [ 6.7555881 , 10.24855529],\n",
       "       [ 7.67539066,  1.6795503 ],\n",
       "       [ 5.8397554 , 10.64947346],\n",
       "       [ 0.22478436, 18.35236821],\n",
       "       [ 8.83077635, 10.65541542],\n",
       "       [ 8.98441453,  0.03322162],\n",
       "       [ 0.11755953, 11.77699299],\n",
       "       [ 7.90192605, 18.94690136],\n",
       "       [ 7.42679234, 23.72441631],\n",
       "       [ 8.7338296 , 12.27428886],\n",
       "       [ 2.2094947 ,  9.43848935],\n",
       "       [ 8.92898549, 10.34927984],\n",
       "       [ 0.79890552, 16.37383273],\n",
       "       [ 2.50284147,  0.0800645 ],\n",
       "       [ 0.47797863,  5.10399908]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>ground_truth_labels</span></div><div class='xr-var-dims'>(sample)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>1 1 0 1 0 1 1 1 ... 1 1 1 1 1 0 1 1</div><input id='attrs-5cb1512b-5d80-4b0f-b4d3-d017f2bc12bf' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-5cb1512b-5d80-4b0f-b4d3-d017f2bc12bf' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-de0c5dd9-723e-4e45-9169-4f16e72ed6aa' class='xr-var-data-in' type='checkbox'><label for='data-de0c5dd9-723e-4e45-9169-4f16e72ed6aa' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1,\n",
       "       1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0,\n",
       "       1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1,\n",
       "       1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
       "       0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>measurement</span></div><div class='xr-var-dims'>(sample, x)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>1.915e+06 1.479e+06 ... 1.766 1.885</div><input id='attrs-28924d1e-b940-4793-b623-a070861f449b' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-28924d1e-b940-4793-b623-a070861f449b' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-331dd0ba-406e-4e6a-acff-9d45932b18e1' class='xr-var-data-in' type='checkbox'><label for='data-331dd0ba-406e-4e6a-acff-9d45932b18e1' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[1.91473866e+06, 1.47945621e+06, 1.36028471e+06, ...,\n",
       "        1.94187833e+00, 1.95975369e+00, 2.07151476e+00],\n",
       "       [1.97716281e+06, 1.35648739e+06, 1.63877436e+06, ...,\n",
       "        1.90008720e+00, 1.76008223e+00, 2.09466497e+00],\n",
       "       [9.73830160e-01, 7.68956928e-01, 1.03891097e+00, ...,\n",
       "        9.25128766e-01, 6.82586751e-01, 1.00886636e+00],\n",
       "       ...,\n",
       "       [1.42016873e+00, 8.73396019e-01, 1.23904051e+00, ...,\n",
       "        1.14723090e+00, 1.27145347e+00, 9.40494323e-01],\n",
       "       [1.96972776e+06, 1.80114117e+06, 1.63801728e+06, ...,\n",
       "        2.53037078e+00, 1.96144836e+00, 2.37164783e+00],\n",
       "       [2.34596686e+06, 1.77244286e+06, 1.36862577e+06, ...,\n",
       "        2.05730051e+00, 1.76616880e+00, 1.88473841e+00]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>composition_grid</span></div><div class='xr-var-dims'>(grid, component)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>0.0 0.0 0.2041 ... 25.0 10.0 25.0</div><input id='attrs-69e665a3-7097-4399-98c9-d8450079ca13' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-69e665a3-7097-4399-98c9-d8450079ca13' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-c754701c-57cf-45dd-b473-c5547af2e1b4' class='xr-var-data-in' type='checkbox'><label for='data-c754701c-57cf-45dd-b473-c5547af2e1b4' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[ 0.        ,  0.        ],\n",
       "       [ 0.20408163,  0.        ],\n",
       "       [ 0.40816327,  0.        ],\n",
       "       ...,\n",
       "       [ 9.59183673, 25.        ],\n",
       "       [ 9.79591837, 25.        ],\n",
       "       [10.        , 25.        ]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>normalized_composition</span></div><div class='xr-var-dims'>(sample, component)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>0.57 0.05441 ... 0.0478 0.2042</div><input id='attrs-ed93b3af-067f-4136-99c3-039857295c99' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-ed93b3af-067f-4136-99c3-039857295c99' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-1649878f-71c2-4ba0-9b61-90310555d42d' class='xr-var-data-in' type='checkbox'><label for='data-1649878f-71c2-4ba0-9b61-90310555d42d' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd>Data normalized to have range 0 -&gt; 1</dd><dt><span>name :</span></dt><dd>Standardize</dd><dt><span>input_variable :</span></dt><dd>composition</dd><dt><span>output_variable :</span></dt><dd>normalized_composition</dd><dt><span>input_prefix :</span></dt><dd>None</dd><dt><span>output_prefix :</span></dt><dd>None</dd><dt><span>dim :</span></dt><dd>sample</dd><dt><span>component_dim :</span></dt><dd>component</dd><dt><span>min_val :</span></dt><dd>{&#x27;A&#x27;: 0.0, &#x27;B&#x27;: 0.0}</dd><dt><span>max_val :</span></dt><dd>{&#x27;A&#x27;: 10.0, &#x27;B&#x27;: 25.0}</dd><dt><span>scale_variable :</span></dt><dd>None</dd></dl></div><div class='xr-var-data'><pre>array([[0.56999576, 0.05440701],\n",
       "       [0.89378202, 0.64695366],\n",
       "       [0.3779011 , 0.78781278],\n",
       "       [0.9825356 , 0.28654046],\n",
       "       [0.16037012, 0.94928719],\n",
       "       [0.79099475, 0.58855406],\n",
       "       [0.2174658 , 0.19018012],\n",
       "       [0.93087565, 0.11452453],\n",
       "       [0.27892679, 0.00196367],\n",
       "       [0.50368155, 0.71226209],\n",
       "       [0.11852969, 0.656343  ],\n",
       "       [0.16521403, 0.79104271],\n",
       "       [0.27317673, 0.00754016],\n",
       "       [0.92231422, 0.2887113 ],\n",
       "       [0.83356002, 0.20882985],\n",
       "       [0.81071181, 0.89444805],\n",
       "       [0.41026329, 0.24709323],\n",
       "       [0.79409605, 0.43932029],\n",
       "       [0.65823861, 0.6111219 ],\n",
       "       [0.37802657, 0.82060143],\n",
       "...\n",
       "       [0.50825235, 0.21457642],\n",
       "       [0.85077058, 0.10111441],\n",
       "       [0.44632403, 0.27006877],\n",
       "       [0.85252344, 0.26842349],\n",
       "       [0.92321858, 0.8289078 ],\n",
       "       [0.67555881, 0.40994221],\n",
       "       [0.76753907, 0.06718201],\n",
       "       [0.58397554, 0.42597894],\n",
       "       [0.02247844, 0.73409473],\n",
       "       [0.88307764, 0.42621662],\n",
       "       [0.89844145, 0.00132886],\n",
       "       [0.01175595, 0.47107972],\n",
       "       [0.7901926 , 0.75787605],\n",
       "       [0.74267923, 0.94897665],\n",
       "       [0.87338296, 0.49097155],\n",
       "       [0.22094947, 0.37753957],\n",
       "       [0.89289855, 0.41397119],\n",
       "       [0.07989055, 0.65495331],\n",
       "       [0.25028415, 0.00320258],\n",
       "       [0.04779786, 0.20415996]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>normalized_composition_grid</span></div><div class='xr-var-dims'>(grid, component)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>0.0 0.0 0.02041 0.0 ... 1.0 1.0 1.0</div><input id='attrs-7bcb3627-c1cb-4aa9-8fc7-7cfd0023c672' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-7bcb3627-c1cb-4aa9-8fc7-7cfd0023c672' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-62e2630e-ec3e-4da9-9035-1bf40c198eff' class='xr-var-data-in' type='checkbox'><label for='data-62e2630e-ec3e-4da9-9035-1bf40c198eff' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd>Data normalized to have range 0 -&gt; 1</dd><dt><span>name :</span></dt><dd>Standardize</dd><dt><span>input_variable :</span></dt><dd>composition_grid</dd><dt><span>output_variable :</span></dt><dd>normalized_composition_grid</dd><dt><span>input_prefix :</span></dt><dd>None</dd><dt><span>output_prefix :</span></dt><dd>None</dd><dt><span>dim :</span></dt><dd>grid</dd><dt><span>component_dim :</span></dt><dd>component</dd><dt><span>min_val :</span></dt><dd>{&#x27;A&#x27;: 0.0, &#x27;B&#x27;: 0.0}</dd><dt><span>max_val :</span></dt><dd>{&#x27;A&#x27;: 10.0, &#x27;B&#x27;: 25.0}</dd><dt><span>scale_variable :</span></dt><dd>None</dd></dl></div><div class='xr-var-data'><pre>array([[0.        , 0.        ],\n",
       "       [0.02040816, 0.        ],\n",
       "       [0.04081633, 0.        ],\n",
       "       ...,\n",
       "       [0.95918367, 1.        ],\n",
       "       [0.97959184, 1.        ],\n",
       "       [1.        , 1.        ]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>derivative</span></div><div class='xr-var-dims'>(sample, log_x)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>-3.82 -3.825 ... -0.3897 -0.4063</div><input id='attrs-b8fd0deb-34c2-47ea-a7f1-2c9bdea403f1' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-b8fd0deb-34c2-47ea-a7f1-2c9bdea403f1' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-c97384ec-a2f9-40fc-91ba-cfaa2b3cbec6' class='xr-var-data-in' type='checkbox'><label for='data-c97384ec-a2f9-40fc-91ba-cfaa2b3cbec6' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd>Savitsky-Golay filtered data</dd><dt><span>name :</span></dt><dd>SavgolFilter</dd><dt><span>input_variable :</span></dt><dd>measurement</dd><dt><span>output_variable :</span></dt><dd>derivative</dd><dt><span>input_prefix :</span></dt><dd>None</dd><dt><span>output_prefix :</span></dt><dd>None</dd><dt><span>dim :</span></dt><dd>x</dd><dt><span>npts :</span></dt><dd>250</dd><dt><span>xlo :</span></dt><dd>None</dd><dt><span>xhi :</span></dt><dd>None</dd><dt><span>xlo_isel :</span></dt><dd>None</dd><dt><span>xhi_isel :</span></dt><dd>None</dd><dt><span>pedestal :</span></dt><dd>None</dd><dt><span>derivative :</span></dt><dd>1</dd><dt><span>apply_log_scale :</span></dt><dd>True</dd><dt><span>polyorder :</span></dt><dd>2</dd><dt><span>window_length :</span></dt><dd>50</dd></dl></div><div class='xr-var-data'><pre>array([[-3.82019992, -3.82462256, -3.82904519, ..., -0.35145453,\n",
       "        -0.36993018, -0.38840584],\n",
       "       [-4.2626048 , -4.24893257, -4.23526033, ...,  0.01349491,\n",
       "         0.01809932,  0.02270373],\n",
       "       [ 0.50261177,  0.4760206 ,  0.44942943, ...,  0.12473091,\n",
       "         0.13576784,  0.14680477],\n",
       "       ...,\n",
       "       [-0.24159282, -0.24193045, -0.24226809, ...,  0.52407629,\n",
       "         0.54400047,  0.56392465],\n",
       "       [-3.67922195, -3.69182355, -3.70442514, ...,  0.30180559,\n",
       "         0.31353524,  0.32526489],\n",
       "       [-3.96638732, -3.97110223, -3.97581713, ..., -0.37305086,\n",
       "        -0.389679  , -0.40630713]])</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-c2cad638-87cf-422a-a954-2d48ddc4329d' class='xr-section-summary-in' type='checkbox'  ><label for='section-c2cad638-87cf-422a-a954-2d48ddc4329d' class='xr-section-summary' >Indexes: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-index-name'><div>component</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-6e4bd182-1463-4ddd-8820-e69732f96ccd' class='xr-index-data-in' type='checkbox'/><label for='index-6e4bd182-1463-4ddd-8820-e69732f96ccd' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([&#x27;A&#x27;, &#x27;B&#x27;], dtype=&#x27;object&#x27;, name=&#x27;component&#x27;))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>x</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-ec1f6851-cd3e-4b64-b05f-31429e7203fb' class='xr-index-data-in' type='checkbox'/><label for='index-ec1f6851-cd3e-4b64-b05f-31429e7203fb' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([                0.001, 0.0010474522360006332, 0.0010971561867027272,\n",
       "       0.0011492187010036998, 0.0012037516980200685, 0.0012608724076806808,\n",
       "        0.001320703622736631, 0.0013833739627296209,  0.001449018150486198,\n",
       "       0.0015177773017322714,\n",
       "       ...\n",
       "          0.6588581861506815,    0.6901224802908528,    0.7228703350949566,\n",
       "            0.75717214883374,    0.7931016603333051,    0.8307361074919352,\n",
       "          0.8701563933188907,    0.9114472598521185,    0.9546974703287516,\n",
       "                         1.0],\n",
       "      dtype=&#x27;float64&#x27;, name=&#x27;x&#x27;, length=150))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>log_x</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-f1f68ac6-6b9e-4e95-a02b-555a82dbc8ea' class='xr-index-data-in' type='checkbox'/><label for='index-f1f68ac6-6b9e-4e95-a02b-555a82dbc8ea' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([                 -3.0,   -2.9879518072289155,   -2.9759036144578315,\n",
       "          -2.963855421686747,   -2.9518072289156625,   -2.9397590361445785,\n",
       "          -2.927710843373494,   -2.9156626506024095,   -2.9036144578313254,\n",
       "          -2.891566265060241,\n",
       "       ...\n",
       "        -0.10843373493975905,  -0.09638554216867457,  -0.08433734939759008,\n",
       "        -0.07228915662650603,  -0.06024096385542155,  -0.04819277108433706,\n",
       "        -0.03614457831325302,  -0.02409638554216853, -0.012048192771084043,\n",
       "                         0.0],\n",
       "      dtype=&#x27;float64&#x27;, name=&#x27;log_x&#x27;, length=250))</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-80662140-3ccf-4f2f-bc41-2421ee00c698' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-80662140-3ccf-4f2f-bc41-2421ee00c698' class='xr-section-summary'  title='Expand/collapse section'>Attributes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'></dl></div></li></ul></div></div>"
      ],
      "text/plain": [
       "<xarray.Dataset> Size: 407kB\n",
       "Dimensions:                      (sample: 100, component: 2, x: 150,\n",
       "                                  grid: 2500, log_x: 250)\n",
       "Coordinates:\n",
       "  * component                    (component) <U1 8B 'A' 'B'\n",
       "  * x                            (x) float64 1kB 0.001 0.001047 ... 0.9547 1.0\n",
       "  * log_x                        (log_x) float64 2kB -3.0 -2.988 ... 0.0\n",
       "Dimensions without coordinates: sample, grid\n",
       "Data variables:\n",
       "    composition                  (sample, component) float64 2kB 5.7 ... 5.104\n",
       "    ground_truth_labels          (sample) int64 800B 1 1 0 1 0 1 ... 1 1 1 0 1 1\n",
       "    measurement                  (sample, x) float64 120kB 1.915e+06 ... 1.885\n",
       "    composition_grid             (grid, component) float64 40kB 0.0 0.0 ... 25.0\n",
       "    normalized_composition       (sample, component) float64 2kB 0.57 ... 0.2042\n",
       "    normalized_composition_grid  (grid, component) float64 40kB 0.0 0.0 ... 1.0\n",
       "    derivative                   (sample, log_x) float64 200kB -3.82 ... -0.4063"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ds_result = my_first_pipeline.calculate(ds)\n",
    "ds_result"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now we can plot the results of the `Savgol` filter"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[Text(0.5, 1.0, 'Derivative of Smoothed Log(Data)')]"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x325 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig,axes = plt.subplots(1,2,figsize=(8,3.25))\n",
    "\n",
    "ds_result.measurement.plot.line(x='x',xscale='log',yscale='log',ax=axes[0],add_legend=False)\n",
    "ds_result.derivative.plot.line(x='log_x',ax=axes[1],add_legend=False);\n",
    "\n",
    "axes[0].set(title=\"Raw Data\")\n",
    "axes[1].set(title=\"Derivative of Smoothed Log(Data)\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The data on the right has more flat, constant regions than the data on the left making it easier for the simlarity and clustering analyses below to separate. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Step 2: Calculate Similarity between Measurement Data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now that we have preprocessed our data using the Savgol filter, we can calculate the similarity between different measurements. The `Similarity` component computes a similarity matrix between all pairs of samples based on their filtered derivative data. This similarity matrix will be used as input for clustering in the next step.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "PipelineOp                               input_variable ---> output_variable\n",
      "----------                               -----------------------------------\n",
      "0  ) <Standardize>                       composition ---> normalized_composition\n",
      "1  ) <Standardize>                       composition_grid ---> normalized_composition_grid\n",
      "2  ) <SavgolFilter>                      measurement ---> derivative\n",
      "3  ) <SimilarityMetric>                  derivative ---> similarity\n",
      "\n",
      "Input Variables\n",
      "---------------\n",
      "0) composition\n",
      "1) composition_grid\n",
      "2) measurement\n",
      "\n",
      "Output Variables\n",
      "----------------\n",
      "0) normalized_composition\n",
      "1) normalized_composition_grid\n",
      "2) similarity\n"
     ]
    }
   ],
   "source": [
    "with my_first_pipeline:\n",
    "    Similarity(\n",
    "        input_variable='derivative', \n",
    "        output_variable='similarity', \n",
    "        sample_dim='sample',\n",
    "        params={'metric': 'laplacian','gamma':1e-4}\n",
    "        )\n",
    "\n",
    "my_first_pipeline.print()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The Similarity component takes the following inputs:\n",
    "\n",
    "- `input_variable`: The variable to calculate similarity between ('derivative')\n",
    "- `output_variable`: The variable to store the similarity matrix ('similarity')\n",
    "- `sample_dim`: The dimension containing different samples ('sample')\n",
    "- `params`: Dictionary of parameters for similarity calculation\n",
    "  - `metric`: The similarity metric to use ('laplacian')\n",
    "  - `gamma`: The scale parameter for the similarity metric (1e-4)\n",
    "\n",
    "Let's execute the pipeline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "200f79473aba43d68d893247f7564ce2",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "  0%|          | 0/4 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div><svg style=\"position: absolute; width: 0; height: 0; overflow: hidden\">\n",
       "<defs>\n",
       "<symbol id=\"icon-database\" viewBox=\"0 0 32 32\">\n",
       "<path d=\"M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z\"></path>\n",
       "<path d=\"M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "<path d=\"M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "</symbol>\n",
       "<symbol id=\"icon-file-text2\" viewBox=\"0 0 32 32\">\n",
       "<path d=\"M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z\"></path>\n",
       "<path d=\"M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "</symbol>\n",
       "</defs>\n",
       "</svg>\n",
       "<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.\n",
       " *\n",
       " */\n",
       "\n",
       ":root {\n",
       "  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));\n",
       "  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));\n",
       "  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));\n",
       "  --xr-border-color: var(--jp-border-color2, #e0e0e0);\n",
       "  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);\n",
       "  --xr-background-color: var(--jp-layout-color0, white);\n",
       "  --xr-background-color-row-even: var(--jp-layout-color1, white);\n",
       "  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);\n",
       "}\n",
       "\n",
       "html[theme=\"dark\"],\n",
       "html[data-theme=\"dark\"],\n",
       "body[data-theme=\"dark\"],\n",
       "body.vscode-dark {\n",
       "  --xr-font-color0: rgba(255, 255, 255, 1);\n",
       "  --xr-font-color2: rgba(255, 255, 255, 0.54);\n",
       "  --xr-font-color3: rgba(255, 255, 255, 0.38);\n",
       "  --xr-border-color: #1f1f1f;\n",
       "  --xr-disabled-color: #515151;\n",
       "  --xr-background-color: #111111;\n",
       "  --xr-background-color-row-even: #111111;\n",
       "  --xr-background-color-row-odd: #313131;\n",
       "}\n",
       "\n",
       ".xr-wrap {\n",
       "  display: block !important;\n",
       "  min-width: 300px;\n",
       "  max-width: 700px;\n",
       "}\n",
       "\n",
       ".xr-text-repr-fallback {\n",
       "  /* fallback to plain text repr when CSS is not injected (untrusted notebook) */\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-header {\n",
       "  padding-top: 6px;\n",
       "  padding-bottom: 6px;\n",
       "  margin-bottom: 4px;\n",
       "  border-bottom: solid 1px var(--xr-border-color);\n",
       "}\n",
       "\n",
       ".xr-header > div,\n",
       ".xr-header > ul {\n",
       "  display: inline;\n",
       "  margin-top: 0;\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-obj-type,\n",
       ".xr-array-name {\n",
       "  margin-left: 2px;\n",
       "  margin-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-obj-type {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-sections {\n",
       "  padding-left: 0 !important;\n",
       "  display: grid;\n",
       "  grid-template-columns: 150px auto auto 1fr 0 20px 0 20px;\n",
       "}\n",
       "\n",
       ".xr-section-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-section-item input {\n",
       "  display: inline-block;\n",
       "  opacity: 0;\n",
       "  height: 0;\n",
       "}\n",
       "\n",
       ".xr-section-item input + label {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label {\n",
       "  cursor: pointer;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-item input:focus + label {\n",
       "  border: 2px solid var(--xr-font-color0);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label:hover {\n",
       "  color: var(--xr-font-color0);\n",
       "}\n",
       "\n",
       ".xr-section-summary {\n",
       "  grid-column: 1;\n",
       "  color: var(--xr-font-color2);\n",
       "  font-weight: 500;\n",
       "}\n",
       "\n",
       ".xr-section-summary > span {\n",
       "  display: inline-block;\n",
       "  padding-left: 0.5em;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in + label:before {\n",
       "  display: inline-block;\n",
       "  content: \"►\";\n",
       "  font-size: 11px;\n",
       "  width: 15px;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label:before {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label:before {\n",
       "  content: \"▼\";\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label > span {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-summary,\n",
       ".xr-section-inline-details {\n",
       "  padding-top: 4px;\n",
       "  padding-bottom: 4px;\n",
       "}\n",
       "\n",
       ".xr-section-inline-details {\n",
       "  grid-column: 2 / -1;\n",
       "}\n",
       "\n",
       ".xr-section-details {\n",
       "  display: none;\n",
       "  grid-column: 1 / -1;\n",
       "  margin-bottom: 5px;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked ~ .xr-section-details {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-array-wrap {\n",
       "  grid-column: 1 / -1;\n",
       "  display: grid;\n",
       "  grid-template-columns: 20px auto;\n",
       "}\n",
       "\n",
       ".xr-array-wrap > label {\n",
       "  grid-column: 1;\n",
       "  vertical-align: top;\n",
       "}\n",
       "\n",
       ".xr-preview {\n",
       "  color: var(--xr-font-color3);\n",
       "}\n",
       "\n",
       ".xr-array-preview,\n",
       ".xr-array-data {\n",
       "  padding: 0 5px !important;\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-array-data,\n",
       ".xr-array-in:checked ~ .xr-array-preview {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-array-in:checked ~ .xr-array-data,\n",
       ".xr-array-preview {\n",
       "  display: inline-block;\n",
       "}\n",
       "\n",
       ".xr-dim-list {\n",
       "  display: inline-block !important;\n",
       "  list-style: none;\n",
       "  padding: 0 !important;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list li {\n",
       "  display: inline-block;\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list:before {\n",
       "  content: \"(\";\n",
       "}\n",
       "\n",
       ".xr-dim-list:after {\n",
       "  content: \")\";\n",
       "}\n",
       "\n",
       ".xr-dim-list li:not(:last-child):after {\n",
       "  content: \",\";\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-has-index {\n",
       "  font-weight: bold;\n",
       "}\n",
       "\n",
       ".xr-var-list,\n",
       ".xr-var-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-var-item > div,\n",
       ".xr-var-item label,\n",
       ".xr-var-item > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-even);\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-var-item > .xr-var-name:hover span {\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-var-list > li:nth-child(odd) > div,\n",
       ".xr-var-list > li:nth-child(odd) > label,\n",
       ".xr-var-list > li:nth-child(odd) > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-odd);\n",
       "}\n",
       "\n",
       ".xr-var-name {\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-var-dims {\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-var-dtype {\n",
       "  grid-column: 3;\n",
       "  text-align: right;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-var-preview {\n",
       "  grid-column: 4;\n",
       "}\n",
       "\n",
       ".xr-index-preview {\n",
       "  grid-column: 2 / 5;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-var-name,\n",
       ".xr-var-dims,\n",
       ".xr-var-dtype,\n",
       ".xr-preview,\n",
       ".xr-attrs dt {\n",
       "  white-space: nowrap;\n",
       "  overflow: hidden;\n",
       "  text-overflow: ellipsis;\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-var-name:hover,\n",
       ".xr-var-dims:hover,\n",
       ".xr-var-dtype:hover,\n",
       ".xr-attrs dt:hover {\n",
       "  overflow: visible;\n",
       "  width: auto;\n",
       "  z-index: 1;\n",
       "}\n",
       "\n",
       ".xr-var-attrs,\n",
       ".xr-var-data,\n",
       ".xr-index-data {\n",
       "  display: none;\n",
       "  background-color: var(--xr-background-color) !important;\n",
       "  padding-bottom: 5px !important;\n",
       "}\n",
       "\n",
       ".xr-var-attrs-in:checked ~ .xr-var-attrs,\n",
       ".xr-var-data-in:checked ~ .xr-var-data,\n",
       ".xr-index-data-in:checked ~ .xr-index-data {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       ".xr-var-data > table {\n",
       "  float: right;\n",
       "}\n",
       "\n",
       ".xr-var-name span,\n",
       ".xr-var-data,\n",
       ".xr-index-name div,\n",
       ".xr-index-data,\n",
       ".xr-attrs {\n",
       "  padding-left: 25px !important;\n",
       "}\n",
       "\n",
       ".xr-attrs,\n",
       ".xr-var-attrs,\n",
       ".xr-var-data,\n",
       ".xr-index-data {\n",
       "  grid-column: 1 / -1;\n",
       "}\n",
       "\n",
       "dl.xr-attrs {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  display: grid;\n",
       "  grid-template-columns: 125px auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt,\n",
       ".xr-attrs dd {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  float: left;\n",
       "  padding-right: 10px;\n",
       "  width: auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt {\n",
       "  font-weight: normal;\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-attrs dt:hover span {\n",
       "  display: inline-block;\n",
       "  background: var(--xr-background-color);\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-attrs dd {\n",
       "  grid-column: 2;\n",
       "  white-space: pre-wrap;\n",
       "  word-break: break-all;\n",
       "}\n",
       "\n",
       ".xr-icon-database,\n",
       ".xr-icon-file-text2,\n",
       ".xr-no-icon {\n",
       "  display: inline-block;\n",
       "  vertical-align: middle;\n",
       "  width: 1em;\n",
       "  height: 1.5em !important;\n",
       "  stroke-width: 0;\n",
       "  stroke: currentColor;\n",
       "  fill: currentColor;\n",
       "}\n",
       "</style><pre class='xr-text-repr-fallback'>&lt;xarray.Dataset&gt; Size: 487kB\n",
       "Dimensions:                      (sample: 100, component: 2, x: 150,\n",
       "                                  grid: 2500, log_x: 250, sample_i: 100,\n",
       "                                  sample_j: 100)\n",
       "Coordinates:\n",
       "  * component                    (component) &lt;U1 8B &#x27;A&#x27; &#x27;B&#x27;\n",
       "  * x                            (x) float64 1kB 0.001 0.001047 ... 0.9547 1.0\n",
       "  * log_x                        (log_x) float64 2kB -3.0 -2.988 ... 0.0\n",
       "Dimensions without coordinates: sample, grid, sample_i, sample_j\n",
       "Data variables:\n",
       "    composition                  (sample, component) float64 2kB 5.7 ... 5.104\n",
       "    ground_truth_labels          (sample) int64 800B 1 1 0 1 0 1 ... 1 1 1 0 1 1\n",
       "    measurement                  (sample, x) float64 120kB 1.915e+06 ... 1.885\n",
       "    composition_grid             (grid, component) float64 40kB 0.0 0.0 ... 25.0\n",
       "    normalized_composition       (sample, component) float64 2kB 0.57 ... 0.2042\n",
       "    normalized_composition_grid  (grid, component) float64 40kB 0.0 0.0 ... 1.0\n",
       "    derivative                   (sample, log_x) float64 200kB -3.82 ... -0.4063\n",
       "    similarity                   (sample_i, sample_j) float64 80kB 1.0 ... 1.0</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.Dataset</div></div><ul class='xr-sections'><li class='xr-section-item'><input id='section-78130176-90e6-4d28-a90c-4c09ba01cea1' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-78130176-90e6-4d28-a90c-4c09ba01cea1' class='xr-section-summary'  title='Expand/collapse section'>Dimensions:</label><div class='xr-section-inline-details'><ul class='xr-dim-list'><li><span>sample</span>: 100</li><li><span class='xr-has-index'>component</span>: 2</li><li><span class='xr-has-index'>x</span>: 150</li><li><span>grid</span>: 2500</li><li><span class='xr-has-index'>log_x</span>: 250</li><li><span>sample_i</span>: 100</li><li><span>sample_j</span>: 100</li></ul></div><div class='xr-section-details'></div></li><li class='xr-section-item'><input id='section-11c4bdd4-a1e3-48f0-b5f3-7e3029d2b4cc' class='xr-section-summary-in' type='checkbox'  checked><label for='section-11c4bdd4-a1e3-48f0-b5f3-7e3029d2b4cc' class='xr-section-summary' >Coordinates: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>component</span></div><div class='xr-var-dims'>(component)</div><div class='xr-var-dtype'>&lt;U1</div><div class='xr-var-preview xr-preview'>&#x27;A&#x27; &#x27;B&#x27;</div><input id='attrs-cccfe538-eb15-423f-b1b2-6b0c5e44e475' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-cccfe538-eb15-423f-b1b2-6b0c5e44e475' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-2253c650-8420-4a4a-a773-7663b475a0ff' class='xr-var-data-in' type='checkbox'><label for='data-2253c650-8420-4a4a-a773-7663b475a0ff' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;A&#x27;, &#x27;B&#x27;], dtype=&#x27;&lt;U1&#x27;)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>x</span></div><div class='xr-var-dims'>(x)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>0.001 0.001047 ... 0.9547 1.0</div><input id='attrs-e37c13fe-f128-42b5-9300-7ab292a474ad' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-e37c13fe-f128-42b5-9300-7ab292a474ad' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-b6d66ca9-6b2d-4949-8ebb-cb7d49a1b820' class='xr-var-data-in' type='checkbox'><label for='data-b6d66ca9-6b2d-4949-8ebb-cb7d49a1b820' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([0.001   , 0.001047, 0.001097, 0.001149, 0.001204, 0.001261, 0.001321,\n",
       "       0.001383, 0.001449, 0.001518, 0.00159 , 0.001665, 0.001744, 0.001827,\n",
       "       0.001914, 0.002005, 0.0021  , 0.002199, 0.002304, 0.002413, 0.002527,\n",
       "       0.002647, 0.002773, 0.002905, 0.003042, 0.003187, 0.003338, 0.003496,\n",
       "       0.003662, 0.003836, 0.004018, 0.004209, 0.004409, 0.004618, 0.004837,\n",
       "       0.005066, 0.005307, 0.005559, 0.005822, 0.006099, 0.006388, 0.006691,\n",
       "       0.007009, 0.007341, 0.00769 , 0.008055, 0.008437, 0.008837, 0.009256,\n",
       "       0.009696, 0.010156, 0.010638, 0.011142, 0.011671, 0.012225, 0.012805,\n",
       "       0.013413, 0.014049, 0.014716, 0.015414, 0.016146, 0.016912, 0.017714,\n",
       "       0.018555, 0.019435, 0.020358, 0.021324, 0.022335, 0.023395, 0.024505,\n",
       "       0.025668, 0.026886, 0.028162, 0.029498, 0.030898, 0.032364, 0.0339  ,\n",
       "       0.035509, 0.037194, 0.038959, 0.040807, 0.042744, 0.044772, 0.046897,\n",
       "       0.049122, 0.051453, 0.053894, 0.056452, 0.059131, 0.061936, 0.064875,\n",
       "       0.067954, 0.071179, 0.074556, 0.078094, 0.0818  , 0.085681, 0.089747,\n",
       "       0.094006, 0.098467, 0.103139, 0.108033, 0.11316 , 0.118529, 0.124154,\n",
       "       0.130045, 0.136216, 0.14268 , 0.14945 , 0.156542, 0.16397 , 0.171751,\n",
       "       0.179901, 0.188438, 0.197379, 0.206746, 0.216556, 0.226832, 0.237596,\n",
       "       0.24887 , 0.26068 , 0.27305 , 0.286006, 0.299578, 0.313794, 0.328684,\n",
       "       0.344281, 0.360618, 0.37773 , 0.395654, 0.414429, 0.434094, 0.454693,\n",
       "       0.476269, 0.498869, 0.522542, 0.547337, 0.57331 , 0.600514, 0.62901 ,\n",
       "       0.658858, 0.690122, 0.72287 , 0.757172, 0.793102, 0.830736, 0.870156,\n",
       "       0.911447, 0.954697, 1.      ])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>log_x</span></div><div class='xr-var-dims'>(log_x)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>-3.0 -2.988 -2.976 ... -0.01205 0.0</div><input id='attrs-6621df25-dca5-4acc-ad70-a3f050e2c6fe' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-6621df25-dca5-4acc-ad70-a3f050e2c6fe' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-d41aea6f-c16f-4696-bedd-9c3b4e933d42' class='xr-var-data-in' type='checkbox'><label for='data-d41aea6f-c16f-4696-bedd-9c3b4e933d42' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([-3.      , -2.987952, -2.975904, ..., -0.024096, -0.012048,  0.      ])</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-b2c9a927-ed15-413a-8508-aa202b9503f4' class='xr-section-summary-in' type='checkbox'  checked><label for='section-b2c9a927-ed15-413a-8508-aa202b9503f4' class='xr-section-summary' >Data variables: <span>(8)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span>composition</span></div><div class='xr-var-dims'>(sample, component)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>5.7 1.36 8.938 ... 0.478 5.104</div><input id='attrs-87675446-5a0f-42e6-a692-66f16b52bd1b' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-87675446-5a0f-42e6-a692-66f16b52bd1b' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-6acf9605-7bff-4ebe-a9a8-70a1f75da9c9' class='xr-var-data-in' type='checkbox'><label for='data-6acf9605-7bff-4ebe-a9a8-70a1f75da9c9' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[ 5.69995762,  1.36017531],\n",
       "       [ 8.93782024, 16.17384162],\n",
       "       [ 3.77901101, 19.69531938],\n",
       "       [ 9.82535598,  7.16351158],\n",
       "       [ 1.60370118, 23.73217969],\n",
       "       [ 7.90994751, 14.71385158],\n",
       "       [ 2.17465804,  4.75450299],\n",
       "       [ 9.30875652,  2.86311327],\n",
       "       [ 2.78926787,  0.04909185],\n",
       "       [ 5.0368155 , 17.80655234],\n",
       "       [ 1.18529693, 16.40857492],\n",
       "       [ 1.65214034, 19.7760677 ],\n",
       "       [ 2.73176727,  0.18850408],\n",
       "       [ 9.22314222,  7.21778243],\n",
       "       [ 8.33560023,  5.22074632],\n",
       "       [ 8.10711809, 22.36120136],\n",
       "       [ 4.10263293,  6.17733076],\n",
       "       [ 7.94096049, 10.98300725],\n",
       "       [ 6.58238609, 15.27804755],\n",
       "       [ 3.78026574, 20.5150357 ],\n",
       "...\n",
       "       [ 5.0825235 ,  5.36441059],\n",
       "       [ 8.50770583,  2.52786027],\n",
       "       [ 4.46324027,  6.75171924],\n",
       "       [ 8.52523439,  6.71058719],\n",
       "       [ 9.23218578, 20.72269505],\n",
       "       [ 6.7555881 , 10.24855529],\n",
       "       [ 7.67539066,  1.6795503 ],\n",
       "       [ 5.8397554 , 10.64947346],\n",
       "       [ 0.22478436, 18.35236821],\n",
       "       [ 8.83077635, 10.65541542],\n",
       "       [ 8.98441453,  0.03322162],\n",
       "       [ 0.11755953, 11.77699299],\n",
       "       [ 7.90192605, 18.94690136],\n",
       "       [ 7.42679234, 23.72441631],\n",
       "       [ 8.7338296 , 12.27428886],\n",
       "       [ 2.2094947 ,  9.43848935],\n",
       "       [ 8.92898549, 10.34927984],\n",
       "       [ 0.79890552, 16.37383273],\n",
       "       [ 2.50284147,  0.0800645 ],\n",
       "       [ 0.47797863,  5.10399908]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>ground_truth_labels</span></div><div class='xr-var-dims'>(sample)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>1 1 0 1 0 1 1 1 ... 1 1 1 1 1 0 1 1</div><input id='attrs-67dac293-5534-4dba-8a53-e94bc218e92d' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-67dac293-5534-4dba-8a53-e94bc218e92d' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-4ce48d6a-7c38-4240-b60a-ee4559f45a74' class='xr-var-data-in' type='checkbox'><label for='data-4ce48d6a-7c38-4240-b60a-ee4559f45a74' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1,\n",
       "       1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0,\n",
       "       1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1,\n",
       "       1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
       "       0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>measurement</span></div><div class='xr-var-dims'>(sample, x)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>1.915e+06 1.479e+06 ... 1.766 1.885</div><input id='attrs-cbcfd37c-b420-4001-b2ac-44a74d07e196' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-cbcfd37c-b420-4001-b2ac-44a74d07e196' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-1c02b89b-5447-4e82-848c-19a06e34ca65' class='xr-var-data-in' type='checkbox'><label for='data-1c02b89b-5447-4e82-848c-19a06e34ca65' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[1.91473866e+06, 1.47945621e+06, 1.36028471e+06, ...,\n",
       "        1.94187833e+00, 1.95975369e+00, 2.07151476e+00],\n",
       "       [1.97716281e+06, 1.35648739e+06, 1.63877436e+06, ...,\n",
       "        1.90008720e+00, 1.76008223e+00, 2.09466497e+00],\n",
       "       [9.73830160e-01, 7.68956928e-01, 1.03891097e+00, ...,\n",
       "        9.25128766e-01, 6.82586751e-01, 1.00886636e+00],\n",
       "       ...,\n",
       "       [1.42016873e+00, 8.73396019e-01, 1.23904051e+00, ...,\n",
       "        1.14723090e+00, 1.27145347e+00, 9.40494323e-01],\n",
       "       [1.96972776e+06, 1.80114117e+06, 1.63801728e+06, ...,\n",
       "        2.53037078e+00, 1.96144836e+00, 2.37164783e+00],\n",
       "       [2.34596686e+06, 1.77244286e+06, 1.36862577e+06, ...,\n",
       "        2.05730051e+00, 1.76616880e+00, 1.88473841e+00]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>composition_grid</span></div><div class='xr-var-dims'>(grid, component)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>0.0 0.0 0.2041 ... 25.0 10.0 25.0</div><input id='attrs-f2777e15-3ee9-4b7f-bacb-cf86f54bf8e3' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-f2777e15-3ee9-4b7f-bacb-cf86f54bf8e3' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-b6ce0cb6-588e-4978-9fd1-3430b7949a52' class='xr-var-data-in' type='checkbox'><label for='data-b6ce0cb6-588e-4978-9fd1-3430b7949a52' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[ 0.        ,  0.        ],\n",
       "       [ 0.20408163,  0.        ],\n",
       "       [ 0.40816327,  0.        ],\n",
       "       ...,\n",
       "       [ 9.59183673, 25.        ],\n",
       "       [ 9.79591837, 25.        ],\n",
       "       [10.        , 25.        ]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>normalized_composition</span></div><div class='xr-var-dims'>(sample, component)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>0.57 0.05441 ... 0.0478 0.2042</div><input id='attrs-d33c7136-c296-4ec5-92fc-7a44fcd1b9e1' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-d33c7136-c296-4ec5-92fc-7a44fcd1b9e1' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-bfcab7b6-3706-436f-9310-c3b24e841002' class='xr-var-data-in' type='checkbox'><label for='data-bfcab7b6-3706-436f-9310-c3b24e841002' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd>Data normalized to have range 0 -&gt; 1</dd><dt><span>name :</span></dt><dd>Standardize</dd><dt><span>input_variable :</span></dt><dd>composition</dd><dt><span>output_variable :</span></dt><dd>normalized_composition</dd><dt><span>input_prefix :</span></dt><dd>None</dd><dt><span>output_prefix :</span></dt><dd>None</dd><dt><span>dim :</span></dt><dd>sample</dd><dt><span>component_dim :</span></dt><dd>component</dd><dt><span>min_val :</span></dt><dd>{&#x27;A&#x27;: 0.0, &#x27;B&#x27;: 0.0}</dd><dt><span>max_val :</span></dt><dd>{&#x27;A&#x27;: 10.0, &#x27;B&#x27;: 25.0}</dd><dt><span>scale_variable :</span></dt><dd>None</dd></dl></div><div class='xr-var-data'><pre>array([[0.56999576, 0.05440701],\n",
       "       [0.89378202, 0.64695366],\n",
       "       [0.3779011 , 0.78781278],\n",
       "       [0.9825356 , 0.28654046],\n",
       "       [0.16037012, 0.94928719],\n",
       "       [0.79099475, 0.58855406],\n",
       "       [0.2174658 , 0.19018012],\n",
       "       [0.93087565, 0.11452453],\n",
       "       [0.27892679, 0.00196367],\n",
       "       [0.50368155, 0.71226209],\n",
       "       [0.11852969, 0.656343  ],\n",
       "       [0.16521403, 0.79104271],\n",
       "       [0.27317673, 0.00754016],\n",
       "       [0.92231422, 0.2887113 ],\n",
       "       [0.83356002, 0.20882985],\n",
       "       [0.81071181, 0.89444805],\n",
       "       [0.41026329, 0.24709323],\n",
       "       [0.79409605, 0.43932029],\n",
       "       [0.65823861, 0.6111219 ],\n",
       "       [0.37802657, 0.82060143],\n",
       "...\n",
       "       [0.50825235, 0.21457642],\n",
       "       [0.85077058, 0.10111441],\n",
       "       [0.44632403, 0.27006877],\n",
       "       [0.85252344, 0.26842349],\n",
       "       [0.92321858, 0.8289078 ],\n",
       "       [0.67555881, 0.40994221],\n",
       "       [0.76753907, 0.06718201],\n",
       "       [0.58397554, 0.42597894],\n",
       "       [0.02247844, 0.73409473],\n",
       "       [0.88307764, 0.42621662],\n",
       "       [0.89844145, 0.00132886],\n",
       "       [0.01175595, 0.47107972],\n",
       "       [0.7901926 , 0.75787605],\n",
       "       [0.74267923, 0.94897665],\n",
       "       [0.87338296, 0.49097155],\n",
       "       [0.22094947, 0.37753957],\n",
       "       [0.89289855, 0.41397119],\n",
       "       [0.07989055, 0.65495331],\n",
       "       [0.25028415, 0.00320258],\n",
       "       [0.04779786, 0.20415996]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>normalized_composition_grid</span></div><div class='xr-var-dims'>(grid, component)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>0.0 0.0 0.02041 0.0 ... 1.0 1.0 1.0</div><input id='attrs-653d16a7-171a-4272-ae31-a47fd5d57d64' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-653d16a7-171a-4272-ae31-a47fd5d57d64' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-c16274d9-8fec-4ebf-a80a-65b4e86ea3ba' class='xr-var-data-in' type='checkbox'><label for='data-c16274d9-8fec-4ebf-a80a-65b4e86ea3ba' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd>Data normalized to have range 0 -&gt; 1</dd><dt><span>name :</span></dt><dd>Standardize</dd><dt><span>input_variable :</span></dt><dd>composition_grid</dd><dt><span>output_variable :</span></dt><dd>normalized_composition_grid</dd><dt><span>input_prefix :</span></dt><dd>None</dd><dt><span>output_prefix :</span></dt><dd>None</dd><dt><span>dim :</span></dt><dd>grid</dd><dt><span>component_dim :</span></dt><dd>component</dd><dt><span>min_val :</span></dt><dd>{&#x27;A&#x27;: 0.0, &#x27;B&#x27;: 0.0}</dd><dt><span>max_val :</span></dt><dd>{&#x27;A&#x27;: 10.0, &#x27;B&#x27;: 25.0}</dd><dt><span>scale_variable :</span></dt><dd>None</dd></dl></div><div class='xr-var-data'><pre>array([[0.        , 0.        ],\n",
       "       [0.02040816, 0.        ],\n",
       "       [0.04081633, 0.        ],\n",
       "       ...,\n",
       "       [0.95918367, 1.        ],\n",
       "       [0.97959184, 1.        ],\n",
       "       [1.        , 1.        ]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>derivative</span></div><div class='xr-var-dims'>(sample, log_x)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>-3.82 -3.825 ... -0.3897 -0.4063</div><input id='attrs-358055af-872b-415d-8c7e-d2271d8f0f72' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-358055af-872b-415d-8c7e-d2271d8f0f72' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-dcee0c8f-fc25-4cae-a712-3a49ff227c82' class='xr-var-data-in' type='checkbox'><label for='data-dcee0c8f-fc25-4cae-a712-3a49ff227c82' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd>Savitsky-Golay filtered data</dd><dt><span>name :</span></dt><dd>SavgolFilter</dd><dt><span>input_variable :</span></dt><dd>measurement</dd><dt><span>output_variable :</span></dt><dd>derivative</dd><dt><span>input_prefix :</span></dt><dd>None</dd><dt><span>output_prefix :</span></dt><dd>None</dd><dt><span>dim :</span></dt><dd>x</dd><dt><span>npts :</span></dt><dd>250</dd><dt><span>xlo :</span></dt><dd>None</dd><dt><span>xhi :</span></dt><dd>None</dd><dt><span>xlo_isel :</span></dt><dd>None</dd><dt><span>xhi_isel :</span></dt><dd>None</dd><dt><span>pedestal :</span></dt><dd>None</dd><dt><span>derivative :</span></dt><dd>1</dd><dt><span>apply_log_scale :</span></dt><dd>True</dd><dt><span>polyorder :</span></dt><dd>2</dd><dt><span>window_length :</span></dt><dd>50</dd></dl></div><div class='xr-var-data'><pre>array([[-3.82019992, -3.82462256, -3.82904519, ..., -0.35145453,\n",
       "        -0.36993018, -0.38840584],\n",
       "       [-4.2626048 , -4.24893257, -4.23526033, ...,  0.01349491,\n",
       "         0.01809932,  0.02270373],\n",
       "       [ 0.50261177,  0.4760206 ,  0.44942943, ...,  0.12473091,\n",
       "         0.13576784,  0.14680477],\n",
       "       ...,\n",
       "       [-0.24159282, -0.24193045, -0.24226809, ...,  0.52407629,\n",
       "         0.54400047,  0.56392465],\n",
       "       [-3.67922195, -3.69182355, -3.70442514, ...,  0.30180559,\n",
       "         0.31353524,  0.32526489],\n",
       "       [-3.96638732, -3.97110223, -3.97581713, ..., -0.37305086,\n",
       "        -0.389679  , -0.40630713]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>similarity</span></div><div class='xr-var-dims'>(sample_i, sample_j)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>1.0 0.9974 0.9503 ... 0.9974 1.0</div><input id='attrs-4bb7d589-8d9b-4927-b972-a4e2b3899aaf' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-4bb7d589-8d9b-4927-b972-a4e2b3899aaf' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-3fabacbd-9a46-4bbc-8fbf-a8abc6b5b997' class='xr-var-data-in' type='checkbox'><label for='data-3fabacbd-9a46-4bbc-8fbf-a8abc6b5b997' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>metric :</span></dt><dd>laplacian</dd><dt><span>gamma :</span></dt><dd>0.0001</dd><dt><span>name :</span></dt><dd>SimilarityMetric</dd><dt><span>input_variable :</span></dt><dd>derivative</dd><dt><span>output_variable :</span></dt><dd>similarity</dd><dt><span>input_prefix :</span></dt><dd>None</dd><dt><span>output_prefix :</span></dt><dd>None</dd><dt><span>sample_dim :</span></dt><dd>sample</dd><dt><span>constrain_same :</span></dt><dd>[]</dd><dt><span>constrain_different :</span></dt><dd>[]</dd></dl></div><div class='xr-var-data'><pre>array([[1.        , 0.99741833, 0.950302  , ..., 0.95081738, 0.99761626,\n",
       "        0.99830741],\n",
       "       [0.99741833, 1.        , 0.95025158, ..., 0.95041344, 0.99752619,\n",
       "        0.99755674],\n",
       "       [0.950302  , 0.95025158, 1.        , ..., 0.99504435, 0.9505596 ,\n",
       "        0.95006123],\n",
       "       ...,\n",
       "       [0.95081738, 0.95041344, 0.99504435, ..., 1.        , 0.95158475,\n",
       "        0.95047502],\n",
       "       [0.99761626, 0.99752619, 0.9505596 , ..., 0.95158475, 1.        ,\n",
       "        0.99740548],\n",
       "       [0.99830741, 0.99755674, 0.95006123, ..., 0.95047502, 0.99740548,\n",
       "        1.        ]])</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-e6c46ffb-915a-4d4e-9d5c-b66581afd114' class='xr-section-summary-in' type='checkbox'  ><label for='section-e6c46ffb-915a-4d4e-9d5c-b66581afd114' class='xr-section-summary' >Indexes: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-index-name'><div>component</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-543c6dea-75be-4b67-9d48-1160163c63d8' class='xr-index-data-in' type='checkbox'/><label for='index-543c6dea-75be-4b67-9d48-1160163c63d8' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([&#x27;A&#x27;, &#x27;B&#x27;], dtype=&#x27;object&#x27;, name=&#x27;component&#x27;))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>x</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-906a232d-7c12-42b8-b44c-fe6361aa707a' class='xr-index-data-in' type='checkbox'/><label for='index-906a232d-7c12-42b8-b44c-fe6361aa707a' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([                0.001, 0.0010474522360006332, 0.0010971561867027272,\n",
       "       0.0011492187010036998, 0.0012037516980200685, 0.0012608724076806808,\n",
       "        0.001320703622736631, 0.0013833739627296209,  0.001449018150486198,\n",
       "       0.0015177773017322714,\n",
       "       ...\n",
       "          0.6588581861506815,    0.6901224802908528,    0.7228703350949566,\n",
       "            0.75717214883374,    0.7931016603333051,    0.8307361074919352,\n",
       "          0.8701563933188907,    0.9114472598521185,    0.9546974703287516,\n",
       "                         1.0],\n",
       "      dtype=&#x27;float64&#x27;, name=&#x27;x&#x27;, length=150))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>log_x</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-ec2b9970-34fc-4e62-a5e3-65906076baea' class='xr-index-data-in' type='checkbox'/><label for='index-ec2b9970-34fc-4e62-a5e3-65906076baea' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([                 -3.0,   -2.9879518072289155,   -2.9759036144578315,\n",
       "          -2.963855421686747,   -2.9518072289156625,   -2.9397590361445785,\n",
       "          -2.927710843373494,   -2.9156626506024095,   -2.9036144578313254,\n",
       "          -2.891566265060241,\n",
       "       ...\n",
       "        -0.10843373493975905,  -0.09638554216867457,  -0.08433734939759008,\n",
       "        -0.07228915662650603,  -0.06024096385542155,  -0.04819277108433706,\n",
       "        -0.03614457831325302,  -0.02409638554216853, -0.012048192771084043,\n",
       "                         0.0],\n",
       "      dtype=&#x27;float64&#x27;, name=&#x27;log_x&#x27;, length=250))</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-3e64b6bc-1a2f-4038-867d-de898388fdc8' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-3e64b6bc-1a2f-4038-867d-de898388fdc8' class='xr-section-summary'  title='Expand/collapse section'>Attributes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'></dl></div></li></ul></div></div>"
      ],
      "text/plain": [
       "<xarray.Dataset> Size: 487kB\n",
       "Dimensions:                      (sample: 100, component: 2, x: 150,\n",
       "                                  grid: 2500, log_x: 250, sample_i: 100,\n",
       "                                  sample_j: 100)\n",
       "Coordinates:\n",
       "  * component                    (component) <U1 8B 'A' 'B'\n",
       "  * x                            (x) float64 1kB 0.001 0.001047 ... 0.9547 1.0\n",
       "  * log_x                        (log_x) float64 2kB -3.0 -2.988 ... 0.0\n",
       "Dimensions without coordinates: sample, grid, sample_i, sample_j\n",
       "Data variables:\n",
       "    composition                  (sample, component) float64 2kB 5.7 ... 5.104\n",
       "    ground_truth_labels          (sample) int64 800B 1 1 0 1 0 1 ... 1 1 1 0 1 1\n",
       "    measurement                  (sample, x) float64 120kB 1.915e+06 ... 1.885\n",
       "    composition_grid             (grid, component) float64 40kB 0.0 0.0 ... 25.0\n",
       "    normalized_composition       (sample, component) float64 2kB 0.57 ... 0.2042\n",
       "    normalized_composition_grid  (grid, component) float64 40kB 0.0 0.0 ... 1.0\n",
       "    derivative                   (sample, log_x) float64 200kB -3.82 ... -0.4063\n",
       "    similarity                   (sample_i, sample_j) float64 80kB 1.0 ... 1.0"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ds_result = my_first_pipeline.calculate(ds)\n",
    "ds_result"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can visualize the similarity matrix. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.QuadMesh at 0x312e02690>"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "ds_result.similarity.plot()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Each pixel indexed by (i,j) in this image corresponds to the similarity between measurement i and j. The bright pixels indicate high similarity and the darker pixels reduced similarity. A check on this calculation is that the diagonal should have a perfect similarity = 1.0 because each data is perfectly self similar to itself, i.e. `S(i,i) = S(j,j) = 1.0`"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Step 3: Cluster Measurement Data based on Similarity"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now that we can use the similarity matrix to cluster the data into groups. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "PipelineOp                               input_variable ---> output_variable\n",
      "----------                               -----------------------------------\n",
      "0  ) <Standardize>                       composition ---> normalized_composition\n",
      "1  ) <Standardize>                       composition_grid ---> normalized_composition_grid\n",
      "2  ) <SavgolFilter>                      measurement ---> derivative\n",
      "3  ) <SimilarityMetric>                  derivative ---> similarity\n",
      "4  ) <SpectralClustering>                similarity ---> labels\n",
      "\n",
      "Input Variables\n",
      "---------------\n",
      "0) composition\n",
      "1) composition_grid\n",
      "2) measurement\n",
      "\n",
      "Output Variables\n",
      "----------------\n",
      "0) normalized_composition\n",
      "1) normalized_composition_grid\n",
      "2) labels\n"
     ]
    }
   ],
   "source": [
    "with my_first_pipeline:\n",
    "    SpectralClustering(\n",
    "        input_variable='similarity',\n",
    "        output_variable='labels',\n",
    "        dim='sample',\n",
    "        params={'n_phases': 2}\n",
    "        )\n",
    "\n",
    "\n",
    "my_first_pipeline.print()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "The SpectralClustering pipeline operation takes:\n",
    "\n",
    " - `input_variable`: The similarity matrix to use for clustering ('similarity')\n",
    " - `output_variable`: The variable to store the cluster labels ('labels') \n",
    " - `dim`: The dimension containing different samples ('sample')\n",
    " - `params`: Dictionary of parameters for clustering\n",
    "   - `n_phases`: The number of clusters/phases to find (2)\n",
    "\n",
    "Let's run the pipeline with this new operation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "367c56818d734cee84398ef695190ab9",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "  0%|          | 0/5 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div><svg style=\"position: absolute; width: 0; height: 0; overflow: hidden\">\n",
       "<defs>\n",
       "<symbol id=\"icon-database\" viewBox=\"0 0 32 32\">\n",
       "<path d=\"M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z\"></path>\n",
       "<path d=\"M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "<path d=\"M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "</symbol>\n",
       "<symbol id=\"icon-file-text2\" viewBox=\"0 0 32 32\">\n",
       "<path d=\"M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z\"></path>\n",
       "<path d=\"M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "</symbol>\n",
       "</defs>\n",
       "</svg>\n",
       "<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.\n",
       " *\n",
       " */\n",
       "\n",
       ":root {\n",
       "  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));\n",
       "  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));\n",
       "  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));\n",
       "  --xr-border-color: var(--jp-border-color2, #e0e0e0);\n",
       "  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);\n",
       "  --xr-background-color: var(--jp-layout-color0, white);\n",
       "  --xr-background-color-row-even: var(--jp-layout-color1, white);\n",
       "  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);\n",
       "}\n",
       "\n",
       "html[theme=\"dark\"],\n",
       "html[data-theme=\"dark\"],\n",
       "body[data-theme=\"dark\"],\n",
       "body.vscode-dark {\n",
       "  --xr-font-color0: rgba(255, 255, 255, 1);\n",
       "  --xr-font-color2: rgba(255, 255, 255, 0.54);\n",
       "  --xr-font-color3: rgba(255, 255, 255, 0.38);\n",
       "  --xr-border-color: #1f1f1f;\n",
       "  --xr-disabled-color: #515151;\n",
       "  --xr-background-color: #111111;\n",
       "  --xr-background-color-row-even: #111111;\n",
       "  --xr-background-color-row-odd: #313131;\n",
       "}\n",
       "\n",
       ".xr-wrap {\n",
       "  display: block !important;\n",
       "  min-width: 300px;\n",
       "  max-width: 700px;\n",
       "}\n",
       "\n",
       ".xr-text-repr-fallback {\n",
       "  /* fallback to plain text repr when CSS is not injected (untrusted notebook) */\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-header {\n",
       "  padding-top: 6px;\n",
       "  padding-bottom: 6px;\n",
       "  margin-bottom: 4px;\n",
       "  border-bottom: solid 1px var(--xr-border-color);\n",
       "}\n",
       "\n",
       ".xr-header > div,\n",
       ".xr-header > ul {\n",
       "  display: inline;\n",
       "  margin-top: 0;\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-obj-type,\n",
       ".xr-array-name {\n",
       "  margin-left: 2px;\n",
       "  margin-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-obj-type {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-sections {\n",
       "  padding-left: 0 !important;\n",
       "  display: grid;\n",
       "  grid-template-columns: 150px auto auto 1fr 0 20px 0 20px;\n",
       "}\n",
       "\n",
       ".xr-section-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-section-item input {\n",
       "  display: inline-block;\n",
       "  opacity: 0;\n",
       "  height: 0;\n",
       "}\n",
       "\n",
       ".xr-section-item input + label {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label {\n",
       "  cursor: pointer;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-item input:focus + label {\n",
       "  border: 2px solid var(--xr-font-color0);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label:hover {\n",
       "  color: var(--xr-font-color0);\n",
       "}\n",
       "\n",
       ".xr-section-summary {\n",
       "  grid-column: 1;\n",
       "  color: var(--xr-font-color2);\n",
       "  font-weight: 500;\n",
       "}\n",
       "\n",
       ".xr-section-summary > span {\n",
       "  display: inline-block;\n",
       "  padding-left: 0.5em;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in + label:before {\n",
       "  display: inline-block;\n",
       "  content: \"►\";\n",
       "  font-size: 11px;\n",
       "  width: 15px;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label:before {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label:before {\n",
       "  content: \"▼\";\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label > span {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-summary,\n",
       ".xr-section-inline-details {\n",
       "  padding-top: 4px;\n",
       "  padding-bottom: 4px;\n",
       "}\n",
       "\n",
       ".xr-section-inline-details {\n",
       "  grid-column: 2 / -1;\n",
       "}\n",
       "\n",
       ".xr-section-details {\n",
       "  display: none;\n",
       "  grid-column: 1 / -1;\n",
       "  margin-bottom: 5px;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked ~ .xr-section-details {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-array-wrap {\n",
       "  grid-column: 1 / -1;\n",
       "  display: grid;\n",
       "  grid-template-columns: 20px auto;\n",
       "}\n",
       "\n",
       ".xr-array-wrap > label {\n",
       "  grid-column: 1;\n",
       "  vertical-align: top;\n",
       "}\n",
       "\n",
       ".xr-preview {\n",
       "  color: var(--xr-font-color3);\n",
       "}\n",
       "\n",
       ".xr-array-preview,\n",
       ".xr-array-data {\n",
       "  padding: 0 5px !important;\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-array-data,\n",
       ".xr-array-in:checked ~ .xr-array-preview {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-array-in:checked ~ .xr-array-data,\n",
       ".xr-array-preview {\n",
       "  display: inline-block;\n",
       "}\n",
       "\n",
       ".xr-dim-list {\n",
       "  display: inline-block !important;\n",
       "  list-style: none;\n",
       "  padding: 0 !important;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list li {\n",
       "  display: inline-block;\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list:before {\n",
       "  content: \"(\";\n",
       "}\n",
       "\n",
       ".xr-dim-list:after {\n",
       "  content: \")\";\n",
       "}\n",
       "\n",
       ".xr-dim-list li:not(:last-child):after {\n",
       "  content: \",\";\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-has-index {\n",
       "  font-weight: bold;\n",
       "}\n",
       "\n",
       ".xr-var-list,\n",
       ".xr-var-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-var-item > div,\n",
       ".xr-var-item label,\n",
       ".xr-var-item > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-even);\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-var-item > .xr-var-name:hover span {\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-var-list > li:nth-child(odd) > div,\n",
       ".xr-var-list > li:nth-child(odd) > label,\n",
       ".xr-var-list > li:nth-child(odd) > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-odd);\n",
       "}\n",
       "\n",
       ".xr-var-name {\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-var-dims {\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-var-dtype {\n",
       "  grid-column: 3;\n",
       "  text-align: right;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-var-preview {\n",
       "  grid-column: 4;\n",
       "}\n",
       "\n",
       ".xr-index-preview {\n",
       "  grid-column: 2 / 5;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-var-name,\n",
       ".xr-var-dims,\n",
       ".xr-var-dtype,\n",
       ".xr-preview,\n",
       ".xr-attrs dt {\n",
       "  white-space: nowrap;\n",
       "  overflow: hidden;\n",
       "  text-overflow: ellipsis;\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-var-name:hover,\n",
       ".xr-var-dims:hover,\n",
       ".xr-var-dtype:hover,\n",
       ".xr-attrs dt:hover {\n",
       "  overflow: visible;\n",
       "  width: auto;\n",
       "  z-index: 1;\n",
       "}\n",
       "\n",
       ".xr-var-attrs,\n",
       ".xr-var-data,\n",
       ".xr-index-data {\n",
       "  display: none;\n",
       "  background-color: var(--xr-background-color) !important;\n",
       "  padding-bottom: 5px !important;\n",
       "}\n",
       "\n",
       ".xr-var-attrs-in:checked ~ .xr-var-attrs,\n",
       ".xr-var-data-in:checked ~ .xr-var-data,\n",
       ".xr-index-data-in:checked ~ .xr-index-data {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       ".xr-var-data > table {\n",
       "  float: right;\n",
       "}\n",
       "\n",
       ".xr-var-name span,\n",
       ".xr-var-data,\n",
       ".xr-index-name div,\n",
       ".xr-index-data,\n",
       ".xr-attrs {\n",
       "  padding-left: 25px !important;\n",
       "}\n",
       "\n",
       ".xr-attrs,\n",
       ".xr-var-attrs,\n",
       ".xr-var-data,\n",
       ".xr-index-data {\n",
       "  grid-column: 1 / -1;\n",
       "}\n",
       "\n",
       "dl.xr-attrs {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  display: grid;\n",
       "  grid-template-columns: 125px auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt,\n",
       ".xr-attrs dd {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  float: left;\n",
       "  padding-right: 10px;\n",
       "  width: auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt {\n",
       "  font-weight: normal;\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-attrs dt:hover span {\n",
       "  display: inline-block;\n",
       "  background: var(--xr-background-color);\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-attrs dd {\n",
       "  grid-column: 2;\n",
       "  white-space: pre-wrap;\n",
       "  word-break: break-all;\n",
       "}\n",
       "\n",
       ".xr-icon-database,\n",
       ".xr-icon-file-text2,\n",
       ".xr-no-icon {\n",
       "  display: inline-block;\n",
       "  vertical-align: middle;\n",
       "  width: 1em;\n",
       "  height: 1.5em !important;\n",
       "  stroke-width: 0;\n",
       "  stroke: currentColor;\n",
       "  fill: currentColor;\n",
       "}\n",
       "</style><pre class='xr-text-repr-fallback'>&lt;xarray.Dataset&gt; Size: 488kB\n",
       "Dimensions:                      (sample: 100, component: 2, x: 150,\n",
       "                                  grid: 2500, log_x: 250, sample_i: 100,\n",
       "                                  sample_j: 100)\n",
       "Coordinates:\n",
       "  * component                    (component) &lt;U1 8B &#x27;A&#x27; &#x27;B&#x27;\n",
       "  * x                            (x) float64 1kB 0.001 0.001047 ... 0.9547 1.0\n",
       "  * log_x                        (log_x) float64 2kB -3.0 -2.988 ... 0.0\n",
       "Dimensions without coordinates: sample, grid, sample_i, sample_j\n",
       "Data variables:\n",
       "    composition                  (sample, component) float64 2kB 5.7 ... 5.104\n",
       "    ground_truth_labels          (sample) int64 800B 1 1 0 1 0 1 ... 1 1 1 0 1 1\n",
       "    measurement                  (sample, x) float64 120kB 1.915e+06 ... 1.885\n",
       "    composition_grid             (grid, component) float64 40kB 0.0 0.0 ... 25.0\n",
       "    normalized_composition       (sample, component) float64 2kB 0.57 ... 0.2042\n",
       "    normalized_composition_grid  (grid, component) float64 40kB 0.0 0.0 ... 1.0\n",
       "    derivative                   (sample, log_x) float64 200kB -3.82 ... -0.4063\n",
       "    similarity                   (sample_i, sample_j) float64 80kB 1.0 ... 1.0\n",
       "    labels                       (sample) int64 800B 1 1 0 1 0 1 ... 1 1 1 0 1 1</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.Dataset</div></div><ul class='xr-sections'><li class='xr-section-item'><input id='section-3f1a767a-2435-46d4-873d-23174a1b2b8f' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-3f1a767a-2435-46d4-873d-23174a1b2b8f' class='xr-section-summary'  title='Expand/collapse section'>Dimensions:</label><div class='xr-section-inline-details'><ul class='xr-dim-list'><li><span>sample</span>: 100</li><li><span class='xr-has-index'>component</span>: 2</li><li><span class='xr-has-index'>x</span>: 150</li><li><span>grid</span>: 2500</li><li><span class='xr-has-index'>log_x</span>: 250</li><li><span>sample_i</span>: 100</li><li><span>sample_j</span>: 100</li></ul></div><div class='xr-section-details'></div></li><li class='xr-section-item'><input id='section-78a5bbf7-b45d-421c-a251-433f77c6fcd7' class='xr-section-summary-in' type='checkbox'  checked><label for='section-78a5bbf7-b45d-421c-a251-433f77c6fcd7' class='xr-section-summary' >Coordinates: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>component</span></div><div class='xr-var-dims'>(component)</div><div class='xr-var-dtype'>&lt;U1</div><div class='xr-var-preview xr-preview'>&#x27;A&#x27; &#x27;B&#x27;</div><input id='attrs-bb51e9d1-5a02-4a9a-a2fb-9bfce08a3a64' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-bb51e9d1-5a02-4a9a-a2fb-9bfce08a3a64' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-f6152815-3adb-4075-8cca-b0b85dcf02eb' class='xr-var-data-in' type='checkbox'><label for='data-f6152815-3adb-4075-8cca-b0b85dcf02eb' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;A&#x27;, &#x27;B&#x27;], dtype=&#x27;&lt;U1&#x27;)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>x</span></div><div class='xr-var-dims'>(x)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>0.001 0.001047 ... 0.9547 1.0</div><input id='attrs-a4905185-5ef6-4fe3-aed9-8dd122dd9361' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-a4905185-5ef6-4fe3-aed9-8dd122dd9361' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-cffeae10-71fe-4361-96f8-4c51a04da457' class='xr-var-data-in' type='checkbox'><label for='data-cffeae10-71fe-4361-96f8-4c51a04da457' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([0.001   , 0.001047, 0.001097, 0.001149, 0.001204, 0.001261, 0.001321,\n",
       "       0.001383, 0.001449, 0.001518, 0.00159 , 0.001665, 0.001744, 0.001827,\n",
       "       0.001914, 0.002005, 0.0021  , 0.002199, 0.002304, 0.002413, 0.002527,\n",
       "       0.002647, 0.002773, 0.002905, 0.003042, 0.003187, 0.003338, 0.003496,\n",
       "       0.003662, 0.003836, 0.004018, 0.004209, 0.004409, 0.004618, 0.004837,\n",
       "       0.005066, 0.005307, 0.005559, 0.005822, 0.006099, 0.006388, 0.006691,\n",
       "       0.007009, 0.007341, 0.00769 , 0.008055, 0.008437, 0.008837, 0.009256,\n",
       "       0.009696, 0.010156, 0.010638, 0.011142, 0.011671, 0.012225, 0.012805,\n",
       "       0.013413, 0.014049, 0.014716, 0.015414, 0.016146, 0.016912, 0.017714,\n",
       "       0.018555, 0.019435, 0.020358, 0.021324, 0.022335, 0.023395, 0.024505,\n",
       "       0.025668, 0.026886, 0.028162, 0.029498, 0.030898, 0.032364, 0.0339  ,\n",
       "       0.035509, 0.037194, 0.038959, 0.040807, 0.042744, 0.044772, 0.046897,\n",
       "       0.049122, 0.051453, 0.053894, 0.056452, 0.059131, 0.061936, 0.064875,\n",
       "       0.067954, 0.071179, 0.074556, 0.078094, 0.0818  , 0.085681, 0.089747,\n",
       "       0.094006, 0.098467, 0.103139, 0.108033, 0.11316 , 0.118529, 0.124154,\n",
       "       0.130045, 0.136216, 0.14268 , 0.14945 , 0.156542, 0.16397 , 0.171751,\n",
       "       0.179901, 0.188438, 0.197379, 0.206746, 0.216556, 0.226832, 0.237596,\n",
       "       0.24887 , 0.26068 , 0.27305 , 0.286006, 0.299578, 0.313794, 0.328684,\n",
       "       0.344281, 0.360618, 0.37773 , 0.395654, 0.414429, 0.434094, 0.454693,\n",
       "       0.476269, 0.498869, 0.522542, 0.547337, 0.57331 , 0.600514, 0.62901 ,\n",
       "       0.658858, 0.690122, 0.72287 , 0.757172, 0.793102, 0.830736, 0.870156,\n",
       "       0.911447, 0.954697, 1.      ])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>log_x</span></div><div class='xr-var-dims'>(log_x)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>-3.0 -2.988 -2.976 ... -0.01205 0.0</div><input id='attrs-e29664b0-5ffe-43b4-959e-7295f4c4ab5f' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-e29664b0-5ffe-43b4-959e-7295f4c4ab5f' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-5c46e57a-f69e-4e2d-b500-fa623d50e5cf' class='xr-var-data-in' type='checkbox'><label for='data-5c46e57a-f69e-4e2d-b500-fa623d50e5cf' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([-3.      , -2.987952, -2.975904, ..., -0.024096, -0.012048,  0.      ])</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-cd88feb2-6f94-4fcb-9146-cc38d1f21006' class='xr-section-summary-in' type='checkbox'  checked><label for='section-cd88feb2-6f94-4fcb-9146-cc38d1f21006' class='xr-section-summary' >Data variables: <span>(9)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span>composition</span></div><div class='xr-var-dims'>(sample, component)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>5.7 1.36 8.938 ... 0.478 5.104</div><input id='attrs-c3767014-de55-4f64-9df5-0298cbc8a815' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-c3767014-de55-4f64-9df5-0298cbc8a815' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-b0fac27d-473e-419a-b6f7-5fd625aa5621' class='xr-var-data-in' type='checkbox'><label for='data-b0fac27d-473e-419a-b6f7-5fd625aa5621' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[ 5.69995762,  1.36017531],\n",
       "       [ 8.93782024, 16.17384162],\n",
       "       [ 3.77901101, 19.69531938],\n",
       "       [ 9.82535598,  7.16351158],\n",
       "       [ 1.60370118, 23.73217969],\n",
       "       [ 7.90994751, 14.71385158],\n",
       "       [ 2.17465804,  4.75450299],\n",
       "       [ 9.30875652,  2.86311327],\n",
       "       [ 2.78926787,  0.04909185],\n",
       "       [ 5.0368155 , 17.80655234],\n",
       "       [ 1.18529693, 16.40857492],\n",
       "       [ 1.65214034, 19.7760677 ],\n",
       "       [ 2.73176727,  0.18850408],\n",
       "       [ 9.22314222,  7.21778243],\n",
       "       [ 8.33560023,  5.22074632],\n",
       "       [ 8.10711809, 22.36120136],\n",
       "       [ 4.10263293,  6.17733076],\n",
       "       [ 7.94096049, 10.98300725],\n",
       "       [ 6.58238609, 15.27804755],\n",
       "       [ 3.78026574, 20.5150357 ],\n",
       "...\n",
       "       [ 5.0825235 ,  5.36441059],\n",
       "       [ 8.50770583,  2.52786027],\n",
       "       [ 4.46324027,  6.75171924],\n",
       "       [ 8.52523439,  6.71058719],\n",
       "       [ 9.23218578, 20.72269505],\n",
       "       [ 6.7555881 , 10.24855529],\n",
       "       [ 7.67539066,  1.6795503 ],\n",
       "       [ 5.8397554 , 10.64947346],\n",
       "       [ 0.22478436, 18.35236821],\n",
       "       [ 8.83077635, 10.65541542],\n",
       "       [ 8.98441453,  0.03322162],\n",
       "       [ 0.11755953, 11.77699299],\n",
       "       [ 7.90192605, 18.94690136],\n",
       "       [ 7.42679234, 23.72441631],\n",
       "       [ 8.7338296 , 12.27428886],\n",
       "       [ 2.2094947 ,  9.43848935],\n",
       "       [ 8.92898549, 10.34927984],\n",
       "       [ 0.79890552, 16.37383273],\n",
       "       [ 2.50284147,  0.0800645 ],\n",
       "       [ 0.47797863,  5.10399908]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>ground_truth_labels</span></div><div class='xr-var-dims'>(sample)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>1 1 0 1 0 1 1 1 ... 1 1 1 1 1 0 1 1</div><input id='attrs-8e3aae26-6fde-42ca-9b61-db54ceca09c2' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-8e3aae26-6fde-42ca-9b61-db54ceca09c2' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-1b8f760d-cd15-41b6-ac16-66e54a54867d' class='xr-var-data-in' type='checkbox'><label for='data-1b8f760d-cd15-41b6-ac16-66e54a54867d' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1,\n",
       "       1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0,\n",
       "       1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1,\n",
       "       1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
       "       0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>measurement</span></div><div class='xr-var-dims'>(sample, x)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>1.915e+06 1.479e+06 ... 1.766 1.885</div><input id='attrs-079839fa-38e2-49b0-8d15-abd15b8365e9' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-079839fa-38e2-49b0-8d15-abd15b8365e9' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-fa1b3836-e4f0-42e6-8199-fb3736b27176' class='xr-var-data-in' type='checkbox'><label for='data-fa1b3836-e4f0-42e6-8199-fb3736b27176' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[1.91473866e+06, 1.47945621e+06, 1.36028471e+06, ...,\n",
       "        1.94187833e+00, 1.95975369e+00, 2.07151476e+00],\n",
       "       [1.97716281e+06, 1.35648739e+06, 1.63877436e+06, ...,\n",
       "        1.90008720e+00, 1.76008223e+00, 2.09466497e+00],\n",
       "       [9.73830160e-01, 7.68956928e-01, 1.03891097e+00, ...,\n",
       "        9.25128766e-01, 6.82586751e-01, 1.00886636e+00],\n",
       "       ...,\n",
       "       [1.42016873e+00, 8.73396019e-01, 1.23904051e+00, ...,\n",
       "        1.14723090e+00, 1.27145347e+00, 9.40494323e-01],\n",
       "       [1.96972776e+06, 1.80114117e+06, 1.63801728e+06, ...,\n",
       "        2.53037078e+00, 1.96144836e+00, 2.37164783e+00],\n",
       "       [2.34596686e+06, 1.77244286e+06, 1.36862577e+06, ...,\n",
       "        2.05730051e+00, 1.76616880e+00, 1.88473841e+00]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>composition_grid</span></div><div class='xr-var-dims'>(grid, component)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>0.0 0.0 0.2041 ... 25.0 10.0 25.0</div><input id='attrs-b6eeb184-12a6-4c4e-9216-2f9afc2f4cf9' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-b6eeb184-12a6-4c4e-9216-2f9afc2f4cf9' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-5320d9b5-f8ab-4aed-902d-9f7808dbd1f0' class='xr-var-data-in' type='checkbox'><label for='data-5320d9b5-f8ab-4aed-902d-9f7808dbd1f0' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[ 0.        ,  0.        ],\n",
       "       [ 0.20408163,  0.        ],\n",
       "       [ 0.40816327,  0.        ],\n",
       "       ...,\n",
       "       [ 9.59183673, 25.        ],\n",
       "       [ 9.79591837, 25.        ],\n",
       "       [10.        , 25.        ]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>normalized_composition</span></div><div class='xr-var-dims'>(sample, component)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>0.57 0.05441 ... 0.0478 0.2042</div><input id='attrs-7934eb4a-18db-49fb-aaff-f926c9034168' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-7934eb4a-18db-49fb-aaff-f926c9034168' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-6cb83f04-0919-44ff-b688-54a66ddf74d1' class='xr-var-data-in' type='checkbox'><label for='data-6cb83f04-0919-44ff-b688-54a66ddf74d1' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd>Data normalized to have range 0 -&gt; 1</dd><dt><span>name :</span></dt><dd>Standardize</dd><dt><span>input_variable :</span></dt><dd>composition</dd><dt><span>output_variable :</span></dt><dd>normalized_composition</dd><dt><span>input_prefix :</span></dt><dd>None</dd><dt><span>output_prefix :</span></dt><dd>None</dd><dt><span>dim :</span></dt><dd>sample</dd><dt><span>component_dim :</span></dt><dd>component</dd><dt><span>min_val :</span></dt><dd>{&#x27;A&#x27;: 0.0, &#x27;B&#x27;: 0.0}</dd><dt><span>max_val :</span></dt><dd>{&#x27;A&#x27;: 10.0, &#x27;B&#x27;: 25.0}</dd><dt><span>scale_variable :</span></dt><dd>None</dd></dl></div><div class='xr-var-data'><pre>array([[0.56999576, 0.05440701],\n",
       "       [0.89378202, 0.64695366],\n",
       "       [0.3779011 , 0.78781278],\n",
       "       [0.9825356 , 0.28654046],\n",
       "       [0.16037012, 0.94928719],\n",
       "       [0.79099475, 0.58855406],\n",
       "       [0.2174658 , 0.19018012],\n",
       "       [0.93087565, 0.11452453],\n",
       "       [0.27892679, 0.00196367],\n",
       "       [0.50368155, 0.71226209],\n",
       "       [0.11852969, 0.656343  ],\n",
       "       [0.16521403, 0.79104271],\n",
       "       [0.27317673, 0.00754016],\n",
       "       [0.92231422, 0.2887113 ],\n",
       "       [0.83356002, 0.20882985],\n",
       "       [0.81071181, 0.89444805],\n",
       "       [0.41026329, 0.24709323],\n",
       "       [0.79409605, 0.43932029],\n",
       "       [0.65823861, 0.6111219 ],\n",
       "       [0.37802657, 0.82060143],\n",
       "...\n",
       "       [0.50825235, 0.21457642],\n",
       "       [0.85077058, 0.10111441],\n",
       "       [0.44632403, 0.27006877],\n",
       "       [0.85252344, 0.26842349],\n",
       "       [0.92321858, 0.8289078 ],\n",
       "       [0.67555881, 0.40994221],\n",
       "       [0.76753907, 0.06718201],\n",
       "       [0.58397554, 0.42597894],\n",
       "       [0.02247844, 0.73409473],\n",
       "       [0.88307764, 0.42621662],\n",
       "       [0.89844145, 0.00132886],\n",
       "       [0.01175595, 0.47107972],\n",
       "       [0.7901926 , 0.75787605],\n",
       "       [0.74267923, 0.94897665],\n",
       "       [0.87338296, 0.49097155],\n",
       "       [0.22094947, 0.37753957],\n",
       "       [0.89289855, 0.41397119],\n",
       "       [0.07989055, 0.65495331],\n",
       "       [0.25028415, 0.00320258],\n",
       "       [0.04779786, 0.20415996]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>normalized_composition_grid</span></div><div class='xr-var-dims'>(grid, component)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>0.0 0.0 0.02041 0.0 ... 1.0 1.0 1.0</div><input id='attrs-3ae1abee-b304-4a64-87d9-7fd5a986bd8c' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-3ae1abee-b304-4a64-87d9-7fd5a986bd8c' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-ca9e44c8-99a8-47bf-877f-e712e9401853' class='xr-var-data-in' type='checkbox'><label for='data-ca9e44c8-99a8-47bf-877f-e712e9401853' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd>Data normalized to have range 0 -&gt; 1</dd><dt><span>name :</span></dt><dd>Standardize</dd><dt><span>input_variable :</span></dt><dd>composition_grid</dd><dt><span>output_variable :</span></dt><dd>normalized_composition_grid</dd><dt><span>input_prefix :</span></dt><dd>None</dd><dt><span>output_prefix :</span></dt><dd>None</dd><dt><span>dim :</span></dt><dd>grid</dd><dt><span>component_dim :</span></dt><dd>component</dd><dt><span>min_val :</span></dt><dd>{&#x27;A&#x27;: 0.0, &#x27;B&#x27;: 0.0}</dd><dt><span>max_val :</span></dt><dd>{&#x27;A&#x27;: 10.0, &#x27;B&#x27;: 25.0}</dd><dt><span>scale_variable :</span></dt><dd>None</dd></dl></div><div class='xr-var-data'><pre>array([[0.        , 0.        ],\n",
       "       [0.02040816, 0.        ],\n",
       "       [0.04081633, 0.        ],\n",
       "       ...,\n",
       "       [0.95918367, 1.        ],\n",
       "       [0.97959184, 1.        ],\n",
       "       [1.        , 1.        ]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>derivative</span></div><div class='xr-var-dims'>(sample, log_x)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>-3.82 -3.825 ... -0.3897 -0.4063</div><input id='attrs-91ed0b87-7122-4230-b223-5f6929a7b8f3' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-91ed0b87-7122-4230-b223-5f6929a7b8f3' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-2b96d340-b2e1-45f9-8ad9-393ca3d640b0' class='xr-var-data-in' type='checkbox'><label for='data-2b96d340-b2e1-45f9-8ad9-393ca3d640b0' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd>Savitsky-Golay filtered data</dd><dt><span>name :</span></dt><dd>SavgolFilter</dd><dt><span>input_variable :</span></dt><dd>measurement</dd><dt><span>output_variable :</span></dt><dd>derivative</dd><dt><span>input_prefix :</span></dt><dd>None</dd><dt><span>output_prefix :</span></dt><dd>None</dd><dt><span>dim :</span></dt><dd>x</dd><dt><span>npts :</span></dt><dd>250</dd><dt><span>xlo :</span></dt><dd>None</dd><dt><span>xhi :</span></dt><dd>None</dd><dt><span>xlo_isel :</span></dt><dd>None</dd><dt><span>xhi_isel :</span></dt><dd>None</dd><dt><span>pedestal :</span></dt><dd>None</dd><dt><span>derivative :</span></dt><dd>1</dd><dt><span>apply_log_scale :</span></dt><dd>True</dd><dt><span>polyorder :</span></dt><dd>2</dd><dt><span>window_length :</span></dt><dd>50</dd></dl></div><div class='xr-var-data'><pre>array([[-3.82019992, -3.82462256, -3.82904519, ..., -0.35145453,\n",
       "        -0.36993018, -0.38840584],\n",
       "       [-4.2626048 , -4.24893257, -4.23526033, ...,  0.01349491,\n",
       "         0.01809932,  0.02270373],\n",
       "       [ 0.50261177,  0.4760206 ,  0.44942943, ...,  0.12473091,\n",
       "         0.13576784,  0.14680477],\n",
       "       ...,\n",
       "       [-0.24159282, -0.24193045, -0.24226809, ...,  0.52407629,\n",
       "         0.54400047,  0.56392465],\n",
       "       [-3.67922195, -3.69182355, -3.70442514, ...,  0.30180559,\n",
       "         0.31353524,  0.32526489],\n",
       "       [-3.96638732, -3.97110223, -3.97581713, ..., -0.37305086,\n",
       "        -0.389679  , -0.40630713]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>similarity</span></div><div class='xr-var-dims'>(sample_i, sample_j)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>1.0 0.9974 0.9503 ... 0.9974 1.0</div><input id='attrs-1bedc93f-b684-4d1c-94e9-684f6d2881ef' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-1bedc93f-b684-4d1c-94e9-684f6d2881ef' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-ec8e91a7-e260-4a7f-91a3-184710f9bc0d' class='xr-var-data-in' type='checkbox'><label for='data-ec8e91a7-e260-4a7f-91a3-184710f9bc0d' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>metric :</span></dt><dd>laplacian</dd><dt><span>gamma :</span></dt><dd>0.0001</dd><dt><span>name :</span></dt><dd>SimilarityMetric</dd><dt><span>input_variable :</span></dt><dd>derivative</dd><dt><span>output_variable :</span></dt><dd>similarity</dd><dt><span>input_prefix :</span></dt><dd>None</dd><dt><span>output_prefix :</span></dt><dd>None</dd><dt><span>sample_dim :</span></dt><dd>sample</dd><dt><span>constrain_same :</span></dt><dd>[]</dd><dt><span>constrain_different :</span></dt><dd>[]</dd></dl></div><div class='xr-var-data'><pre>array([[1.        , 0.99741833, 0.950302  , ..., 0.95081738, 0.99761626,\n",
       "        0.99830741],\n",
       "       [0.99741833, 1.        , 0.95025158, ..., 0.95041344, 0.99752619,\n",
       "        0.99755674],\n",
       "       [0.950302  , 0.95025158, 1.        , ..., 0.99504435, 0.9505596 ,\n",
       "        0.95006123],\n",
       "       ...,\n",
       "       [0.95081738, 0.95041344, 0.99504435, ..., 1.        , 0.95158475,\n",
       "        0.95047502],\n",
       "       [0.99761626, 0.99752619, 0.9505596 , ..., 0.95158475, 1.        ,\n",
       "        0.99740548],\n",
       "       [0.99830741, 0.99755674, 0.95006123, ..., 0.95047502, 0.99740548,\n",
       "        1.        ]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>labels</span></div><div class='xr-var-dims'>(sample)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>1 1 0 1 0 1 1 1 ... 1 1 1 1 1 0 1 1</div><input id='attrs-9074e5f8-c739-4fe8-b70c-d102ca6dc732' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-9074e5f8-c739-4fe8-b70c-d102ca6dc732' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-a2867a26-a65b-4d1e-b44a-be7794ad3533' class='xr-var-data-in' type='checkbox'><label for='data-a2867a26-a65b-4d1e-b44a-be7794ad3533' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>n_phases :</span></dt><dd>2</dd><dt><span>name :</span></dt><dd>SpectralClustering</dd><dt><span>input_variable :</span></dt><dd>similarity</dd><dt><span>output_variable :</span></dt><dd>labels</dd><dt><span>input_prefix :</span></dt><dd>None</dd><dt><span>output_prefix :</span></dt><dd>None</dd><dt><span>dim :</span></dt><dd>sample</dd><dt><span>use_silhouette :</span></dt><dd>False</dd></dl></div><div class='xr-var-data'><pre>array([1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1,\n",
       "       1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0,\n",
       "       1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1,\n",
       "       1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
       "       0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1])</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-33519a9c-1c86-4b8b-966b-002627fcd213' class='xr-section-summary-in' type='checkbox'  ><label for='section-33519a9c-1c86-4b8b-966b-002627fcd213' class='xr-section-summary' >Indexes: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-index-name'><div>component</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-1a83af3a-26c7-4b1e-933d-0b0216bc7490' class='xr-index-data-in' type='checkbox'/><label for='index-1a83af3a-26c7-4b1e-933d-0b0216bc7490' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([&#x27;A&#x27;, &#x27;B&#x27;], dtype=&#x27;object&#x27;, name=&#x27;component&#x27;))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>x</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-da1ec12e-719e-4f55-b5d2-c512abd6433f' class='xr-index-data-in' type='checkbox'/><label for='index-da1ec12e-719e-4f55-b5d2-c512abd6433f' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([                0.001, 0.0010474522360006332, 0.0010971561867027272,\n",
       "       0.0011492187010036998, 0.0012037516980200685, 0.0012608724076806808,\n",
       "        0.001320703622736631, 0.0013833739627296209,  0.001449018150486198,\n",
       "       0.0015177773017322714,\n",
       "       ...\n",
       "          0.6588581861506815,    0.6901224802908528,    0.7228703350949566,\n",
       "            0.75717214883374,    0.7931016603333051,    0.8307361074919352,\n",
       "          0.8701563933188907,    0.9114472598521185,    0.9546974703287516,\n",
       "                         1.0],\n",
       "      dtype=&#x27;float64&#x27;, name=&#x27;x&#x27;, length=150))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>log_x</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-cc82e042-d1aa-4eaf-9c47-1d443bccd963' class='xr-index-data-in' type='checkbox'/><label for='index-cc82e042-d1aa-4eaf-9c47-1d443bccd963' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([                 -3.0,   -2.9879518072289155,   -2.9759036144578315,\n",
       "          -2.963855421686747,   -2.9518072289156625,   -2.9397590361445785,\n",
       "          -2.927710843373494,   -2.9156626506024095,   -2.9036144578313254,\n",
       "          -2.891566265060241,\n",
       "       ...\n",
       "        -0.10843373493975905,  -0.09638554216867457,  -0.08433734939759008,\n",
       "        -0.07228915662650603,  -0.06024096385542155,  -0.04819277108433706,\n",
       "        -0.03614457831325302,  -0.02409638554216853, -0.012048192771084043,\n",
       "                         0.0],\n",
       "      dtype=&#x27;float64&#x27;, name=&#x27;log_x&#x27;, length=250))</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-b7075364-1ee6-4596-9822-f46c98d64630' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-b7075364-1ee6-4596-9822-f46c98d64630' class='xr-section-summary'  title='Expand/collapse section'>Attributes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'></dl></div></li></ul></div></div>"
      ],
      "text/plain": [
       "<xarray.Dataset> Size: 488kB\n",
       "Dimensions:                      (sample: 100, component: 2, x: 150,\n",
       "                                  grid: 2500, log_x: 250, sample_i: 100,\n",
       "                                  sample_j: 100)\n",
       "Coordinates:\n",
       "  * component                    (component) <U1 8B 'A' 'B'\n",
       "  * x                            (x) float64 1kB 0.001 0.001047 ... 0.9547 1.0\n",
       "  * log_x                        (log_x) float64 2kB -3.0 -2.988 ... 0.0\n",
       "Dimensions without coordinates: sample, grid, sample_i, sample_j\n",
       "Data variables:\n",
       "    composition                  (sample, component) float64 2kB 5.7 ... 5.104\n",
       "    ground_truth_labels          (sample) int64 800B 1 1 0 1 0 1 ... 1 1 1 0 1 1\n",
       "    measurement                  (sample, x) float64 120kB 1.915e+06 ... 1.885\n",
       "    composition_grid             (grid, component) float64 40kB 0.0 0.0 ... 25.0\n",
       "    normalized_composition       (sample, component) float64 2kB 0.57 ... 0.2042\n",
       "    normalized_composition_grid  (grid, component) float64 40kB 0.0 0.0 ... 1.0\n",
       "    derivative                   (sample, log_x) float64 200kB -3.82 ... -0.4063\n",
       "    similarity                   (sample_i, sample_j) float64 80kB 1.0 ... 1.0\n",
       "    labels                       (sample) int64 800B 1 1 0 1 0 1 ... 1 1 1 0 1 1"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ds_result = my_first_pipeline.calculate(ds)\n",
    "ds_result"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Plotting the results of this labeling and comparing to the ground truth"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[Text(0.5, 1.0, 'Spectral Clustering Labels')]"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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",
      "text/plain": [
       "<Figure size 800x325 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "fig,axes = plt.subplots(1,2,figsize=(8,3.25))\n",
    "\n",
    "plot_scatter_mpl(ds_result,'composition',component_dim='component',labels='ground_truth_labels',ax=axes[0])\n",
    "plot_scatter_mpl(ds_result,'composition',component_dim='component',labels='labels',ax=axes[1])\n",
    "\n",
    "axes[0].set(title=\"Ground Truth Labels\")\n",
    "axes[1].set(title=\"Spectral Clustering Labels\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Step 4: Extrapolate Cluster Labels"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now we can extrapolate the labels from the `SpectralClustering` over the `composition_grid` that we supplied in the input dataset."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "PipelineOp                               input_variable ---> output_variable\n",
      "----------                               -----------------------------------\n",
      "0  ) <Standardize>                       composition ---> normalized_composition\n",
      "1  ) <Standardize>                       composition_grid ---> normalized_composition_grid\n",
      "2  ) <SavgolFilter>                      measurement ---> derivative\n",
      "3  ) <SimilarityMetric>                  derivative ---> similarity\n",
      "4  ) <SpectralClustering>                similarity ---> labels\n",
      "5  ) <GaussianProcessClassifier>         ['normalized_composition', 'labels', 'normalized_composition_grid'] ---> ['extrap_mean', 'extrap_entropy']\n",
      "\n",
      "Input Variables\n",
      "---------------\n",
      "0) composition\n",
      "1) composition_grid\n",
      "2) measurement\n",
      "\n",
      "Output Variables\n",
      "----------------\n",
      "0) extrap_mean\n",
      "1) extrap_entropy\n"
     ]
    }
   ],
   "source": [
    "with my_first_pipeline:\n",
    "    GaussianProcessClassifier(\n",
    "        feature_input_variable='normalized_composition',\n",
    "        predictor_input_variable='labels',\n",
    "        output_prefix='extrap',\n",
    "        sample_dim='sample',\n",
    "        grid_variable='normalized_composition_grid',\n",
    "        grid_dim='grid',\n",
    "    )\n",
    "my_first_pipeline.print()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The GaussianProcessClassifier pipeline operation takes:\n",
    "\n",
    "- `feature_input_variable`: The composition data to use for training ('compositions')\n",
    "- `predictor_input_variable`: The labels to predict ('labels')\n",
    "- `output_prefix`: Prefix for output variables ('extrap')\n",
    "- `sample_dim`: The dimension containing different samples ('sample')\n",
    "- `grid_variable`: The grid points to extrapolate to ('composition_grid')\n",
    "- `grid_dim`: The dimension containing grid points ('grid')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "1ef66176cd6e4558b64fb54bc8317da1",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "  0%|          | 0/6 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div><svg style=\"position: absolute; width: 0; height: 0; overflow: hidden\">\n",
       "<defs>\n",
       "<symbol id=\"icon-database\" viewBox=\"0 0 32 32\">\n",
       "<path d=\"M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z\"></path>\n",
       "<path d=\"M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "<path d=\"M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "</symbol>\n",
       "<symbol id=\"icon-file-text2\" viewBox=\"0 0 32 32\">\n",
       "<path d=\"M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z\"></path>\n",
       "<path d=\"M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "</symbol>\n",
       "</defs>\n",
       "</svg>\n",
       "<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.\n",
       " *\n",
       " */\n",
       "\n",
       ":root {\n",
       "  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));\n",
       "  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));\n",
       "  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));\n",
       "  --xr-border-color: var(--jp-border-color2, #e0e0e0);\n",
       "  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);\n",
       "  --xr-background-color: var(--jp-layout-color0, white);\n",
       "  --xr-background-color-row-even: var(--jp-layout-color1, white);\n",
       "  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);\n",
       "}\n",
       "\n",
       "html[theme=\"dark\"],\n",
       "html[data-theme=\"dark\"],\n",
       "body[data-theme=\"dark\"],\n",
       "body.vscode-dark {\n",
       "  --xr-font-color0: rgba(255, 255, 255, 1);\n",
       "  --xr-font-color2: rgba(255, 255, 255, 0.54);\n",
       "  --xr-font-color3: rgba(255, 255, 255, 0.38);\n",
       "  --xr-border-color: #1f1f1f;\n",
       "  --xr-disabled-color: #515151;\n",
       "  --xr-background-color: #111111;\n",
       "  --xr-background-color-row-even: #111111;\n",
       "  --xr-background-color-row-odd: #313131;\n",
       "}\n",
       "\n",
       ".xr-wrap {\n",
       "  display: block !important;\n",
       "  min-width: 300px;\n",
       "  max-width: 700px;\n",
       "}\n",
       "\n",
       ".xr-text-repr-fallback {\n",
       "  /* fallback to plain text repr when CSS is not injected (untrusted notebook) */\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-header {\n",
       "  padding-top: 6px;\n",
       "  padding-bottom: 6px;\n",
       "  margin-bottom: 4px;\n",
       "  border-bottom: solid 1px var(--xr-border-color);\n",
       "}\n",
       "\n",
       ".xr-header > div,\n",
       ".xr-header > ul {\n",
       "  display: inline;\n",
       "  margin-top: 0;\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-obj-type,\n",
       ".xr-array-name {\n",
       "  margin-left: 2px;\n",
       "  margin-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-obj-type {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-sections {\n",
       "  padding-left: 0 !important;\n",
       "  display: grid;\n",
       "  grid-template-columns: 150px auto auto 1fr 0 20px 0 20px;\n",
       "}\n",
       "\n",
       ".xr-section-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-section-item input {\n",
       "  display: inline-block;\n",
       "  opacity: 0;\n",
       "  height: 0;\n",
       "}\n",
       "\n",
       ".xr-section-item input + label {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label {\n",
       "  cursor: pointer;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-item input:focus + label {\n",
       "  border: 2px solid var(--xr-font-color0);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label:hover {\n",
       "  color: var(--xr-font-color0);\n",
       "}\n",
       "\n",
       ".xr-section-summary {\n",
       "  grid-column: 1;\n",
       "  color: var(--xr-font-color2);\n",
       "  font-weight: 500;\n",
       "}\n",
       "\n",
       ".xr-section-summary > span {\n",
       "  display: inline-block;\n",
       "  padding-left: 0.5em;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in + label:before {\n",
       "  display: inline-block;\n",
       "  content: \"►\";\n",
       "  font-size: 11px;\n",
       "  width: 15px;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label:before {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label:before {\n",
       "  content: \"▼\";\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label > span {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-summary,\n",
       ".xr-section-inline-details {\n",
       "  padding-top: 4px;\n",
       "  padding-bottom: 4px;\n",
       "}\n",
       "\n",
       ".xr-section-inline-details {\n",
       "  grid-column: 2 / -1;\n",
       "}\n",
       "\n",
       ".xr-section-details {\n",
       "  display: none;\n",
       "  grid-column: 1 / -1;\n",
       "  margin-bottom: 5px;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked ~ .xr-section-details {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-array-wrap {\n",
       "  grid-column: 1 / -1;\n",
       "  display: grid;\n",
       "  grid-template-columns: 20px auto;\n",
       "}\n",
       "\n",
       ".xr-array-wrap > label {\n",
       "  grid-column: 1;\n",
       "  vertical-align: top;\n",
       "}\n",
       "\n",
       ".xr-preview {\n",
       "  color: var(--xr-font-color3);\n",
       "}\n",
       "\n",
       ".xr-array-preview,\n",
       ".xr-array-data {\n",
       "  padding: 0 5px !important;\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-array-data,\n",
       ".xr-array-in:checked ~ .xr-array-preview {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-array-in:checked ~ .xr-array-data,\n",
       ".xr-array-preview {\n",
       "  display: inline-block;\n",
       "}\n",
       "\n",
       ".xr-dim-list {\n",
       "  display: inline-block !important;\n",
       "  list-style: none;\n",
       "  padding: 0 !important;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list li {\n",
       "  display: inline-block;\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list:before {\n",
       "  content: \"(\";\n",
       "}\n",
       "\n",
       ".xr-dim-list:after {\n",
       "  content: \")\";\n",
       "}\n",
       "\n",
       ".xr-dim-list li:not(:last-child):after {\n",
       "  content: \",\";\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-has-index {\n",
       "  font-weight: bold;\n",
       "}\n",
       "\n",
       ".xr-var-list,\n",
       ".xr-var-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-var-item > div,\n",
       ".xr-var-item label,\n",
       ".xr-var-item > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-even);\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-var-item > .xr-var-name:hover span {\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-var-list > li:nth-child(odd) > div,\n",
       ".xr-var-list > li:nth-child(odd) > label,\n",
       ".xr-var-list > li:nth-child(odd) > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-odd);\n",
       "}\n",
       "\n",
       ".xr-var-name {\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-var-dims {\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-var-dtype {\n",
       "  grid-column: 3;\n",
       "  text-align: right;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-var-preview {\n",
       "  grid-column: 4;\n",
       "}\n",
       "\n",
       ".xr-index-preview {\n",
       "  grid-column: 2 / 5;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-var-name,\n",
       ".xr-var-dims,\n",
       ".xr-var-dtype,\n",
       ".xr-preview,\n",
       ".xr-attrs dt {\n",
       "  white-space: nowrap;\n",
       "  overflow: hidden;\n",
       "  text-overflow: ellipsis;\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-var-name:hover,\n",
       ".xr-var-dims:hover,\n",
       ".xr-var-dtype:hover,\n",
       ".xr-attrs dt:hover {\n",
       "  overflow: visible;\n",
       "  width: auto;\n",
       "  z-index: 1;\n",
       "}\n",
       "\n",
       ".xr-var-attrs,\n",
       ".xr-var-data,\n",
       ".xr-index-data {\n",
       "  display: none;\n",
       "  background-color: var(--xr-background-color) !important;\n",
       "  padding-bottom: 5px !important;\n",
       "}\n",
       "\n",
       ".xr-var-attrs-in:checked ~ .xr-var-attrs,\n",
       ".xr-var-data-in:checked ~ .xr-var-data,\n",
       ".xr-index-data-in:checked ~ .xr-index-data {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       ".xr-var-data > table {\n",
       "  float: right;\n",
       "}\n",
       "\n",
       ".xr-var-name span,\n",
       ".xr-var-data,\n",
       ".xr-index-name div,\n",
       ".xr-index-data,\n",
       ".xr-attrs {\n",
       "  padding-left: 25px !important;\n",
       "}\n",
       "\n",
       ".xr-attrs,\n",
       ".xr-var-attrs,\n",
       ".xr-var-data,\n",
       ".xr-index-data {\n",
       "  grid-column: 1 / -1;\n",
       "}\n",
       "\n",
       "dl.xr-attrs {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  display: grid;\n",
       "  grid-template-columns: 125px auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt,\n",
       ".xr-attrs dd {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  float: left;\n",
       "  padding-right: 10px;\n",
       "  width: auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt {\n",
       "  font-weight: normal;\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-attrs dt:hover span {\n",
       "  display: inline-block;\n",
       "  background: var(--xr-background-color);\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-attrs dd {\n",
       "  grid-column: 2;\n",
       "  white-space: pre-wrap;\n",
       "  word-break: break-all;\n",
       "}\n",
       "\n",
       ".xr-icon-database,\n",
       ".xr-icon-file-text2,\n",
       ".xr-no-icon {\n",
       "  display: inline-block;\n",
       "  vertical-align: middle;\n",
       "  width: 1em;\n",
       "  height: 1.5em !important;\n",
       "  stroke-width: 0;\n",
       "  stroke: currentColor;\n",
       "  fill: currentColor;\n",
       "}\n",
       "</style><pre class='xr-text-repr-fallback'>&lt;xarray.Dataset&gt; Size: 548kB\n",
       "Dimensions:                      (sample: 100, component: 2, x: 150,\n",
       "                                  grid: 2500, log_x: 250, sample_i: 100,\n",
       "                                  sample_j: 100)\n",
       "Coordinates:\n",
       "  * component                    (component) &lt;U1 8B &#x27;A&#x27; &#x27;B&#x27;\n",
       "  * x                            (x) float64 1kB 0.001 0.001047 ... 0.9547 1.0\n",
       "  * log_x                        (log_x) float64 2kB -3.0 -2.988 ... 0.0\n",
       "Dimensions without coordinates: sample, grid, sample_i, sample_j\n",
       "Data variables:\n",
       "    composition                  (sample, component) float64 2kB 5.7 ... 5.104\n",
       "    ground_truth_labels          (sample) int64 800B 1 1 0 1 0 1 ... 1 1 1 0 1 1\n",
       "    measurement                  (sample, x) float64 120kB 1.915e+06 ... 1.885\n",
       "    composition_grid             (grid, component) float64 40kB 0.0 0.0 ... 25.0\n",
       "    normalized_composition       (sample, component) float64 2kB 0.57 ... 0.2042\n",
       "    normalized_composition_grid  (grid, component) float64 40kB 0.0 0.0 ... 1.0\n",
       "    derivative                   (sample, log_x) float64 200kB -3.82 ... -0.4063\n",
       "    similarity                   (sample_i, sample_j) float64 80kB 1.0 ... 1.0\n",
       "    labels                       (sample) int64 800B 1 1 0 1 0 1 ... 1 1 1 0 1 1\n",
       "    extrap_mean                  (grid) int64 20kB 1 1 1 1 1 1 1 ... 1 1 1 1 1 1\n",
       "    extrap_entropy               (grid) float64 20kB 0.5813 0.5687 ... 0.4603\n",
       "    extrap_y_prob                (grid) float64 20kB 0.5813 0.5687 ... 0.4603</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.Dataset</div></div><ul class='xr-sections'><li class='xr-section-item'><input id='section-8dd36646-3b1a-4fa5-96fe-fd9a81be8634' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-8dd36646-3b1a-4fa5-96fe-fd9a81be8634' class='xr-section-summary'  title='Expand/collapse section'>Dimensions:</label><div class='xr-section-inline-details'><ul class='xr-dim-list'><li><span>sample</span>: 100</li><li><span class='xr-has-index'>component</span>: 2</li><li><span class='xr-has-index'>x</span>: 150</li><li><span>grid</span>: 2500</li><li><span class='xr-has-index'>log_x</span>: 250</li><li><span>sample_i</span>: 100</li><li><span>sample_j</span>: 100</li></ul></div><div class='xr-section-details'></div></li><li class='xr-section-item'><input id='section-08a1d322-6429-41ab-9ea8-13cc1edb70a4' class='xr-section-summary-in' type='checkbox'  checked><label for='section-08a1d322-6429-41ab-9ea8-13cc1edb70a4' class='xr-section-summary' >Coordinates: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>component</span></div><div class='xr-var-dims'>(component)</div><div class='xr-var-dtype'>&lt;U1</div><div class='xr-var-preview xr-preview'>&#x27;A&#x27; &#x27;B&#x27;</div><input id='attrs-33a54c04-9ba9-426d-8895-ebed2559f820' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-33a54c04-9ba9-426d-8895-ebed2559f820' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-1f7f9118-db19-4daa-9dd0-476982afac2d' class='xr-var-data-in' type='checkbox'><label for='data-1f7f9118-db19-4daa-9dd0-476982afac2d' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;A&#x27;, &#x27;B&#x27;], dtype=&#x27;&lt;U1&#x27;)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>x</span></div><div class='xr-var-dims'>(x)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>0.001 0.001047 ... 0.9547 1.0</div><input id='attrs-5eb72ca3-2702-4d4a-9e2e-852b1bd979fa' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-5eb72ca3-2702-4d4a-9e2e-852b1bd979fa' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-45da2f77-f277-4904-8a88-a146b4108735' class='xr-var-data-in' type='checkbox'><label for='data-45da2f77-f277-4904-8a88-a146b4108735' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([0.001   , 0.001047, 0.001097, 0.001149, 0.001204, 0.001261, 0.001321,\n",
       "       0.001383, 0.001449, 0.001518, 0.00159 , 0.001665, 0.001744, 0.001827,\n",
       "       0.001914, 0.002005, 0.0021  , 0.002199, 0.002304, 0.002413, 0.002527,\n",
       "       0.002647, 0.002773, 0.002905, 0.003042, 0.003187, 0.003338, 0.003496,\n",
       "       0.003662, 0.003836, 0.004018, 0.004209, 0.004409, 0.004618, 0.004837,\n",
       "       0.005066, 0.005307, 0.005559, 0.005822, 0.006099, 0.006388, 0.006691,\n",
       "       0.007009, 0.007341, 0.00769 , 0.008055, 0.008437, 0.008837, 0.009256,\n",
       "       0.009696, 0.010156, 0.010638, 0.011142, 0.011671, 0.012225, 0.012805,\n",
       "       0.013413, 0.014049, 0.014716, 0.015414, 0.016146, 0.016912, 0.017714,\n",
       "       0.018555, 0.019435, 0.020358, 0.021324, 0.022335, 0.023395, 0.024505,\n",
       "       0.025668, 0.026886, 0.028162, 0.029498, 0.030898, 0.032364, 0.0339  ,\n",
       "       0.035509, 0.037194, 0.038959, 0.040807, 0.042744, 0.044772, 0.046897,\n",
       "       0.049122, 0.051453, 0.053894, 0.056452, 0.059131, 0.061936, 0.064875,\n",
       "       0.067954, 0.071179, 0.074556, 0.078094, 0.0818  , 0.085681, 0.089747,\n",
       "       0.094006, 0.098467, 0.103139, 0.108033, 0.11316 , 0.118529, 0.124154,\n",
       "       0.130045, 0.136216, 0.14268 , 0.14945 , 0.156542, 0.16397 , 0.171751,\n",
       "       0.179901, 0.188438, 0.197379, 0.206746, 0.216556, 0.226832, 0.237596,\n",
       "       0.24887 , 0.26068 , 0.27305 , 0.286006, 0.299578, 0.313794, 0.328684,\n",
       "       0.344281, 0.360618, 0.37773 , 0.395654, 0.414429, 0.434094, 0.454693,\n",
       "       0.476269, 0.498869, 0.522542, 0.547337, 0.57331 , 0.600514, 0.62901 ,\n",
       "       0.658858, 0.690122, 0.72287 , 0.757172, 0.793102, 0.830736, 0.870156,\n",
       "       0.911447, 0.954697, 1.      ])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>log_x</span></div><div class='xr-var-dims'>(log_x)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>-3.0 -2.988 -2.976 ... -0.01205 0.0</div><input id='attrs-6c7659f5-e904-472f-bdd4-5498e9c3eda3' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-6c7659f5-e904-472f-bdd4-5498e9c3eda3' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-c606357e-ea82-4a33-aeeb-edb74d52022e' class='xr-var-data-in' type='checkbox'><label for='data-c606357e-ea82-4a33-aeeb-edb74d52022e' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([-3.      , -2.987952, -2.975904, ..., -0.024096, -0.012048,  0.      ])</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-ef9ac8cb-9932-4b2d-b604-5d6f57b1ea15' class='xr-section-summary-in' type='checkbox'  checked><label for='section-ef9ac8cb-9932-4b2d-b604-5d6f57b1ea15' class='xr-section-summary' >Data variables: <span>(12)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span>composition</span></div><div class='xr-var-dims'>(sample, component)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>5.7 1.36 8.938 ... 0.478 5.104</div><input id='attrs-19f81080-e278-4146-a399-7861e9418044' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-19f81080-e278-4146-a399-7861e9418044' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-1790c52e-5f58-4f76-96a3-93c05a44e262' class='xr-var-data-in' type='checkbox'><label for='data-1790c52e-5f58-4f76-96a3-93c05a44e262' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[ 5.69995762,  1.36017531],\n",
       "       [ 8.93782024, 16.17384162],\n",
       "       [ 3.77901101, 19.69531938],\n",
       "       [ 9.82535598,  7.16351158],\n",
       "       [ 1.60370118, 23.73217969],\n",
       "       [ 7.90994751, 14.71385158],\n",
       "       [ 2.17465804,  4.75450299],\n",
       "       [ 9.30875652,  2.86311327],\n",
       "       [ 2.78926787,  0.04909185],\n",
       "       [ 5.0368155 , 17.80655234],\n",
       "       [ 1.18529693, 16.40857492],\n",
       "       [ 1.65214034, 19.7760677 ],\n",
       "       [ 2.73176727,  0.18850408],\n",
       "       [ 9.22314222,  7.21778243],\n",
       "       [ 8.33560023,  5.22074632],\n",
       "       [ 8.10711809, 22.36120136],\n",
       "       [ 4.10263293,  6.17733076],\n",
       "       [ 7.94096049, 10.98300725],\n",
       "       [ 6.58238609, 15.27804755],\n",
       "       [ 3.78026574, 20.5150357 ],\n",
       "...\n",
       "       [ 5.0825235 ,  5.36441059],\n",
       "       [ 8.50770583,  2.52786027],\n",
       "       [ 4.46324027,  6.75171924],\n",
       "       [ 8.52523439,  6.71058719],\n",
       "       [ 9.23218578, 20.72269505],\n",
       "       [ 6.7555881 , 10.24855529],\n",
       "       [ 7.67539066,  1.6795503 ],\n",
       "       [ 5.8397554 , 10.64947346],\n",
       "       [ 0.22478436, 18.35236821],\n",
       "       [ 8.83077635, 10.65541542],\n",
       "       [ 8.98441453,  0.03322162],\n",
       "       [ 0.11755953, 11.77699299],\n",
       "       [ 7.90192605, 18.94690136],\n",
       "       [ 7.42679234, 23.72441631],\n",
       "       [ 8.7338296 , 12.27428886],\n",
       "       [ 2.2094947 ,  9.43848935],\n",
       "       [ 8.92898549, 10.34927984],\n",
       "       [ 0.79890552, 16.37383273],\n",
       "       [ 2.50284147,  0.0800645 ],\n",
       "       [ 0.47797863,  5.10399908]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>ground_truth_labels</span></div><div class='xr-var-dims'>(sample)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>1 1 0 1 0 1 1 1 ... 1 1 1 1 1 0 1 1</div><input id='attrs-b8017dce-85e1-4264-b7e4-1e0623b23308' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-b8017dce-85e1-4264-b7e4-1e0623b23308' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-0d7567c9-ad30-443f-8e6e-9aefd723d2ec' class='xr-var-data-in' type='checkbox'><label for='data-0d7567c9-ad30-443f-8e6e-9aefd723d2ec' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1,\n",
       "       1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0,\n",
       "       1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1,\n",
       "       1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
       "       0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>measurement</span></div><div class='xr-var-dims'>(sample, x)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>1.915e+06 1.479e+06 ... 1.766 1.885</div><input id='attrs-88079dae-439e-4e87-b8c0-7f7def4430ee' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-88079dae-439e-4e87-b8c0-7f7def4430ee' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-d1507070-4df1-4021-8655-9420696f77af' class='xr-var-data-in' type='checkbox'><label for='data-d1507070-4df1-4021-8655-9420696f77af' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[1.91473866e+06, 1.47945621e+06, 1.36028471e+06, ...,\n",
       "        1.94187833e+00, 1.95975369e+00, 2.07151476e+00],\n",
       "       [1.97716281e+06, 1.35648739e+06, 1.63877436e+06, ...,\n",
       "        1.90008720e+00, 1.76008223e+00, 2.09466497e+00],\n",
       "       [9.73830160e-01, 7.68956928e-01, 1.03891097e+00, ...,\n",
       "        9.25128766e-01, 6.82586751e-01, 1.00886636e+00],\n",
       "       ...,\n",
       "       [1.42016873e+00, 8.73396019e-01, 1.23904051e+00, ...,\n",
       "        1.14723090e+00, 1.27145347e+00, 9.40494323e-01],\n",
       "       [1.96972776e+06, 1.80114117e+06, 1.63801728e+06, ...,\n",
       "        2.53037078e+00, 1.96144836e+00, 2.37164783e+00],\n",
       "       [2.34596686e+06, 1.77244286e+06, 1.36862577e+06, ...,\n",
       "        2.05730051e+00, 1.76616880e+00, 1.88473841e+00]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>composition_grid</span></div><div class='xr-var-dims'>(grid, component)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>0.0 0.0 0.2041 ... 25.0 10.0 25.0</div><input id='attrs-30d1d9e7-4a53-468e-94ef-ba61b4600141' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-30d1d9e7-4a53-468e-94ef-ba61b4600141' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-2819fe4d-02d5-4a3e-a88d-ca8c959d1b4b' class='xr-var-data-in' type='checkbox'><label for='data-2819fe4d-02d5-4a3e-a88d-ca8c959d1b4b' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[ 0.        ,  0.        ],\n",
       "       [ 0.20408163,  0.        ],\n",
       "       [ 0.40816327,  0.        ],\n",
       "       ...,\n",
       "       [ 9.59183673, 25.        ],\n",
       "       [ 9.79591837, 25.        ],\n",
       "       [10.        , 25.        ]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>normalized_composition</span></div><div class='xr-var-dims'>(sample, component)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>0.57 0.05441 ... 0.0478 0.2042</div><input id='attrs-a78af650-27c7-4596-a3b2-35b4cd9d57e6' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-a78af650-27c7-4596-a3b2-35b4cd9d57e6' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-b1c7eee7-db01-459c-a7e7-f71188a10f30' class='xr-var-data-in' type='checkbox'><label for='data-b1c7eee7-db01-459c-a7e7-f71188a10f30' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd>Data normalized to have range 0 -&gt; 1</dd><dt><span>name :</span></dt><dd>Standardize</dd><dt><span>input_variable :</span></dt><dd>composition</dd><dt><span>output_variable :</span></dt><dd>normalized_composition</dd><dt><span>input_prefix :</span></dt><dd>None</dd><dt><span>output_prefix :</span></dt><dd>None</dd><dt><span>dim :</span></dt><dd>sample</dd><dt><span>component_dim :</span></dt><dd>component</dd><dt><span>min_val :</span></dt><dd>{&#x27;A&#x27;: 0.0, &#x27;B&#x27;: 0.0}</dd><dt><span>max_val :</span></dt><dd>{&#x27;A&#x27;: 10.0, &#x27;B&#x27;: 25.0}</dd><dt><span>scale_variable :</span></dt><dd>None</dd></dl></div><div class='xr-var-data'><pre>array([[0.56999576, 0.05440701],\n",
       "       [0.89378202, 0.64695366],\n",
       "       [0.3779011 , 0.78781278],\n",
       "       [0.9825356 , 0.28654046],\n",
       "       [0.16037012, 0.94928719],\n",
       "       [0.79099475, 0.58855406],\n",
       "       [0.2174658 , 0.19018012],\n",
       "       [0.93087565, 0.11452453],\n",
       "       [0.27892679, 0.00196367],\n",
       "       [0.50368155, 0.71226209],\n",
       "       [0.11852969, 0.656343  ],\n",
       "       [0.16521403, 0.79104271],\n",
       "       [0.27317673, 0.00754016],\n",
       "       [0.92231422, 0.2887113 ],\n",
       "       [0.83356002, 0.20882985],\n",
       "       [0.81071181, 0.89444805],\n",
       "       [0.41026329, 0.24709323],\n",
       "       [0.79409605, 0.43932029],\n",
       "       [0.65823861, 0.6111219 ],\n",
       "       [0.37802657, 0.82060143],\n",
       "...\n",
       "       [0.50825235, 0.21457642],\n",
       "       [0.85077058, 0.10111441],\n",
       "       [0.44632403, 0.27006877],\n",
       "       [0.85252344, 0.26842349],\n",
       "       [0.92321858, 0.8289078 ],\n",
       "       [0.67555881, 0.40994221],\n",
       "       [0.76753907, 0.06718201],\n",
       "       [0.58397554, 0.42597894],\n",
       "       [0.02247844, 0.73409473],\n",
       "       [0.88307764, 0.42621662],\n",
       "       [0.89844145, 0.00132886],\n",
       "       [0.01175595, 0.47107972],\n",
       "       [0.7901926 , 0.75787605],\n",
       "       [0.74267923, 0.94897665],\n",
       "       [0.87338296, 0.49097155],\n",
       "       [0.22094947, 0.37753957],\n",
       "       [0.89289855, 0.41397119],\n",
       "       [0.07989055, 0.65495331],\n",
       "       [0.25028415, 0.00320258],\n",
       "       [0.04779786, 0.20415996]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>normalized_composition_grid</span></div><div class='xr-var-dims'>(grid, component)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>0.0 0.0 0.02041 0.0 ... 1.0 1.0 1.0</div><input id='attrs-ac9628fd-9e87-4bae-a0a7-977f89707185' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-ac9628fd-9e87-4bae-a0a7-977f89707185' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-ec577f1d-a4bc-4343-b3f7-616ee568afb4' class='xr-var-data-in' type='checkbox'><label for='data-ec577f1d-a4bc-4343-b3f7-616ee568afb4' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd>Data normalized to have range 0 -&gt; 1</dd><dt><span>name :</span></dt><dd>Standardize</dd><dt><span>input_variable :</span></dt><dd>composition_grid</dd><dt><span>output_variable :</span></dt><dd>normalized_composition_grid</dd><dt><span>input_prefix :</span></dt><dd>None</dd><dt><span>output_prefix :</span></dt><dd>None</dd><dt><span>dim :</span></dt><dd>grid</dd><dt><span>component_dim :</span></dt><dd>component</dd><dt><span>min_val :</span></dt><dd>{&#x27;A&#x27;: 0.0, &#x27;B&#x27;: 0.0}</dd><dt><span>max_val :</span></dt><dd>{&#x27;A&#x27;: 10.0, &#x27;B&#x27;: 25.0}</dd><dt><span>scale_variable :</span></dt><dd>None</dd></dl></div><div class='xr-var-data'><pre>array([[0.        , 0.        ],\n",
       "       [0.02040816, 0.        ],\n",
       "       [0.04081633, 0.        ],\n",
       "       ...,\n",
       "       [0.95918367, 1.        ],\n",
       "       [0.97959184, 1.        ],\n",
       "       [1.        , 1.        ]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>derivative</span></div><div class='xr-var-dims'>(sample, log_x)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>-3.82 -3.825 ... -0.3897 -0.4063</div><input id='attrs-e73b4393-1719-4f02-bea6-2026661b2f49' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-e73b4393-1719-4f02-bea6-2026661b2f49' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-1d469c68-98e6-41b1-bed4-499c67ff0328' class='xr-var-data-in' type='checkbox'><label for='data-1d469c68-98e6-41b1-bed4-499c67ff0328' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd>Savitsky-Golay filtered data</dd><dt><span>name :</span></dt><dd>SavgolFilter</dd><dt><span>input_variable :</span></dt><dd>measurement</dd><dt><span>output_variable :</span></dt><dd>derivative</dd><dt><span>input_prefix :</span></dt><dd>None</dd><dt><span>output_prefix :</span></dt><dd>None</dd><dt><span>dim :</span></dt><dd>x</dd><dt><span>npts :</span></dt><dd>250</dd><dt><span>xlo :</span></dt><dd>None</dd><dt><span>xhi :</span></dt><dd>None</dd><dt><span>xlo_isel :</span></dt><dd>None</dd><dt><span>xhi_isel :</span></dt><dd>None</dd><dt><span>pedestal :</span></dt><dd>None</dd><dt><span>derivative :</span></dt><dd>1</dd><dt><span>apply_log_scale :</span></dt><dd>True</dd><dt><span>polyorder :</span></dt><dd>2</dd><dt><span>window_length :</span></dt><dd>50</dd></dl></div><div class='xr-var-data'><pre>array([[-3.82019992, -3.82462256, -3.82904519, ..., -0.35145453,\n",
       "        -0.36993018, -0.38840584],\n",
       "       [-4.2626048 , -4.24893257, -4.23526033, ...,  0.01349491,\n",
       "         0.01809932,  0.02270373],\n",
       "       [ 0.50261177,  0.4760206 ,  0.44942943, ...,  0.12473091,\n",
       "         0.13576784,  0.14680477],\n",
       "       ...,\n",
       "       [-0.24159282, -0.24193045, -0.24226809, ...,  0.52407629,\n",
       "         0.54400047,  0.56392465],\n",
       "       [-3.67922195, -3.69182355, -3.70442514, ...,  0.30180559,\n",
       "         0.31353524,  0.32526489],\n",
       "       [-3.96638732, -3.97110223, -3.97581713, ..., -0.37305086,\n",
       "        -0.389679  , -0.40630713]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>similarity</span></div><div class='xr-var-dims'>(sample_i, sample_j)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>1.0 0.9974 0.9503 ... 0.9974 1.0</div><input id='attrs-898af195-36f0-47b1-bed6-3db830e16b3c' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-898af195-36f0-47b1-bed6-3db830e16b3c' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-47dbd40f-64d5-48fe-8162-b58c36b07b1a' class='xr-var-data-in' type='checkbox'><label for='data-47dbd40f-64d5-48fe-8162-b58c36b07b1a' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>metric :</span></dt><dd>laplacian</dd><dt><span>gamma :</span></dt><dd>0.0001</dd><dt><span>name :</span></dt><dd>SimilarityMetric</dd><dt><span>input_variable :</span></dt><dd>derivative</dd><dt><span>output_variable :</span></dt><dd>similarity</dd><dt><span>input_prefix :</span></dt><dd>None</dd><dt><span>output_prefix :</span></dt><dd>None</dd><dt><span>sample_dim :</span></dt><dd>sample</dd><dt><span>constrain_same :</span></dt><dd>[]</dd><dt><span>constrain_different :</span></dt><dd>[]</dd></dl></div><div class='xr-var-data'><pre>array([[1.        , 0.99741833, 0.950302  , ..., 0.95081738, 0.99761626,\n",
       "        0.99830741],\n",
       "       [0.99741833, 1.        , 0.95025158, ..., 0.95041344, 0.99752619,\n",
       "        0.99755674],\n",
       "       [0.950302  , 0.95025158, 1.        , ..., 0.99504435, 0.9505596 ,\n",
       "        0.95006123],\n",
       "       ...,\n",
       "       [0.95081738, 0.95041344, 0.99504435, ..., 1.        , 0.95158475,\n",
       "        0.95047502],\n",
       "       [0.99761626, 0.99752619, 0.9505596 , ..., 0.95158475, 1.        ,\n",
       "        0.99740548],\n",
       "       [0.99830741, 0.99755674, 0.95006123, ..., 0.95047502, 0.99740548,\n",
       "        1.        ]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>labels</span></div><div class='xr-var-dims'>(sample)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>1 1 0 1 0 1 1 1 ... 1 1 1 1 1 0 1 1</div><input id='attrs-8525c24a-ecda-4d39-bbe1-364537dfb68f' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-8525c24a-ecda-4d39-bbe1-364537dfb68f' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-52a8ac75-0d92-4905-a128-7dd429858a7f' class='xr-var-data-in' type='checkbox'><label for='data-52a8ac75-0d92-4905-a128-7dd429858a7f' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>n_phases :</span></dt><dd>2</dd><dt><span>name :</span></dt><dd>SpectralClustering</dd><dt><span>input_variable :</span></dt><dd>similarity</dd><dt><span>output_variable :</span></dt><dd>labels</dd><dt><span>input_prefix :</span></dt><dd>None</dd><dt><span>output_prefix :</span></dt><dd>None</dd><dt><span>dim :</span></dt><dd>sample</dd><dt><span>use_silhouette :</span></dt><dd>False</dd></dl></div><div class='xr-var-data'><pre>array([1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1,\n",
       "       1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0,\n",
       "       1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1,\n",
       "       1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
       "       0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>extrap_mean</span></div><div class='xr-var-dims'>(grid)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>1 1 1 1 1 1 1 1 ... 1 1 1 1 1 1 1 1</div><input id='attrs-7872071c-9ecc-4fc9-ae2c-e663648dee05' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-7872071c-9ecc-4fc9-ae2c-e663648dee05' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-a769641f-958f-4f79-9469-c46322495394' class='xr-var-data-in' type='checkbox'><label for='data-a769641f-958f-4f79-9469-c46322495394' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>name :</span></dt><dd>GaussianProcessClassifier</dd><dt><span>input_variable :</span></dt><dd>[&#x27;normalized_composition&#x27;, &#x27;labels&#x27;, &#x27;normalized_composition_grid&#x27;]</dd><dt><span>output_variable :</span></dt><dd>[&#x27;extrap_mean&#x27;, &#x27;extrap_entropy&#x27;]</dd><dt><span>input_prefix :</span></dt><dd>None</dd><dt><span>output_prefix :</span></dt><dd>extrap</dd><dt><span>feature_input_variable :</span></dt><dd>normalized_composition</dd><dt><span>predictor_input_variable :</span></dt><dd>labels</dd><dt><span>grid_variable :</span></dt><dd>normalized_composition_grid</dd><dt><span>sample_dim :</span></dt><dd>sample</dd><dt><span>grid_dim :</span></dt><dd>grid</dd><dt><span>grid :</span></dt><dd>&lt;xarray.DataArray &#x27;normalized_composition_grid&#x27; (grid: 2500, component: 2)&gt; Size: 40kB\n",
       "array([[0.        , 0.        ],\n",
       "       [0.02040816, 0.        ],\n",
       "       [0.04081633, 0.        ],\n",
       "       ...,\n",
       "       [0.95918367, 1.        ],\n",
       "       [0.97959184, 1.        ],\n",
       "       [1.        , 1.        ]])\n",
       "Coordinates:\n",
       "  * component  (component) &lt;U1 8B &#x27;A&#x27; &#x27;B&#x27;\n",
       "Dimensions without coordinates: grid\n",
       "Attributes:\n",
       "    description:      Data normalized to have range 0 -&gt; 1\n",
       "    name:             Standardize\n",
       "    input_variable:   composition_grid\n",
       "    output_variable:  normalized_composition_grid\n",
       "    input_prefix:     None\n",
       "    output_prefix:    None\n",
       "    dim:              grid\n",
       "    component_dim:    component\n",
       "    min_val:          {&#x27;A&#x27;: 0.0, &#x27;B&#x27;: 0.0}\n",
       "    max_val:          {&#x27;A&#x27;: 10.0, &#x27;B&#x27;: 25.0}\n",
       "    scale_variable:   None</dd><dt><span>optimizer :</span></dt><dd>fmin_l_bfgs_b</dd></dl></div><div class='xr-var-data'><pre>array([1, 1, 1, ..., 1, 1, 1])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>extrap_entropy</span></div><div class='xr-var-dims'>(grid)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>0.5813 0.5687 ... 0.4565 0.4603</div><input id='attrs-000a3058-b6f3-465d-8124-b70ffee1c2fa' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-000a3058-b6f3-465d-8124-b70ffee1c2fa' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-98f0d1bd-79df-4117-8a0f-942fd306fb96' class='xr-var-data-in' type='checkbox'><label for='data-98f0d1bd-79df-4117-8a0f-942fd306fb96' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>name :</span></dt><dd>GaussianProcessClassifier</dd><dt><span>input_variable :</span></dt><dd>[&#x27;normalized_composition&#x27;, &#x27;labels&#x27;, &#x27;normalized_composition_grid&#x27;]</dd><dt><span>output_variable :</span></dt><dd>[&#x27;extrap_mean&#x27;, &#x27;extrap_entropy&#x27;]</dd><dt><span>input_prefix :</span></dt><dd>None</dd><dt><span>output_prefix :</span></dt><dd>extrap</dd><dt><span>feature_input_variable :</span></dt><dd>normalized_composition</dd><dt><span>predictor_input_variable :</span></dt><dd>labels</dd><dt><span>grid_variable :</span></dt><dd>normalized_composition_grid</dd><dt><span>sample_dim :</span></dt><dd>sample</dd><dt><span>grid_dim :</span></dt><dd>grid</dd><dt><span>grid :</span></dt><dd>&lt;xarray.DataArray &#x27;normalized_composition_grid&#x27; (grid: 2500, component: 2)&gt; Size: 40kB\n",
       "array([[0.        , 0.        ],\n",
       "       [0.02040816, 0.        ],\n",
       "       [0.04081633, 0.        ],\n",
       "       ...,\n",
       "       [0.95918367, 1.        ],\n",
       "       [0.97959184, 1.        ],\n",
       "       [1.        , 1.        ]])\n",
       "Coordinates:\n",
       "  * component  (component) &lt;U1 8B &#x27;A&#x27; &#x27;B&#x27;\n",
       "Dimensions without coordinates: grid\n",
       "Attributes:\n",
       "    description:      Data normalized to have range 0 -&gt; 1\n",
       "    name:             Standardize\n",
       "    input_variable:   composition_grid\n",
       "    output_variable:  normalized_composition_grid\n",
       "    input_prefix:     None\n",
       "    output_prefix:    None\n",
       "    dim:              grid\n",
       "    component_dim:    component\n",
       "    min_val:          {&#x27;A&#x27;: 0.0, &#x27;B&#x27;: 0.0}\n",
       "    max_val:          {&#x27;A&#x27;: 10.0, &#x27;B&#x27;: 25.0}\n",
       "    scale_variable:   None</dd><dt><span>optimizer :</span></dt><dd>fmin_l_bfgs_b</dd></dl></div><div class='xr-var-data'><pre>array([0.58125708, 0.56865533, 0.55554833, ..., 0.45390195, 0.45652977,\n",
       "       0.46031056])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>extrap_y_prob</span></div><div class='xr-var-dims'>(grid)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>0.5813 0.5687 ... 0.4565 0.4603</div><input id='attrs-f90527d1-1322-46a6-a1f8-8c3a17b5da5f' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-f90527d1-1322-46a6-a1f8-8c3a17b5da5f' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-ec337b24-ecc1-46c4-84cf-ef8d6c9f14f5' class='xr-var-data-in' type='checkbox'><label for='data-ec337b24-ecc1-46c4-84cf-ef8d6c9f14f5' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>name :</span></dt><dd>GaussianProcessClassifier</dd><dt><span>input_variable :</span></dt><dd>[&#x27;normalized_composition&#x27;, &#x27;labels&#x27;, &#x27;normalized_composition_grid&#x27;]</dd><dt><span>output_variable :</span></dt><dd>[&#x27;extrap_mean&#x27;, &#x27;extrap_entropy&#x27;]</dd><dt><span>input_prefix :</span></dt><dd>None</dd><dt><span>output_prefix :</span></dt><dd>extrap</dd><dt><span>feature_input_variable :</span></dt><dd>normalized_composition</dd><dt><span>predictor_input_variable :</span></dt><dd>labels</dd><dt><span>grid_variable :</span></dt><dd>normalized_composition_grid</dd><dt><span>sample_dim :</span></dt><dd>sample</dd><dt><span>grid_dim :</span></dt><dd>grid</dd><dt><span>grid :</span></dt><dd>&lt;xarray.DataArray &#x27;normalized_composition_grid&#x27; (grid: 2500, component: 2)&gt; Size: 40kB\n",
       "array([[0.        , 0.        ],\n",
       "       [0.02040816, 0.        ],\n",
       "       [0.04081633, 0.        ],\n",
       "       ...,\n",
       "       [0.95918367, 1.        ],\n",
       "       [0.97959184, 1.        ],\n",
       "       [1.        , 1.        ]])\n",
       "Coordinates:\n",
       "  * component  (component) &lt;U1 8B &#x27;A&#x27; &#x27;B&#x27;\n",
       "Dimensions without coordinates: grid\n",
       "Attributes:\n",
       "    description:      Data normalized to have range 0 -&gt; 1\n",
       "    name:             Standardize\n",
       "    input_variable:   composition_grid\n",
       "    output_variable:  normalized_composition_grid\n",
       "    input_prefix:     None\n",
       "    output_prefix:    None\n",
       "    dim:              grid\n",
       "    component_dim:    component\n",
       "    min_val:          {&#x27;A&#x27;: 0.0, &#x27;B&#x27;: 0.0}\n",
       "    max_val:          {&#x27;A&#x27;: 10.0, &#x27;B&#x27;: 25.0}\n",
       "    scale_variable:   None</dd><dt><span>optimizer :</span></dt><dd>fmin_l_bfgs_b</dd></dl></div><div class='xr-var-data'><pre>array([0.58125708, 0.56865533, 0.55554833, ..., 0.45390195, 0.45652977,\n",
       "       0.46031056])</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-c01fa6c2-0e6e-4755-9d5b-3b4c661bc51a' class='xr-section-summary-in' type='checkbox'  ><label for='section-c01fa6c2-0e6e-4755-9d5b-3b4c661bc51a' class='xr-section-summary' >Indexes: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-index-name'><div>component</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-4aeb7a37-80fc-4d3d-835d-e37bbb5cc712' class='xr-index-data-in' type='checkbox'/><label for='index-4aeb7a37-80fc-4d3d-835d-e37bbb5cc712' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([&#x27;A&#x27;, &#x27;B&#x27;], dtype=&#x27;object&#x27;, name=&#x27;component&#x27;))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>x</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-41523970-6171-49ad-9846-f247129a7f79' class='xr-index-data-in' type='checkbox'/><label for='index-41523970-6171-49ad-9846-f247129a7f79' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([                0.001, 0.0010474522360006332, 0.0010971561867027272,\n",
       "       0.0011492187010036998, 0.0012037516980200685, 0.0012608724076806808,\n",
       "        0.001320703622736631, 0.0013833739627296209,  0.001449018150486198,\n",
       "       0.0015177773017322714,\n",
       "       ...\n",
       "          0.6588581861506815,    0.6901224802908528,    0.7228703350949566,\n",
       "            0.75717214883374,    0.7931016603333051,    0.8307361074919352,\n",
       "          0.8701563933188907,    0.9114472598521185,    0.9546974703287516,\n",
       "                         1.0],\n",
       "      dtype=&#x27;float64&#x27;, name=&#x27;x&#x27;, length=150))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>log_x</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-ffc0beb1-80bb-41e8-8c7f-ad180ce1e2f0' class='xr-index-data-in' type='checkbox'/><label for='index-ffc0beb1-80bb-41e8-8c7f-ad180ce1e2f0' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([                 -3.0,   -2.9879518072289155,   -2.9759036144578315,\n",
       "          -2.963855421686747,   -2.9518072289156625,   -2.9397590361445785,\n",
       "          -2.927710843373494,   -2.9156626506024095,   -2.9036144578313254,\n",
       "          -2.891566265060241,\n",
       "       ...\n",
       "        -0.10843373493975905,  -0.09638554216867457,  -0.08433734939759008,\n",
       "        -0.07228915662650603,  -0.06024096385542155,  -0.04819277108433706,\n",
       "        -0.03614457831325302,  -0.02409638554216853, -0.012048192771084043,\n",
       "                         0.0],\n",
       "      dtype=&#x27;float64&#x27;, name=&#x27;log_x&#x27;, length=250))</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-e2320c2d-5659-4afc-bbe5-063e1bfd064f' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-e2320c2d-5659-4afc-bbe5-063e1bfd064f' class='xr-section-summary'  title='Expand/collapse section'>Attributes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'></dl></div></li></ul></div></div>"
      ],
      "text/plain": [
       "<xarray.Dataset> Size: 548kB\n",
       "Dimensions:                      (sample: 100, component: 2, x: 150,\n",
       "                                  grid: 2500, log_x: 250, sample_i: 100,\n",
       "                                  sample_j: 100)\n",
       "Coordinates:\n",
       "  * component                    (component) <U1 8B 'A' 'B'\n",
       "  * x                            (x) float64 1kB 0.001 0.001047 ... 0.9547 1.0\n",
       "  * log_x                        (log_x) float64 2kB -3.0 -2.988 ... 0.0\n",
       "Dimensions without coordinates: sample, grid, sample_i, sample_j\n",
       "Data variables:\n",
       "    composition                  (sample, component) float64 2kB 5.7 ... 5.104\n",
       "    ground_truth_labels          (sample) int64 800B 1 1 0 1 0 1 ... 1 1 1 0 1 1\n",
       "    measurement                  (sample, x) float64 120kB 1.915e+06 ... 1.885\n",
       "    composition_grid             (grid, component) float64 40kB 0.0 0.0 ... 25.0\n",
       "    normalized_composition       (sample, component) float64 2kB 0.57 ... 0.2042\n",
       "    normalized_composition_grid  (grid, component) float64 40kB 0.0 0.0 ... 1.0\n",
       "    derivative                   (sample, log_x) float64 200kB -3.82 ... -0.4063\n",
       "    similarity                   (sample_i, sample_j) float64 80kB 1.0 ... 1.0\n",
       "    labels                       (sample) int64 800B 1 1 0 1 0 1 ... 1 1 1 0 1 1\n",
       "    extrap_mean                  (grid) int64 20kB 1 1 1 1 1 1 1 ... 1 1 1 1 1 1\n",
       "    extrap_entropy               (grid) float64 20kB 0.5813 0.5687 ... 0.4603\n",
       "    extrap_y_prob                (grid) float64 20kB 0.5813 0.5687 ... 0.4603"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ds_result = my_first_pipeline.calculate(ds)\n",
    "ds_result"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "From this calculation, we get two new data variables: `extrap_y_entropy` and `extrap_mean`. These represent the most likely phase label and the entropy of this assignment. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[Text(0.5, 1.0, 'Entropy of Phase Label')]"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x325 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig,axes = plt.subplots(1,2,figsize=(8,3.25))\n",
    "\n",
    "plot_surface_mpl(ds_result,'composition_grid',component_dim='component',labels='extrap_mean',ax=axes[0])\n",
    "plot_surface_mpl(ds_result,'composition_grid',component_dim='component',labels='extrap_entropy',ax=axes[1])\n",
    "\n",
    "axes[0].set(title=\"Most Likely Phase Label\")\n",
    "axes[1].set(title=\"Entropy of Phase Label\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The right subplot is related to our confidence in the label prediction and is a powerful tool for finding label boundaries because, by construction, it is maximized at label boundaries. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Step 5: Calculate Next Sample"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now that we have a model that can predict phase labels and their uncertainty, we can use this information to select the next sample point. The `MaxValueAF` pipeline operation will select the composition with maximum entropy as the next point to measure, since high entropy indicates regions where the model is most uncertain about the phase label.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "PipelineOp                               input_variable ---> output_variable\n",
      "----------                               -----------------------------------\n",
      "0  ) <Standardize>                       composition ---> normalized_composition\n",
      "1  ) <Standardize>                       composition_grid ---> normalized_composition_grid\n",
      "2  ) <SavgolFilter>                      measurement ---> derivative\n",
      "3  ) <SimilarityMetric>                  derivative ---> similarity\n",
      "4  ) <SpectralClustering>                similarity ---> labels\n",
      "5  ) <GaussianProcessClassifier>         ['normalized_composition', 'labels', 'normalized_composition_grid'] ---> ['extrap_mean', 'extrap_entropy']\n",
      "6  ) <MaxValueAF>                        ['extrap_entropy', 'composition_grid'] ---> next_sample\n",
      "\n",
      "Input Variables\n",
      "---------------\n",
      "0) composition\n",
      "1) composition_grid\n",
      "2) measurement\n",
      "\n",
      "Output Variables\n",
      "----------------\n",
      "0) extrap_mean\n",
      "1) next_sample\n"
     ]
    }
   ],
   "source": [
    "with my_first_pipeline:\n",
    "    MaxValueAF(\n",
    "        input_variables=['extrap_entropy'],\n",
    "        output_variable='next_sample',\n",
    "        grid_variable='composition_grid',\n",
    "    )\n",
    "\n",
    "my_first_pipeline.print()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Let's run the pipeline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "085eea8cbbbb4104a87fe6de9926459e",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "  0%|          | 0/7 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div><svg style=\"position: absolute; width: 0; height: 0; overflow: hidden\">\n",
       "<defs>\n",
       "<symbol id=\"icon-database\" viewBox=\"0 0 32 32\">\n",
       "<path d=\"M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z\"></path>\n",
       "<path d=\"M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "<path d=\"M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "</symbol>\n",
       "<symbol id=\"icon-file-text2\" viewBox=\"0 0 32 32\">\n",
       "<path d=\"M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z\"></path>\n",
       "<path d=\"M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "</symbol>\n",
       "</defs>\n",
       "</svg>\n",
       "<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.\n",
       " *\n",
       " */\n",
       "\n",
       ":root {\n",
       "  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));\n",
       "  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));\n",
       "  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));\n",
       "  --xr-border-color: var(--jp-border-color2, #e0e0e0);\n",
       "  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);\n",
       "  --xr-background-color: var(--jp-layout-color0, white);\n",
       "  --xr-background-color-row-even: var(--jp-layout-color1, white);\n",
       "  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);\n",
       "}\n",
       "\n",
       "html[theme=\"dark\"],\n",
       "html[data-theme=\"dark\"],\n",
       "body[data-theme=\"dark\"],\n",
       "body.vscode-dark {\n",
       "  --xr-font-color0: rgba(255, 255, 255, 1);\n",
       "  --xr-font-color2: rgba(255, 255, 255, 0.54);\n",
       "  --xr-font-color3: rgba(255, 255, 255, 0.38);\n",
       "  --xr-border-color: #1f1f1f;\n",
       "  --xr-disabled-color: #515151;\n",
       "  --xr-background-color: #111111;\n",
       "  --xr-background-color-row-even: #111111;\n",
       "  --xr-background-color-row-odd: #313131;\n",
       "}\n",
       "\n",
       ".xr-wrap {\n",
       "  display: block !important;\n",
       "  min-width: 300px;\n",
       "  max-width: 700px;\n",
       "}\n",
       "\n",
       ".xr-text-repr-fallback {\n",
       "  /* fallback to plain text repr when CSS is not injected (untrusted notebook) */\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-header {\n",
       "  padding-top: 6px;\n",
       "  padding-bottom: 6px;\n",
       "  margin-bottom: 4px;\n",
       "  border-bottom: solid 1px var(--xr-border-color);\n",
       "}\n",
       "\n",
       ".xr-header > div,\n",
       ".xr-header > ul {\n",
       "  display: inline;\n",
       "  margin-top: 0;\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-obj-type,\n",
       ".xr-array-name {\n",
       "  margin-left: 2px;\n",
       "  margin-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-obj-type {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-sections {\n",
       "  padding-left: 0 !important;\n",
       "  display: grid;\n",
       "  grid-template-columns: 150px auto auto 1fr 0 20px 0 20px;\n",
       "}\n",
       "\n",
       ".xr-section-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-section-item input {\n",
       "  display: inline-block;\n",
       "  opacity: 0;\n",
       "  height: 0;\n",
       "}\n",
       "\n",
       ".xr-section-item input + label {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label {\n",
       "  cursor: pointer;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-item input:focus + label {\n",
       "  border: 2px solid var(--xr-font-color0);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label:hover {\n",
       "  color: var(--xr-font-color0);\n",
       "}\n",
       "\n",
       ".xr-section-summary {\n",
       "  grid-column: 1;\n",
       "  color: var(--xr-font-color2);\n",
       "  font-weight: 500;\n",
       "}\n",
       "\n",
       ".xr-section-summary > span {\n",
       "  display: inline-block;\n",
       "  padding-left: 0.5em;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in + label:before {\n",
       "  display: inline-block;\n",
       "  content: \"►\";\n",
       "  font-size: 11px;\n",
       "  width: 15px;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label:before {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label:before {\n",
       "  content: \"▼\";\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label > span {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-summary,\n",
       ".xr-section-inline-details {\n",
       "  padding-top: 4px;\n",
       "  padding-bottom: 4px;\n",
       "}\n",
       "\n",
       ".xr-section-inline-details {\n",
       "  grid-column: 2 / -1;\n",
       "}\n",
       "\n",
       ".xr-section-details {\n",
       "  display: none;\n",
       "  grid-column: 1 / -1;\n",
       "  margin-bottom: 5px;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked ~ .xr-section-details {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-array-wrap {\n",
       "  grid-column: 1 / -1;\n",
       "  display: grid;\n",
       "  grid-template-columns: 20px auto;\n",
       "}\n",
       "\n",
       ".xr-array-wrap > label {\n",
       "  grid-column: 1;\n",
       "  vertical-align: top;\n",
       "}\n",
       "\n",
       ".xr-preview {\n",
       "  color: var(--xr-font-color3);\n",
       "}\n",
       "\n",
       ".xr-array-preview,\n",
       ".xr-array-data {\n",
       "  padding: 0 5px !important;\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-array-data,\n",
       ".xr-array-in:checked ~ .xr-array-preview {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-array-in:checked ~ .xr-array-data,\n",
       ".xr-array-preview {\n",
       "  display: inline-block;\n",
       "}\n",
       "\n",
       ".xr-dim-list {\n",
       "  display: inline-block !important;\n",
       "  list-style: none;\n",
       "  padding: 0 !important;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list li {\n",
       "  display: inline-block;\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list:before {\n",
       "  content: \"(\";\n",
       "}\n",
       "\n",
       ".xr-dim-list:after {\n",
       "  content: \")\";\n",
       "}\n",
       "\n",
       ".xr-dim-list li:not(:last-child):after {\n",
       "  content: \",\";\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-has-index {\n",
       "  font-weight: bold;\n",
       "}\n",
       "\n",
       ".xr-var-list,\n",
       ".xr-var-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-var-item > div,\n",
       ".xr-var-item label,\n",
       ".xr-var-item > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-even);\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-var-item > .xr-var-name:hover span {\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-var-list > li:nth-child(odd) > div,\n",
       ".xr-var-list > li:nth-child(odd) > label,\n",
       ".xr-var-list > li:nth-child(odd) > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-odd);\n",
       "}\n",
       "\n",
       ".xr-var-name {\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-var-dims {\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-var-dtype {\n",
       "  grid-column: 3;\n",
       "  text-align: right;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-var-preview {\n",
       "  grid-column: 4;\n",
       "}\n",
       "\n",
       ".xr-index-preview {\n",
       "  grid-column: 2 / 5;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-var-name,\n",
       ".xr-var-dims,\n",
       ".xr-var-dtype,\n",
       ".xr-preview,\n",
       ".xr-attrs dt {\n",
       "  white-space: nowrap;\n",
       "  overflow: hidden;\n",
       "  text-overflow: ellipsis;\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-var-name:hover,\n",
       ".xr-var-dims:hover,\n",
       ".xr-var-dtype:hover,\n",
       ".xr-attrs dt:hover {\n",
       "  overflow: visible;\n",
       "  width: auto;\n",
       "  z-index: 1;\n",
       "}\n",
       "\n",
       ".xr-var-attrs,\n",
       ".xr-var-data,\n",
       ".xr-index-data {\n",
       "  display: none;\n",
       "  background-color: var(--xr-background-color) !important;\n",
       "  padding-bottom: 5px !important;\n",
       "}\n",
       "\n",
       ".xr-var-attrs-in:checked ~ .xr-var-attrs,\n",
       ".xr-var-data-in:checked ~ .xr-var-data,\n",
       ".xr-index-data-in:checked ~ .xr-index-data {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       ".xr-var-data > table {\n",
       "  float: right;\n",
       "}\n",
       "\n",
       ".xr-var-name span,\n",
       ".xr-var-data,\n",
       ".xr-index-name div,\n",
       ".xr-index-data,\n",
       ".xr-attrs {\n",
       "  padding-left: 25px !important;\n",
       "}\n",
       "\n",
       ".xr-attrs,\n",
       ".xr-var-attrs,\n",
       ".xr-var-data,\n",
       ".xr-index-data {\n",
       "  grid-column: 1 / -1;\n",
       "}\n",
       "\n",
       "dl.xr-attrs {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  display: grid;\n",
       "  grid-template-columns: 125px auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt,\n",
       ".xr-attrs dd {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  float: left;\n",
       "  padding-right: 10px;\n",
       "  width: auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt {\n",
       "  font-weight: normal;\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-attrs dt:hover span {\n",
       "  display: inline-block;\n",
       "  background: var(--xr-background-color);\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-attrs dd {\n",
       "  grid-column: 2;\n",
       "  white-space: pre-wrap;\n",
       "  word-break: break-all;\n",
       "}\n",
       "\n",
       ".xr-icon-database,\n",
       ".xr-icon-file-text2,\n",
       ".xr-no-icon {\n",
       "  display: inline-block;\n",
       "  vertical-align: middle;\n",
       "  width: 1em;\n",
       "  height: 1.5em !important;\n",
       "  stroke-width: 0;\n",
       "  stroke: currentColor;\n",
       "  fill: currentColor;\n",
       "}\n",
       "</style><pre class='xr-text-repr-fallback'>&lt;xarray.Dataset&gt; Size: 568kB\n",
       "Dimensions:                      (sample: 100, component: 2, x: 150,\n",
       "                                  grid: 2500, log_x: 250, sample_i: 100,\n",
       "                                  sample_j: 100, AF_sample: 1)\n",
       "Coordinates:\n",
       "  * component                    (component) &lt;U1 8B &#x27;A&#x27; &#x27;B&#x27;\n",
       "  * x                            (x) float64 1kB 0.001 0.001047 ... 0.9547 1.0\n",
       "  * log_x                        (log_x) float64 2kB -3.0 -2.988 ... 0.0\n",
       "Dimensions without coordinates: sample, grid, sample_i, sample_j, AF_sample\n",
       "Data variables: (12/14)\n",
       "    composition                  (sample, component) float64 2kB 5.7 ... 5.104\n",
       "    ground_truth_labels          (sample) int64 800B 1 1 0 1 0 1 ... 1 1 1 0 1 1\n",
       "    measurement                  (sample, x) float64 120kB 1.915e+06 ... 1.885\n",
       "    composition_grid             (grid, component) float64 40kB 0.0 0.0 ... 25.0\n",
       "    normalized_composition       (sample, component) float64 2kB 0.57 ... 0.2042\n",
       "    normalized_composition_grid  (grid, component) float64 40kB 0.0 0.0 ... 1.0\n",
       "    ...                           ...\n",
       "    labels                       (sample) int64 800B 1 1 0 1 0 1 ... 1 1 1 0 1 1\n",
       "    extrap_mean                  (grid) int64 20kB 1 1 1 1 1 1 1 ... 1 1 1 1 1 1\n",
       "    extrap_entropy               (grid) float64 20kB 0.5813 0.5687 ... 0.4603\n",
       "    extrap_y_prob                (grid) float64 20kB 0.5813 0.5687 ... 0.4603\n",
       "    decision_surface             (grid) float64 20kB 0.7655 0.7391 ... 0.512\n",
       "    next_sample                  (AF_sample, component) float64 16B 4.082 24.49</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.Dataset</div></div><ul class='xr-sections'><li class='xr-section-item'><input id='section-0ba901df-bbd5-409e-90fc-15f419409b30' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-0ba901df-bbd5-409e-90fc-15f419409b30' class='xr-section-summary'  title='Expand/collapse section'>Dimensions:</label><div class='xr-section-inline-details'><ul class='xr-dim-list'><li><span>sample</span>: 100</li><li><span class='xr-has-index'>component</span>: 2</li><li><span class='xr-has-index'>x</span>: 150</li><li><span>grid</span>: 2500</li><li><span class='xr-has-index'>log_x</span>: 250</li><li><span>sample_i</span>: 100</li><li><span>sample_j</span>: 100</li><li><span>AF_sample</span>: 1</li></ul></div><div class='xr-section-details'></div></li><li class='xr-section-item'><input id='section-e2986e13-f386-46cb-984a-0163ae1ed977' class='xr-section-summary-in' type='checkbox'  checked><label for='section-e2986e13-f386-46cb-984a-0163ae1ed977' class='xr-section-summary' >Coordinates: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>component</span></div><div class='xr-var-dims'>(component)</div><div class='xr-var-dtype'>&lt;U1</div><div class='xr-var-preview xr-preview'>&#x27;A&#x27; &#x27;B&#x27;</div><input id='attrs-ca42c254-0083-4ab3-83f6-b217cbde8518' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-ca42c254-0083-4ab3-83f6-b217cbde8518' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-4c36b3a2-121b-4ed3-9c8f-e4caa830faf0' class='xr-var-data-in' type='checkbox'><label for='data-4c36b3a2-121b-4ed3-9c8f-e4caa830faf0' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([&#x27;A&#x27;, &#x27;B&#x27;], dtype=&#x27;&lt;U1&#x27;)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>x</span></div><div class='xr-var-dims'>(x)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>0.001 0.001047 ... 0.9547 1.0</div><input id='attrs-9c3bcd15-6884-45f2-893c-7f5b375d5046' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-9c3bcd15-6884-45f2-893c-7f5b375d5046' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-66fed740-6543-4659-bdae-9e4de370161f' class='xr-var-data-in' type='checkbox'><label for='data-66fed740-6543-4659-bdae-9e4de370161f' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([0.001   , 0.001047, 0.001097, 0.001149, 0.001204, 0.001261, 0.001321,\n",
       "       0.001383, 0.001449, 0.001518, 0.00159 , 0.001665, 0.001744, 0.001827,\n",
       "       0.001914, 0.002005, 0.0021  , 0.002199, 0.002304, 0.002413, 0.002527,\n",
       "       0.002647, 0.002773, 0.002905, 0.003042, 0.003187, 0.003338, 0.003496,\n",
       "       0.003662, 0.003836, 0.004018, 0.004209, 0.004409, 0.004618, 0.004837,\n",
       "       0.005066, 0.005307, 0.005559, 0.005822, 0.006099, 0.006388, 0.006691,\n",
       "       0.007009, 0.007341, 0.00769 , 0.008055, 0.008437, 0.008837, 0.009256,\n",
       "       0.009696, 0.010156, 0.010638, 0.011142, 0.011671, 0.012225, 0.012805,\n",
       "       0.013413, 0.014049, 0.014716, 0.015414, 0.016146, 0.016912, 0.017714,\n",
       "       0.018555, 0.019435, 0.020358, 0.021324, 0.022335, 0.023395, 0.024505,\n",
       "       0.025668, 0.026886, 0.028162, 0.029498, 0.030898, 0.032364, 0.0339  ,\n",
       "       0.035509, 0.037194, 0.038959, 0.040807, 0.042744, 0.044772, 0.046897,\n",
       "       0.049122, 0.051453, 0.053894, 0.056452, 0.059131, 0.061936, 0.064875,\n",
       "       0.067954, 0.071179, 0.074556, 0.078094, 0.0818  , 0.085681, 0.089747,\n",
       "       0.094006, 0.098467, 0.103139, 0.108033, 0.11316 , 0.118529, 0.124154,\n",
       "       0.130045, 0.136216, 0.14268 , 0.14945 , 0.156542, 0.16397 , 0.171751,\n",
       "       0.179901, 0.188438, 0.197379, 0.206746, 0.216556, 0.226832, 0.237596,\n",
       "       0.24887 , 0.26068 , 0.27305 , 0.286006, 0.299578, 0.313794, 0.328684,\n",
       "       0.344281, 0.360618, 0.37773 , 0.395654, 0.414429, 0.434094, 0.454693,\n",
       "       0.476269, 0.498869, 0.522542, 0.547337, 0.57331 , 0.600514, 0.62901 ,\n",
       "       0.658858, 0.690122, 0.72287 , 0.757172, 0.793102, 0.830736, 0.870156,\n",
       "       0.911447, 0.954697, 1.      ])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>log_x</span></div><div class='xr-var-dims'>(log_x)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>-3.0 -2.988 -2.976 ... -0.01205 0.0</div><input id='attrs-c0e22672-8237-49f4-81e8-c0f06a9c63ab' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-c0e22672-8237-49f4-81e8-c0f06a9c63ab' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-2a30394b-32fc-4f1c-b180-2829b91c5364' class='xr-var-data-in' type='checkbox'><label for='data-2a30394b-32fc-4f1c-b180-2829b91c5364' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([-3.      , -2.987952, -2.975904, ..., -0.024096, -0.012048,  0.      ])</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-aa1d442a-46fd-4044-b262-bbe3d3a04f18' class='xr-section-summary-in' type='checkbox'  checked><label for='section-aa1d442a-46fd-4044-b262-bbe3d3a04f18' class='xr-section-summary' >Data variables: <span>(14)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span>composition</span></div><div class='xr-var-dims'>(sample, component)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>5.7 1.36 8.938 ... 0.478 5.104</div><input id='attrs-daeacde7-0ccc-4065-a197-4296242e2836' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-daeacde7-0ccc-4065-a197-4296242e2836' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-a5c57a89-c3f5-4775-bc40-b0907d341a5f' class='xr-var-data-in' type='checkbox'><label for='data-a5c57a89-c3f5-4775-bc40-b0907d341a5f' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[ 5.69995762,  1.36017531],\n",
       "       [ 8.93782024, 16.17384162],\n",
       "       [ 3.77901101, 19.69531938],\n",
       "       [ 9.82535598,  7.16351158],\n",
       "       [ 1.60370118, 23.73217969],\n",
       "       [ 7.90994751, 14.71385158],\n",
       "       [ 2.17465804,  4.75450299],\n",
       "       [ 9.30875652,  2.86311327],\n",
       "       [ 2.78926787,  0.04909185],\n",
       "       [ 5.0368155 , 17.80655234],\n",
       "       [ 1.18529693, 16.40857492],\n",
       "       [ 1.65214034, 19.7760677 ],\n",
       "       [ 2.73176727,  0.18850408],\n",
       "       [ 9.22314222,  7.21778243],\n",
       "       [ 8.33560023,  5.22074632],\n",
       "       [ 8.10711809, 22.36120136],\n",
       "       [ 4.10263293,  6.17733076],\n",
       "       [ 7.94096049, 10.98300725],\n",
       "       [ 6.58238609, 15.27804755],\n",
       "       [ 3.78026574, 20.5150357 ],\n",
       "...\n",
       "       [ 5.0825235 ,  5.36441059],\n",
       "       [ 8.50770583,  2.52786027],\n",
       "       [ 4.46324027,  6.75171924],\n",
       "       [ 8.52523439,  6.71058719],\n",
       "       [ 9.23218578, 20.72269505],\n",
       "       [ 6.7555881 , 10.24855529],\n",
       "       [ 7.67539066,  1.6795503 ],\n",
       "       [ 5.8397554 , 10.64947346],\n",
       "       [ 0.22478436, 18.35236821],\n",
       "       [ 8.83077635, 10.65541542],\n",
       "       [ 8.98441453,  0.03322162],\n",
       "       [ 0.11755953, 11.77699299],\n",
       "       [ 7.90192605, 18.94690136],\n",
       "       [ 7.42679234, 23.72441631],\n",
       "       [ 8.7338296 , 12.27428886],\n",
       "       [ 2.2094947 ,  9.43848935],\n",
       "       [ 8.92898549, 10.34927984],\n",
       "       [ 0.79890552, 16.37383273],\n",
       "       [ 2.50284147,  0.0800645 ],\n",
       "       [ 0.47797863,  5.10399908]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>ground_truth_labels</span></div><div class='xr-var-dims'>(sample)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>1 1 0 1 0 1 1 1 ... 1 1 1 1 1 0 1 1</div><input id='attrs-a6a617b6-69ec-4a51-af52-2697bb5aa11a' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-a6a617b6-69ec-4a51-af52-2697bb5aa11a' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-4611e294-a3da-4051-a59e-b129d773ae48' class='xr-var-data-in' type='checkbox'><label for='data-4611e294-a3da-4051-a59e-b129d773ae48' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1,\n",
       "       1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0,\n",
       "       1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1,\n",
       "       1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
       "       0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>measurement</span></div><div class='xr-var-dims'>(sample, x)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>1.915e+06 1.479e+06 ... 1.766 1.885</div><input id='attrs-cd749136-644e-4526-963b-74bde75c4ce9' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-cd749136-644e-4526-963b-74bde75c4ce9' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-89e7f99f-4b69-4b01-972b-b22bb21c70e0' class='xr-var-data-in' type='checkbox'><label for='data-89e7f99f-4b69-4b01-972b-b22bb21c70e0' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[1.91473866e+06, 1.47945621e+06, 1.36028471e+06, ...,\n",
       "        1.94187833e+00, 1.95975369e+00, 2.07151476e+00],\n",
       "       [1.97716281e+06, 1.35648739e+06, 1.63877436e+06, ...,\n",
       "        1.90008720e+00, 1.76008223e+00, 2.09466497e+00],\n",
       "       [9.73830160e-01, 7.68956928e-01, 1.03891097e+00, ...,\n",
       "        9.25128766e-01, 6.82586751e-01, 1.00886636e+00],\n",
       "       ...,\n",
       "       [1.42016873e+00, 8.73396019e-01, 1.23904051e+00, ...,\n",
       "        1.14723090e+00, 1.27145347e+00, 9.40494323e-01],\n",
       "       [1.96972776e+06, 1.80114117e+06, 1.63801728e+06, ...,\n",
       "        2.53037078e+00, 1.96144836e+00, 2.37164783e+00],\n",
       "       [2.34596686e+06, 1.77244286e+06, 1.36862577e+06, ...,\n",
       "        2.05730051e+00, 1.76616880e+00, 1.88473841e+00]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>composition_grid</span></div><div class='xr-var-dims'>(grid, component)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>0.0 0.0 0.2041 ... 25.0 10.0 25.0</div><input id='attrs-e05f086a-a870-4bd4-a8ca-c4c707d3f11e' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-e05f086a-a870-4bd4-a8ca-c4c707d3f11e' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-029e62e2-9008-4ad6-ba55-d90893ca157a' class='xr-var-data-in' type='checkbox'><label for='data-029e62e2-9008-4ad6-ba55-d90893ca157a' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([[ 0.        ,  0.        ],\n",
       "       [ 0.20408163,  0.        ],\n",
       "       [ 0.40816327,  0.        ],\n",
       "       ...,\n",
       "       [ 9.59183673, 25.        ],\n",
       "       [ 9.79591837, 25.        ],\n",
       "       [10.        , 25.        ]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>normalized_composition</span></div><div class='xr-var-dims'>(sample, component)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>0.57 0.05441 ... 0.0478 0.2042</div><input id='attrs-b72db5a4-61c0-4b4a-a4b1-953096f644aa' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-b72db5a4-61c0-4b4a-a4b1-953096f644aa' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-dee2be12-2002-4887-a34c-fd654aa241d5' class='xr-var-data-in' type='checkbox'><label for='data-dee2be12-2002-4887-a34c-fd654aa241d5' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd>Data normalized to have range 0 -&gt; 1</dd><dt><span>name :</span></dt><dd>Standardize</dd><dt><span>input_variable :</span></dt><dd>composition</dd><dt><span>output_variable :</span></dt><dd>normalized_composition</dd><dt><span>input_prefix :</span></dt><dd>None</dd><dt><span>output_prefix :</span></dt><dd>None</dd><dt><span>dim :</span></dt><dd>sample</dd><dt><span>component_dim :</span></dt><dd>component</dd><dt><span>min_val :</span></dt><dd>{&#x27;A&#x27;: 0.0, &#x27;B&#x27;: 0.0}</dd><dt><span>max_val :</span></dt><dd>{&#x27;A&#x27;: 10.0, &#x27;B&#x27;: 25.0}</dd><dt><span>scale_variable :</span></dt><dd>None</dd></dl></div><div class='xr-var-data'><pre>array([[0.56999576, 0.05440701],\n",
       "       [0.89378202, 0.64695366],\n",
       "       [0.3779011 , 0.78781278],\n",
       "       [0.9825356 , 0.28654046],\n",
       "       [0.16037012, 0.94928719],\n",
       "       [0.79099475, 0.58855406],\n",
       "       [0.2174658 , 0.19018012],\n",
       "       [0.93087565, 0.11452453],\n",
       "       [0.27892679, 0.00196367],\n",
       "       [0.50368155, 0.71226209],\n",
       "       [0.11852969, 0.656343  ],\n",
       "       [0.16521403, 0.79104271],\n",
       "       [0.27317673, 0.00754016],\n",
       "       [0.92231422, 0.2887113 ],\n",
       "       [0.83356002, 0.20882985],\n",
       "       [0.81071181, 0.89444805],\n",
       "       [0.41026329, 0.24709323],\n",
       "       [0.79409605, 0.43932029],\n",
       "       [0.65823861, 0.6111219 ],\n",
       "       [0.37802657, 0.82060143],\n",
       "...\n",
       "       [0.50825235, 0.21457642],\n",
       "       [0.85077058, 0.10111441],\n",
       "       [0.44632403, 0.27006877],\n",
       "       [0.85252344, 0.26842349],\n",
       "       [0.92321858, 0.8289078 ],\n",
       "       [0.67555881, 0.40994221],\n",
       "       [0.76753907, 0.06718201],\n",
       "       [0.58397554, 0.42597894],\n",
       "       [0.02247844, 0.73409473],\n",
       "       [0.88307764, 0.42621662],\n",
       "       [0.89844145, 0.00132886],\n",
       "       [0.01175595, 0.47107972],\n",
       "       [0.7901926 , 0.75787605],\n",
       "       [0.74267923, 0.94897665],\n",
       "       [0.87338296, 0.49097155],\n",
       "       [0.22094947, 0.37753957],\n",
       "       [0.89289855, 0.41397119],\n",
       "       [0.07989055, 0.65495331],\n",
       "       [0.25028415, 0.00320258],\n",
       "       [0.04779786, 0.20415996]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>normalized_composition_grid</span></div><div class='xr-var-dims'>(grid, component)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>0.0 0.0 0.02041 0.0 ... 1.0 1.0 1.0</div><input id='attrs-f4b6226c-0373-4c0c-9b40-2d2efe3bf873' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-f4b6226c-0373-4c0c-9b40-2d2efe3bf873' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-49e192a3-9b8c-452f-b8ce-9636c6bddc33' class='xr-var-data-in' type='checkbox'><label for='data-49e192a3-9b8c-452f-b8ce-9636c6bddc33' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd>Data normalized to have range 0 -&gt; 1</dd><dt><span>name :</span></dt><dd>Standardize</dd><dt><span>input_variable :</span></dt><dd>composition_grid</dd><dt><span>output_variable :</span></dt><dd>normalized_composition_grid</dd><dt><span>input_prefix :</span></dt><dd>None</dd><dt><span>output_prefix :</span></dt><dd>None</dd><dt><span>dim :</span></dt><dd>grid</dd><dt><span>component_dim :</span></dt><dd>component</dd><dt><span>min_val :</span></dt><dd>{&#x27;A&#x27;: 0.0, &#x27;B&#x27;: 0.0}</dd><dt><span>max_val :</span></dt><dd>{&#x27;A&#x27;: 10.0, &#x27;B&#x27;: 25.0}</dd><dt><span>scale_variable :</span></dt><dd>None</dd></dl></div><div class='xr-var-data'><pre>array([[0.        , 0.        ],\n",
       "       [0.02040816, 0.        ],\n",
       "       [0.04081633, 0.        ],\n",
       "       ...,\n",
       "       [0.95918367, 1.        ],\n",
       "       [0.97959184, 1.        ],\n",
       "       [1.        , 1.        ]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>derivative</span></div><div class='xr-var-dims'>(sample, log_x)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>-3.82 -3.825 ... -0.3897 -0.4063</div><input id='attrs-fa89ee4a-c450-426c-a84d-a0a1a84c9ca2' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-fa89ee4a-c450-426c-a84d-a0a1a84c9ca2' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-4af94ada-7d31-4187-b89c-c66628849262' class='xr-var-data-in' type='checkbox'><label for='data-4af94ada-7d31-4187-b89c-c66628849262' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd>Savitsky-Golay filtered data</dd><dt><span>name :</span></dt><dd>SavgolFilter</dd><dt><span>input_variable :</span></dt><dd>measurement</dd><dt><span>output_variable :</span></dt><dd>derivative</dd><dt><span>input_prefix :</span></dt><dd>None</dd><dt><span>output_prefix :</span></dt><dd>None</dd><dt><span>dim :</span></dt><dd>x</dd><dt><span>npts :</span></dt><dd>250</dd><dt><span>xlo :</span></dt><dd>None</dd><dt><span>xhi :</span></dt><dd>None</dd><dt><span>xlo_isel :</span></dt><dd>None</dd><dt><span>xhi_isel :</span></dt><dd>None</dd><dt><span>pedestal :</span></dt><dd>None</dd><dt><span>derivative :</span></dt><dd>1</dd><dt><span>apply_log_scale :</span></dt><dd>True</dd><dt><span>polyorder :</span></dt><dd>2</dd><dt><span>window_length :</span></dt><dd>50</dd></dl></div><div class='xr-var-data'><pre>array([[-3.82019992, -3.82462256, -3.82904519, ..., -0.35145453,\n",
       "        -0.36993018, -0.38840584],\n",
       "       [-4.2626048 , -4.24893257, -4.23526033, ...,  0.01349491,\n",
       "         0.01809932,  0.02270373],\n",
       "       [ 0.50261177,  0.4760206 ,  0.44942943, ...,  0.12473091,\n",
       "         0.13576784,  0.14680477],\n",
       "       ...,\n",
       "       [-0.24159282, -0.24193045, -0.24226809, ...,  0.52407629,\n",
       "         0.54400047,  0.56392465],\n",
       "       [-3.67922195, -3.69182355, -3.70442514, ...,  0.30180559,\n",
       "         0.31353524,  0.32526489],\n",
       "       [-3.96638732, -3.97110223, -3.97581713, ..., -0.37305086,\n",
       "        -0.389679  , -0.40630713]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>similarity</span></div><div class='xr-var-dims'>(sample_i, sample_j)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>1.0 0.9974 0.9503 ... 0.9974 1.0</div><input id='attrs-c0563aad-6635-40a4-bfa0-fe610cf02e29' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-c0563aad-6635-40a4-bfa0-fe610cf02e29' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-c4f24c98-6e14-4fbc-bfba-6012812e2d75' class='xr-var-data-in' type='checkbox'><label for='data-c4f24c98-6e14-4fbc-bfba-6012812e2d75' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>metric :</span></dt><dd>laplacian</dd><dt><span>gamma :</span></dt><dd>0.0001</dd><dt><span>name :</span></dt><dd>SimilarityMetric</dd><dt><span>input_variable :</span></dt><dd>derivative</dd><dt><span>output_variable :</span></dt><dd>similarity</dd><dt><span>input_prefix :</span></dt><dd>None</dd><dt><span>output_prefix :</span></dt><dd>None</dd><dt><span>sample_dim :</span></dt><dd>sample</dd><dt><span>constrain_same :</span></dt><dd>[]</dd><dt><span>constrain_different :</span></dt><dd>[]</dd></dl></div><div class='xr-var-data'><pre>array([[1.        , 0.99741833, 0.950302  , ..., 0.95081738, 0.99761626,\n",
       "        0.99830741],\n",
       "       [0.99741833, 1.        , 0.95025158, ..., 0.95041344, 0.99752619,\n",
       "        0.99755674],\n",
       "       [0.950302  , 0.95025158, 1.        , ..., 0.99504435, 0.9505596 ,\n",
       "        0.95006123],\n",
       "       ...,\n",
       "       [0.95081738, 0.95041344, 0.99504435, ..., 1.        , 0.95158475,\n",
       "        0.95047502],\n",
       "       [0.99761626, 0.99752619, 0.9505596 , ..., 0.95158475, 1.        ,\n",
       "        0.99740548],\n",
       "       [0.99830741, 0.99755674, 0.95006123, ..., 0.95047502, 0.99740548,\n",
       "        1.        ]])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>labels</span></div><div class='xr-var-dims'>(sample)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>1 1 0 1 0 1 1 1 ... 1 1 1 1 1 0 1 1</div><input id='attrs-ad98a644-cb8d-4892-bf17-b691a3f60cdc' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-ad98a644-cb8d-4892-bf17-b691a3f60cdc' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-19ead5d5-4971-4d49-8c7e-dbc3b47bf91b' class='xr-var-data-in' type='checkbox'><label for='data-19ead5d5-4971-4d49-8c7e-dbc3b47bf91b' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>n_phases :</span></dt><dd>2</dd><dt><span>name :</span></dt><dd>SpectralClustering</dd><dt><span>input_variable :</span></dt><dd>similarity</dd><dt><span>output_variable :</span></dt><dd>labels</dd><dt><span>input_prefix :</span></dt><dd>None</dd><dt><span>output_prefix :</span></dt><dd>None</dd><dt><span>dim :</span></dt><dd>sample</dd><dt><span>use_silhouette :</span></dt><dd>False</dd></dl></div><div class='xr-var-data'><pre>array([1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1,\n",
       "       1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0,\n",
       "       1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1,\n",
       "       1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
       "       0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>extrap_mean</span></div><div class='xr-var-dims'>(grid)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>1 1 1 1 1 1 1 1 ... 1 1 1 1 1 1 1 1</div><input id='attrs-ff650e0e-f728-4ed6-8d55-b3ea492638a8' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-ff650e0e-f728-4ed6-8d55-b3ea492638a8' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-4533096e-44bd-49cc-83c2-b95213eaa600' class='xr-var-data-in' type='checkbox'><label for='data-4533096e-44bd-49cc-83c2-b95213eaa600' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>name :</span></dt><dd>GaussianProcessClassifier</dd><dt><span>input_variable :</span></dt><dd>[&#x27;normalized_composition&#x27;, &#x27;labels&#x27;, &#x27;normalized_composition_grid&#x27;]</dd><dt><span>output_variable :</span></dt><dd>[&#x27;extrap_mean&#x27;, &#x27;extrap_entropy&#x27;]</dd><dt><span>input_prefix :</span></dt><dd>None</dd><dt><span>output_prefix :</span></dt><dd>extrap</dd><dt><span>feature_input_variable :</span></dt><dd>normalized_composition</dd><dt><span>predictor_input_variable :</span></dt><dd>labels</dd><dt><span>grid_variable :</span></dt><dd>normalized_composition_grid</dd><dt><span>sample_dim :</span></dt><dd>sample</dd><dt><span>grid_dim :</span></dt><dd>grid</dd><dt><span>grid :</span></dt><dd>&lt;xarray.DataArray &#x27;normalized_composition_grid&#x27; (grid: 2500, component: 2)&gt; Size: 40kB\n",
       "array([[0.        , 0.        ],\n",
       "       [0.02040816, 0.        ],\n",
       "       [0.04081633, 0.        ],\n",
       "       ...,\n",
       "       [0.95918367, 1.        ],\n",
       "       [0.97959184, 1.        ],\n",
       "       [1.        , 1.        ]])\n",
       "Coordinates:\n",
       "  * component  (component) &lt;U1 8B &#x27;A&#x27; &#x27;B&#x27;\n",
       "Dimensions without coordinates: grid\n",
       "Attributes:\n",
       "    description:      Data normalized to have range 0 -&gt; 1\n",
       "    name:             Standardize\n",
       "    input_variable:   composition_grid\n",
       "    output_variable:  normalized_composition_grid\n",
       "    input_prefix:     None\n",
       "    output_prefix:    None\n",
       "    dim:              grid\n",
       "    component_dim:    component\n",
       "    min_val:          {&#x27;A&#x27;: 0.0, &#x27;B&#x27;: 0.0}\n",
       "    max_val:          {&#x27;A&#x27;: 10.0, &#x27;B&#x27;: 25.0}\n",
       "    scale_variable:   None</dd><dt><span>optimizer :</span></dt><dd>fmin_l_bfgs_b</dd></dl></div><div class='xr-var-data'><pre>array([1, 1, 1, ..., 1, 1, 1])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>extrap_entropy</span></div><div class='xr-var-dims'>(grid)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>0.5813 0.5687 ... 0.4565 0.4603</div><input id='attrs-f94257ca-3bf2-4992-a7fc-b7738b66eb98' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-f94257ca-3bf2-4992-a7fc-b7738b66eb98' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-37dde48e-e61f-4922-aec2-4996f66ca09e' class='xr-var-data-in' type='checkbox'><label for='data-37dde48e-e61f-4922-aec2-4996f66ca09e' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>name :</span></dt><dd>GaussianProcessClassifier</dd><dt><span>input_variable :</span></dt><dd>[&#x27;normalized_composition&#x27;, &#x27;labels&#x27;, &#x27;normalized_composition_grid&#x27;]</dd><dt><span>output_variable :</span></dt><dd>[&#x27;extrap_mean&#x27;, &#x27;extrap_entropy&#x27;]</dd><dt><span>input_prefix :</span></dt><dd>None</dd><dt><span>output_prefix :</span></dt><dd>extrap</dd><dt><span>feature_input_variable :</span></dt><dd>normalized_composition</dd><dt><span>predictor_input_variable :</span></dt><dd>labels</dd><dt><span>grid_variable :</span></dt><dd>normalized_composition_grid</dd><dt><span>sample_dim :</span></dt><dd>sample</dd><dt><span>grid_dim :</span></dt><dd>grid</dd><dt><span>grid :</span></dt><dd>&lt;xarray.DataArray &#x27;normalized_composition_grid&#x27; (grid: 2500, component: 2)&gt; Size: 40kB\n",
       "array([[0.        , 0.        ],\n",
       "       [0.02040816, 0.        ],\n",
       "       [0.04081633, 0.        ],\n",
       "       ...,\n",
       "       [0.95918367, 1.        ],\n",
       "       [0.97959184, 1.        ],\n",
       "       [1.        , 1.        ]])\n",
       "Coordinates:\n",
       "  * component  (component) &lt;U1 8B &#x27;A&#x27; &#x27;B&#x27;\n",
       "Dimensions without coordinates: grid\n",
       "Attributes:\n",
       "    description:      Data normalized to have range 0 -&gt; 1\n",
       "    name:             Standardize\n",
       "    input_variable:   composition_grid\n",
       "    output_variable:  normalized_composition_grid\n",
       "    input_prefix:     None\n",
       "    output_prefix:    None\n",
       "    dim:              grid\n",
       "    component_dim:    component\n",
       "    min_val:          {&#x27;A&#x27;: 0.0, &#x27;B&#x27;: 0.0}\n",
       "    max_val:          {&#x27;A&#x27;: 10.0, &#x27;B&#x27;: 25.0}\n",
       "    scale_variable:   None</dd><dt><span>optimizer :</span></dt><dd>fmin_l_bfgs_b</dd></dl></div><div class='xr-var-data'><pre>array([0.58125708, 0.56865533, 0.55554833, ..., 0.45390195, 0.45652977,\n",
       "       0.46031056])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>extrap_y_prob</span></div><div class='xr-var-dims'>(grid)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>0.5813 0.5687 ... 0.4565 0.4603</div><input id='attrs-5427b008-7df9-4b03-b94b-b4c0dd07181c' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-5427b008-7df9-4b03-b94b-b4c0dd07181c' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-a1302e9f-c171-4eee-813d-8fd2ddd8a166' class='xr-var-data-in' type='checkbox'><label for='data-a1302e9f-c171-4eee-813d-8fd2ddd8a166' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>name :</span></dt><dd>GaussianProcessClassifier</dd><dt><span>input_variable :</span></dt><dd>[&#x27;normalized_composition&#x27;, &#x27;labels&#x27;, &#x27;normalized_composition_grid&#x27;]</dd><dt><span>output_variable :</span></dt><dd>[&#x27;extrap_mean&#x27;, &#x27;extrap_entropy&#x27;]</dd><dt><span>input_prefix :</span></dt><dd>None</dd><dt><span>output_prefix :</span></dt><dd>extrap</dd><dt><span>feature_input_variable :</span></dt><dd>normalized_composition</dd><dt><span>predictor_input_variable :</span></dt><dd>labels</dd><dt><span>grid_variable :</span></dt><dd>normalized_composition_grid</dd><dt><span>sample_dim :</span></dt><dd>sample</dd><dt><span>grid_dim :</span></dt><dd>grid</dd><dt><span>grid :</span></dt><dd>&lt;xarray.DataArray &#x27;normalized_composition_grid&#x27; (grid: 2500, component: 2)&gt; Size: 40kB\n",
       "array([[0.        , 0.        ],\n",
       "       [0.02040816, 0.        ],\n",
       "       [0.04081633, 0.        ],\n",
       "       ...,\n",
       "       [0.95918367, 1.        ],\n",
       "       [0.97959184, 1.        ],\n",
       "       [1.        , 1.        ]])\n",
       "Coordinates:\n",
       "  * component  (component) &lt;U1 8B &#x27;A&#x27; &#x27;B&#x27;\n",
       "Dimensions without coordinates: grid\n",
       "Attributes:\n",
       "    description:      Data normalized to have range 0 -&gt; 1\n",
       "    name:             Standardize\n",
       "    input_variable:   composition_grid\n",
       "    output_variable:  normalized_composition_grid\n",
       "    input_prefix:     None\n",
       "    output_prefix:    None\n",
       "    dim:              grid\n",
       "    component_dim:    component\n",
       "    min_val:          {&#x27;A&#x27;: 0.0, &#x27;B&#x27;: 0.0}\n",
       "    max_val:          {&#x27;A&#x27;: 10.0, &#x27;B&#x27;: 25.0}\n",
       "    scale_variable:   None</dd><dt><span>optimizer :</span></dt><dd>fmin_l_bfgs_b</dd></dl></div><div class='xr-var-data'><pre>array([0.58125708, 0.56865533, 0.55554833, ..., 0.45390195, 0.45652977,\n",
       "       0.46031056])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>decision_surface</span></div><div class='xr-var-dims'>(grid)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>0.7655 0.7391 ... 0.5041 0.512</div><input id='attrs-c2fb8ade-6364-49bd-ae71-1285a132bac8' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-c2fb8ade-6364-49bd-ae71-1285a132bac8' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-f9b87b0a-6431-43fd-9013-27bd4dfc6304' class='xr-var-data-in' type='checkbox'><label for='data-f9b87b0a-6431-43fd-9013-27bd4dfc6304' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>description :</span></dt><dd>The final acquisition surface that is evaluated to determine the next_sample</dd><dt><span>name :</span></dt><dd>MaxValueAF</dd><dt><span>input_variable :</span></dt><dd>[&#x27;extrap_entropy&#x27;, &#x27;composition_grid&#x27;]</dd><dt><span>output_variable :</span></dt><dd>next_sample</dd><dt><span>input_prefix :</span></dt><dd>None</dd><dt><span>output_prefix :</span></dt><dd>None</dd><dt><span>input_variables :</span></dt><dd>[&#x27;extrap_entropy&#x27;]</dd><dt><span>excluded_comps_variables :</span></dt><dd>None</dd><dt><span>excluded_comps_dim :</span></dt><dd>None</dd><dt><span>count :</span></dt><dd>1</dd><dt><span>grid_variable :</span></dt><dd>composition_grid</dd><dt><span>grid_dim :</span></dt><dd>grid</dd><dt><span>decision_rtol :</span></dt><dd>0.05</dd><dt><span>exclusion_radius :</span></dt><dd>0.001</dd><dt><span>combine_coeffs :</span></dt><dd>None</dd><dt><span>acquisition :</span></dt><dd>&lt;xarray.Dataset&gt; Size: 60kB\n",
       "Dimensions:           (component: 2, grid: 2500)\n",
       "Coordinates:\n",
       "  * component         (component) &lt;U1 8B &#x27;A&#x27; &#x27;B&#x27;\n",
       "Dimensions without coordinates: grid\n",
       "Data variables:\n",
       "    comp_grid         (grid, component) float64 40kB 0.0 0.0 ... 10.0 25.0\n",
       "    decision_surface  (grid) float64 20kB 0.7655 0.7391 0.7116 ... 0.5041 0.512</dd></dl></div><div class='xr-var-data'><pre>array([0.76549835, 0.73908732, 0.7116174 , ..., 0.49858474, 0.50409217,\n",
       "       0.51201603])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>next_sample</span></div><div class='xr-var-dims'>(AF_sample, component)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>4.082 24.49</div><input id='attrs-033ffadb-e728-4749-b3d4-ec8e4acd21a3' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-033ffadb-e728-4749-b3d4-ec8e4acd21a3' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-b20dcb21-cd5c-4c54-9672-a33339bd87ce' class='xr-var-data-in' type='checkbox'><label for='data-b20dcb21-cd5c-4c54-9672-a33339bd87ce' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>name :</span></dt><dd>MaxValueAF</dd><dt><span>input_variable :</span></dt><dd>[&#x27;extrap_entropy&#x27;, &#x27;composition_grid&#x27;]</dd><dt><span>output_variable :</span></dt><dd>next_sample</dd><dt><span>input_prefix :</span></dt><dd>None</dd><dt><span>output_prefix :</span></dt><dd>None</dd><dt><span>input_variables :</span></dt><dd>[&#x27;extrap_entropy&#x27;]</dd><dt><span>excluded_comps_variables :</span></dt><dd>None</dd><dt><span>excluded_comps_dim :</span></dt><dd>None</dd><dt><span>count :</span></dt><dd>1</dd><dt><span>grid_variable :</span></dt><dd>composition_grid</dd><dt><span>grid_dim :</span></dt><dd>grid</dd><dt><span>decision_rtol :</span></dt><dd>0.05</dd><dt><span>exclusion_radius :</span></dt><dd>0.001</dd><dt><span>combine_coeffs :</span></dt><dd>None</dd><dt><span>acquisition :</span></dt><dd>&lt;xarray.Dataset&gt; Size: 60kB\n",
       "Dimensions:           (component: 2, grid: 2500)\n",
       "Coordinates:\n",
       "  * component         (component) &lt;U1 8B &#x27;A&#x27; &#x27;B&#x27;\n",
       "Dimensions without coordinates: grid\n",
       "Data variables:\n",
       "    comp_grid         (grid, component) float64 40kB 0.0 0.0 ... 10.0 25.0\n",
       "    decision_surface  (grid) float64 20kB 0.7655 0.7391 0.7116 ... 0.5041 0.512</dd></dl></div><div class='xr-var-data'><pre>array([[ 4.08163265, 24.48979592]])</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-d9408d1a-476c-4744-ace7-ddb310e320e5' class='xr-section-summary-in' type='checkbox'  ><label for='section-d9408d1a-476c-4744-ace7-ddb310e320e5' class='xr-section-summary' >Indexes: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-index-name'><div>component</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-f17accfe-69aa-4fe3-8099-967de13acadf' class='xr-index-data-in' type='checkbox'/><label for='index-f17accfe-69aa-4fe3-8099-967de13acadf' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([&#x27;A&#x27;, &#x27;B&#x27;], dtype=&#x27;object&#x27;, name=&#x27;component&#x27;))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>x</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-e557654f-14f6-4b6c-a661-55732ff4f12b' class='xr-index-data-in' type='checkbox'/><label for='index-e557654f-14f6-4b6c-a661-55732ff4f12b' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([                0.001, 0.0010474522360006332, 0.0010971561867027272,\n",
       "       0.0011492187010036998, 0.0012037516980200685, 0.0012608724076806808,\n",
       "        0.001320703622736631, 0.0013833739627296209,  0.001449018150486198,\n",
       "       0.0015177773017322714,\n",
       "       ...\n",
       "          0.6588581861506815,    0.6901224802908528,    0.7228703350949566,\n",
       "            0.75717214883374,    0.7931016603333051,    0.8307361074919352,\n",
       "          0.8701563933188907,    0.9114472598521185,    0.9546974703287516,\n",
       "                         1.0],\n",
       "      dtype=&#x27;float64&#x27;, name=&#x27;x&#x27;, length=150))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>log_x</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-1a961c88-631c-442c-a0b5-a716cc10d67d' class='xr-index-data-in' type='checkbox'/><label for='index-1a961c88-631c-442c-a0b5-a716cc10d67d' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([                 -3.0,   -2.9879518072289155,   -2.9759036144578315,\n",
       "          -2.963855421686747,   -2.9518072289156625,   -2.9397590361445785,\n",
       "          -2.927710843373494,   -2.9156626506024095,   -2.9036144578313254,\n",
       "          -2.891566265060241,\n",
       "       ...\n",
       "        -0.10843373493975905,  -0.09638554216867457,  -0.08433734939759008,\n",
       "        -0.07228915662650603,  -0.06024096385542155,  -0.04819277108433706,\n",
       "        -0.03614457831325302,  -0.02409638554216853, -0.012048192771084043,\n",
       "                         0.0],\n",
       "      dtype=&#x27;float64&#x27;, name=&#x27;log_x&#x27;, length=250))</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-fd90e86c-ddad-4c5f-bed8-3c92dbed5726' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-fd90e86c-ddad-4c5f-bed8-3c92dbed5726' class='xr-section-summary'  title='Expand/collapse section'>Attributes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'></dl></div></li></ul></div></div>"
      ],
      "text/plain": [
       "<xarray.Dataset> Size: 568kB\n",
       "Dimensions:                      (sample: 100, component: 2, x: 150,\n",
       "                                  grid: 2500, log_x: 250, sample_i: 100,\n",
       "                                  sample_j: 100, AF_sample: 1)\n",
       "Coordinates:\n",
       "  * component                    (component) <U1 8B 'A' 'B'\n",
       "  * x                            (x) float64 1kB 0.001 0.001047 ... 0.9547 1.0\n",
       "  * log_x                        (log_x) float64 2kB -3.0 -2.988 ... 0.0\n",
       "Dimensions without coordinates: sample, grid, sample_i, sample_j, AF_sample\n",
       "Data variables: (12/14)\n",
       "    composition                  (sample, component) float64 2kB 5.7 ... 5.104\n",
       "    ground_truth_labels          (sample) int64 800B 1 1 0 1 0 1 ... 1 1 1 0 1 1\n",
       "    measurement                  (sample, x) float64 120kB 1.915e+06 ... 1.885\n",
       "    composition_grid             (grid, component) float64 40kB 0.0 0.0 ... 25.0\n",
       "    normalized_composition       (sample, component) float64 2kB 0.57 ... 0.2042\n",
       "    normalized_composition_grid  (grid, component) float64 40kB 0.0 0.0 ... 1.0\n",
       "    ...                           ...\n",
       "    labels                       (sample) int64 800B 1 1 0 1 0 1 ... 1 1 1 0 1 1\n",
       "    extrap_mean                  (grid) int64 20kB 1 1 1 1 1 1 1 ... 1 1 1 1 1 1\n",
       "    extrap_entropy               (grid) float64 20kB 0.5813 0.5687 ... 0.4603\n",
       "    extrap_y_prob                (grid) float64 20kB 0.5813 0.5687 ... 0.4603\n",
       "    decision_surface             (grid) float64 20kB 0.7655 0.7391 ... 0.512\n",
       "    next_sample                  (AF_sample, component) float64 16B 4.082 24.49"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ds_result = my_first_pipeline.calculate(ds)\n",
    "ds_result"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Let's plot the next composition on the mean and entropy plots:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[Text(0.5, 1.0, 'Entropy of Phase Label')]"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x325 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig,axes = plt.subplots(1,2,figsize=(8,3.25))\n",
    "\n",
    "plot_surface_mpl(ds_result,'composition_grid',component_dim='component',labels='extrap_mean',ax=axes[0])\n",
    "plot_surface_mpl(ds_result,'composition_grid',component_dim='component',labels='extrap_entropy',ax=axes[1])\n",
    "\n",
    "plot_scatter_mpl(ds_result,'next_sample',component_dim='component',labels=[-1],marker='x',color='red',s=100,ax=axes[0])\n",
    "plot_scatter_mpl(ds_result,'next_sample',component_dim='component',labels=[-1],marker='x',color='red',s=100,ax=axes[1])\n",
    "\n",
    "axes[0].set(title=\"Most Likely Phase Label\")\n",
    "axes[1].set(title=\"Entropy of Phase Label\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "See that the red X is placed near the boundary of the two phases. Running the pipeline several times, you should see the X move about the bright region of entropy. This is because the `MaxValueAF` acquisition function doesn't choose the absolute maximum, but rather randomly chooses from the top `acquisition_rtol` percent of the entropy."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Full Pipeline"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "With that, we have a full `Pipeline` which defines the behavior of a decision agent! Let's view the whole pipeline defined in a single context:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "PipelineOp                               input_variable ---> output_variable\n",
      "----------                               -----------------------------------\n",
      "0  ) <Standardize>                       composition ---> normalized_composition\n",
      "1  ) <Standardize>                       composition_grid ---> normalized_composition_grid\n",
      "2  ) <SavgolFilter>                      measurement ---> derivative\n",
      "3  ) <SimilarityMetric>                  derivative ---> similarity\n",
      "4  ) <SpectralClustering>                similarity ---> labels\n",
      "5  ) <GaussianProcessClassifier>         ['normalized_composition', 'labels', 'normalized_composition_grid'] ---> ['extrap_mean', 'extrap_entropy']\n",
      "6  ) <MaxValueAF>                        ['extrap_entropy', 'composition_grid'] ---> next_sample\n",
      "\n",
      "Input Variables\n",
      "---------------\n",
      "0) composition\n",
      "1) composition_grid\n",
      "2) measurement\n",
      "\n",
      "Output Variables\n",
      "----------------\n",
      "0) extrap_mean\n",
      "1) next_sample\n"
     ]
    }
   ],
   "source": [
    "with Pipeline() as my_first_pipeline:\n",
    "\n",
    "    Standardize(\n",
    "        input_variable='composition',\n",
    "        output_variable='normalized_composition',\n",
    "        dim='sample',\n",
    "        component_dim='component',\n",
    "        min_val={'A':0.0,'B':0.0},\n",
    "        max_val={'A':10.0,'B':25.0},\n",
    "    )\n",
    "\n",
    "    Standardize(\n",
    "        input_variable='composition_grid',\n",
    "        output_variable='normalized_composition_grid',\n",
    "        dim='grid',\n",
    "        component_dim='component',\n",
    "        min_val={'A':0.0,'B':0.0},\n",
    "        max_val={'A':10.0,'B':25.0},\n",
    "    )\n",
    "\n",
    "    SavgolFilter(\n",
    "        input_variable='measurement', \n",
    "        output_variable='derivative', \n",
    "        dim='x', \n",
    "        derivative=1\n",
    "        )\n",
    "\n",
    "    Similarity(\n",
    "        input_variable='derivative', \n",
    "        output_variable='similarity', \n",
    "        sample_dim='sample',\n",
    "        params={'metric': 'laplacian','gamma':1e-4}\n",
    "        )\n",
    "\n",
    "    SpectralClustering(\n",
    "        input_variable='similarity',\n",
    "        output_variable='labels',\n",
    "        dim='sample',\n",
    "        params={'n_phases': 2}\n",
    "        )\n",
    "\n",
    "    \n",
    "    GaussianProcessClassifier(\n",
    "        feature_input_variable='normalized_composition',\n",
    "        predictor_input_variable='labels',\n",
    "        output_prefix='extrap',\n",
    "        sample_dim='sample',\n",
    "        grid_variable='normalized_composition_grid',\n",
    "        grid_dim='grid',\n",
    "    )\n",
    "\n",
    "    MaxValueAF(\n",
    "        input_variables=['extrap_entropy'],\n",
    "        output_variable='next_sample',\n",
    "        grid_variable='composition_grid',\n",
    "    )\n",
    "\n",
    "my_first_pipeline.print()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can also visualize the full pipeline using the `.draw` and `.draw_plotly` methods"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x800 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "my_first_pipeline.draw();"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "While this doesn't always produce the more visually appealling graphs, it is a powerful way to check the consistency and flow of complex pipelines. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Conclusion"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In this tutorial, we learned how to build pipelines in using `AFL.double_agent` by:\n",
    "\n",
    "- Creating a new pipeline using `Pipeline()`\n",
    "- Adding data processing steps like normalization and derivative calculation\n",
    "- Implementing spectral clustering for phase identification\n",
    "- Using Gaussian Process classification to extrapolate phase boundaries\n",
    "- Adding active learning with acquisition functions to guide further sampling\n",
    "- Visualizing the pipeline structure and results at each step\n",
    "\n",
    "The pipeline we built demonstrates a complete workflow - from raw data processing through machine learning and active learning. This modular approach allows us to easily modify individual components while maintaining a clear data flow between steps.\n",
    "\n",
    "For more examples of AFL pipelines and components, check out the other tutorials and examples in the documentation.\n",
    "\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "venv",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.10"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
